{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0","program":"/Users/matt/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","pom","/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=4ce08a16f0221d7f","-C","extra-filename=-4ce08a16f0221d7f","--out-dir","/Users/matt/GitHub/mdbook-latexy/target/rls/debug/deps","-L","dependency=/Users/matt/GitHub/mdbook-latexy/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/Users/matt/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/matt/GitHub/mdbook-latexy/target/rls/debug/deps/libpom-4ce08a16f0221d7f.rmeta"},"prelude":{"crate_id":{"name":"pom","disambiguator":[1405485626313820612,0]},"crate_root":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src","external_crates":[{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[5327680806253035642,0]}},{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[3474867148648759986,0]}},{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[5062925168166713036,0]}},{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[2981460363035574205,0]}},{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[17736094580601255721,0]}},{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[10052842426541007562,0]}},{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9489815130599098901,0]}},{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[3346726902215706372,0]}},{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[3873550637736747779,0]}},{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4549466995013025454,0]}},{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[5157751798851432137,0]}},{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[17289477099079096810,0]}},{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[9019874491848494796,0]}},{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[5361552711123437457,0]}},{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[1973549709176203698,0]}},{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[16289716248128265453,0]}},{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[1392457260957006495,0]}}],"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/lib.rs","byte_start":0,"byte_end":445,"line_start":1,"line_end":18,"column_start":1,"column_end":55}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":4},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/lib.rs","byte_start":228,"byte_end":233,"line_start":13,"line_end":13,"column_start":17,"column_end":22},"alias_span":null,"name":"Input","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":405},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/lib.rs","byte_start":235,"byte_end":244,"line_start":13,"line_end":13,"column_start":24,"column_end":33},"alias_span":null,"name":"DataInput","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":418},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/lib.rs","byte_start":246,"byte_end":255,"line_start":13,"line_end":13,"column_start":35,"column_end":44},"alias_span":null,"name":"TextInput","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":48},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/lib.rs","byte_start":275,"byte_end":281,"line_start":14,"line_end":14,"column_start":18,"column_end":24},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":428},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/lib.rs","byte_start":283,"byte_end":288,"line_start":14,"line_end":14,"column_start":26,"column_end":31},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":51},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/lib.rs","byte_start":306,"byte_end":311,"line_start":15,"line_end":15,"column_start":16,"column_end":21},"alias_span":null,"name":"Train","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/lib.rs","byte_start":0,"byte_end":445,"line_start":1,"line_end":18,"column_start":1,"column_end":55},"name":"","qualname":"::","value":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":33},{"krate":0,"index":50},{"krate":0,"index":65},{"krate":0,"index":114},{"krate":0,"index":162},{"krate":0,"index":374},{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":386},{"krate":0,"index":389},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":396},{"krate":0,"index":399},{"krate":0,"index":402}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":4},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/input.rs","byte_start":534,"byte_end":539,"line_start":2,"line_end":2,"column_start":11,"column_end":16},"name":"Input","qualname":"::input::Input","value":"Input<T>","parent":null,"children":[{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10}],"decl_id":null,"docs":" Parser input is generic over terminal type, which is usually u8 or char.\n","sig":null,"attributes":[{"value":"/ Parser input is generic over terminal type, which is usually u8 or char.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/input.rs","byte_start":447,"byte_end":523,"line_start":1,"line_end":1,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":6},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/input.rs","byte_start":590,"byte_end":598,"line_start":4,"line_end":4,"column_start":5,"column_end":13},"name":"position","qualname":"::input::Input::position","value":"pub fn position(&Self) -> usize","parent":{"krate":0,"index":4},"children":[],"decl_id":null,"docs":" Get current position.\n","sig":null,"attributes":[{"value":"/ Get current position.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/input.rs","byte_start":560,"byte_end":585,"line_start":3,"line_end":3,"column_start":2,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":7},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/input.rs","byte_start":647,"byte_end":654,"line_start":7,"line_end":7,"column_start":5,"column_end":12},"name":"current","qualname":"::input::Input::current","value":"pub fn current(&Self) -> Option<T>","parent":{"krate":0,"index":4},"children":[],"decl_id":null,"docs":" Peek current symbol.\n","sig":null,"attributes":[{"value":"/ Peek current symbol.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/input.rs","byte_start":618,"byte_end":642,"line_start":6,"line_end":6,"column_start":2,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":8},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/input.rs","byte_start":710,"byte_end":717,"line_start":10,"line_end":10,"column_start":5,"column_end":12},"name":"advance","qualname":"::input::Input::advance","value":"pub fn advance(&mut Self)","parent":{"krate":0,"index":4},"children":[],"decl_id":null,"docs":" Advance to next symbol.\n","sig":null,"attributes":[{"value":"/ Advance to next symbol.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/input.rs","byte_start":678,"byte_end":705,"line_start":9,"line_end":9,"column_start":2,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":9},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/input.rs","byte_start":768,"byte_end":775,"line_start":13,"line_end":13,"column_start":5,"column_end":12},"name":"jump_to","qualname":"::input::Input::jump_to","value":"pub fn jump_to(&mut Self, usize)","parent":{"krate":0,"index":4},"children":[],"decl_id":null,"docs":" Jump to specified position.\n","sig":null,"attributes":[{"value":"/ Jump to specified position.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/input.rs","byte_start":732,"byte_end":763,"line_start":12,"line_end":12,"column_start":2,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":10},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/input.rs","byte_start":845,"byte_end":852,"line_start":16,"line_end":16,"column_start":5,"column_end":12},"name":"segment","qualname":"::input::Input::segment","value":"pub fn segment(&Self, usize, usize) -> Vec<T>","parent":{"krate":0,"index":4},"children":[],"decl_id":null,"docs":" Get a segment from the input.\n","sig":null,"attributes":[{"value":"/ Get a segment from the input.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/input.rs","byte_start":807,"byte_end":840,"line_start":15,"line_end":15,"column_start":2,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":405},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/input.rs","byte_start":981,"byte_end":990,"line_start":21,"line_end":21,"column_start":12,"column_end":21},"name":"DataInput","qualname":"::input::DataInput","value":"DataInput { data, position }","parent":null,"children":[{"krate":0,"index":408},{"krate":0,"index":409}],"decl_id":null,"docs":" Wrap &[u8] or &[char] as input to parser.\n","sig":null,"attributes":[{"value":"/ Wrap &[u8] or &[char] as input to parser.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/input.rs","byte_start":900,"byte_end":945,"line_start":19,"line_end":19,"column_start":1,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":408},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/input.rs","byte_start":1009,"byte_end":1013,"line_start":22,"line_end":22,"column_start":6,"column_end":10},"name":"data","qualname":"::input::DataInput::data","value":"&'a [T]","parent":{"krate":0,"index":405},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":409},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/input.rs","byte_start":1029,"byte_end":1037,"line_start":23,"line_end":23,"column_start":6,"column_end":14},"name":"position","qualname":"::input::DataInput::position","value":"usize","parent":{"krate":0,"index":405},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":14},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/input.rs","byte_start":1094,"byte_end":1097,"line_start":27,"line_end":27,"column_start":9,"column_end":12},"name":"new","qualname":"<DataInput>::new","value":"pub fn new(&'a [T]) -> DataInput<, T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":418},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/input.rs","byte_start":1657,"byte_end":1666,"line_start":59,"line_end":59,"column_start":12,"column_end":21},"name":"TextInput","qualname":"::input::TextInput","value":"TextInput { text, position }","parent":null,"children":[{"krate":0,"index":420},{"krate":0,"index":421}],"decl_id":null,"docs":" Wrap &str as input to parser.\n","sig":null,"attributes":[{"value":"/ Wrap &str as input to parser.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/input.rs","byte_start":1588,"byte_end":1621,"line_start":57,"line_end":57,"column_start":1,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":420},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/input.rs","byte_start":1678,"byte_end":1682,"line_start":60,"line_end":60,"column_start":6,"column_end":10},"name":"text","qualname":"::input::TextInput::text","value":"&'a str","parent":{"krate":0,"index":418},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":421},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/input.rs","byte_start":1698,"byte_end":1706,"line_start":61,"line_end":61,"column_start":6,"column_end":14},"name":"position","qualname":"::input::TextInput::position","value":"usize","parent":{"krate":0,"index":418},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/input.rs","byte_start":1751,"byte_end":1754,"line_start":65,"line_end":65,"column_start":9,"column_end":12},"name":"new","qualname":"<TextInput>::new","value":"pub fn new(&'a str) -> TextInput","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":429},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/result.rs","byte_start":2448,"byte_end":2458,"line_start":7,"line_end":7,"column_start":2,"column_end":12},"name":"Incomplete","qualname":"::result::Error::Incomplete","value":"Error::Incomplete","parent":{"krate":0,"index":428},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":431},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/result.rs","byte_start":2461,"byte_end":2469,"line_start":8,"line_end":8,"column_start":2,"column_end":10},"name":"Mismatch","qualname":"::result::Error::Mismatch","value":"Error::Mismatch { message, position }","parent":{"krate":0,"index":428},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":434},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/result.rs","byte_start":2509,"byte_end":2519,"line_start":9,"line_end":9,"column_start":2,"column_end":12},"name":"Conversion","qualname":"::result::Error::Conversion","value":"Error::Conversion { message, position }","parent":{"krate":0,"index":428},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":437},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/result.rs","byte_start":2559,"byte_end":2565,"line_start":10,"line_end":10,"column_start":2,"column_end":8},"name":"Expect","qualname":"::result::Error::Expect","value":"Error::Expect { message, position, inner }","parent":{"krate":0,"index":428},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":441},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/result.rs","byte_start":2624,"byte_end":2630,"line_start":11,"line_end":11,"column_start":2,"column_end":8},"name":"Custom","qualname":"::result::Error::Custom","value":"Error::Custom { message, position, inner }","parent":{"krate":0,"index":428},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":428},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/result.rs","byte_start":2439,"byte_end":2444,"line_start":6,"line_end":6,"column_start":10,"column_end":15},"name":"Error","qualname":"::result::Error","value":"pub enum Error {\n    Incomplete,\n    Mismatch {\n        message: String,\n        position: usize,\n    },\n    Conversion {\n        message: String,\n        position: usize,\n    },\n    Expect {\n        message: String,\n        position: usize,\n        inner: Box<Error>,\n    },\n    Custom {\n        message: String,\n        position: usize,\n        inner: Option<Box<Error>>,\n    },\n}","parent":null,"children":[{"krate":0,"index":429},{"krate":0,"index":431},{"krate":0,"index":434},{"krate":0,"index":437},{"krate":0,"index":441}],"decl_id":null,"docs":" Parser error.\n","sig":null,"attributes":[{"value":"/ Parser error.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/result.rs","byte_start":2384,"byte_end":2401,"line_start":4,"line_end":4,"column_start":1,"column_end":18}}]},{"kind":"Type","id":{"krate":0,"index":48},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/result.rs","byte_start":3628,"byte_end":3634,"line_start":40,"line_end":40,"column_start":10,"column_end":16},"name":"Result","qualname":"::result::Result","value":"::std::result::Result<O, Error>","parent":null,"children":[],"decl_id":null,"docs":" Parser result, `Result<O>` ia alias of `Result<O, pom::Error>`.\n","sig":null,"attributes":[{"value":"/ Parser result, `Result<O>` ia alias of `Result<O, pom::Error>`.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/result.rs","byte_start":3551,"byte_end":3618,"line_start":39,"line_end":39,"column_start":1,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":51},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/train.rs","byte_start":3896,"byte_end":3901,"line_start":4,"line_end":4,"column_start":11,"column_end":16},"name":"Train","qualname":"::train::Train","value":"Train<K>","parent":null,"children":[{"krate":0,"index":53},{"krate":0,"index":54}],"decl_id":null,"docs":" A train is a series of knots, each knot can be a terminal symbol.\n Train is used as argument of seq(), one_of() and none_of(),\n so that both b\"byte string literal\" and \"string literal\" can be accepted.\n","sig":null,"attributes":[{"value":"/ A train is a series of knots, each knot can be a terminal symbol.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/train.rs","byte_start":3674,"byte_end":3743,"line_start":1,"line_end":1,"column_start":1,"column_end":70}},{"value":"/ Train is used as argument of seq(), one_of() and none_of(),","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/train.rs","byte_start":3744,"byte_end":3807,"line_start":2,"line_end":2,"column_start":1,"column_end":64}},{"value":"/ so that both b\"byte string literal\" and \"string literal\" can be accepted.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/train.rs","byte_start":3808,"byte_end":3885,"line_start":3,"line_end":3,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/train.rs","byte_start":3911,"byte_end":3916,"line_start":5,"line_end":5,"column_start":5,"column_end":10},"name":"knots","qualname":"::train::Train::knots","value":"pub fn knots(&Self) -> Vec<K>","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/train.rs","byte_start":3939,"byte_end":3945,"line_start":6,"line_end":6,"column_start":5,"column_end":11},"name":"to_str","qualname":"::train::Train::to_str","value":"pub fn to_str(&Self) -> &str","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":65},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/range.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"range","qualname":"::range","value":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/range.rs","parent":null,"children":[{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":70},{"krate":0,"index":73},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":79},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":95},{"krate":0,"index":99},{"krate":0,"index":103},{"krate":0,"index":107},{"krate":0,"index":111}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":82},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/range.rs","byte_start":5472,"byte_end":5480,"line_start":5,"line_end":5,"column_start":2,"column_end":10},"name":"Excluded","qualname":"::range::Bound::Excluded","value":"Bound::Excluded(&'a T)","parent":{"krate":0,"index":79},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":85},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/range.rs","byte_start":5490,"byte_end":5498,"line_start":6,"line_end":6,"column_start":2,"column_end":10},"name":"Included","qualname":"::range::Bound::Included","value":"Bound::Included(&'a T)","parent":{"krate":0,"index":79},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":88},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/range.rs","byte_start":5508,"byte_end":5517,"line_start":7,"line_end":7,"column_start":2,"column_end":11},"name":"Unbounded","qualname":"::range::Bound::Unbounded","value":"Bound::Unbounded","parent":{"krate":0,"index":79},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":79},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/range.rs","byte_start":5452,"byte_end":5457,"line_start":4,"line_end":4,"column_start":10,"column_end":15},"name":"Bound","qualname":"::range::Bound","value":"pub enum Bound<'a, T: 'a> { Excluded(&'a T), Included(&'a T), Unbounded, }","parent":null,"children":[{"krate":0,"index":82},{"krate":0,"index":85},{"krate":0,"index":88}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":91},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/range.rs","byte_start":5552,"byte_end":5565,"line_start":11,"line_end":11,"column_start":11,"column_end":24},"name":"RangeArgument","qualname":"::range::RangeArgument","value":"RangeArgument<T>","parent":null,"children":[{"krate":0,"index":93},{"krate":0,"index":94}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/range.rs","byte_start":5575,"byte_end":5580,"line_start":12,"line_end":12,"column_start":5,"column_end":10},"name":"start","qualname":"::range::RangeArgument::start","value":"pub fn start(&Self) -> Bound<, T>","parent":{"krate":0,"index":91},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/range.rs","byte_start":5605,"byte_end":5608,"line_start":13,"line_end":13,"column_start":5,"column_end":8},"name":"end","qualname":"::range::RangeArgument::end","value":"pub fn end(&Self) -> Bound<, T>","parent":{"krate":0,"index":91},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":114},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/set.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"set","qualname":"::set","value":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/set.rs","parent":null,"children":[{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":126},{"krate":0,"index":129},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":135},{"krate":0,"index":138},{"krate":0,"index":142},{"krate":0,"index":145},{"krate":0,"index":148},{"krate":0,"index":151},{"krate":0,"index":154},{"krate":0,"index":157},{"krate":0,"index":161},{"krate":0,"index":583},{"krate":0,"index":587},{"krate":0,"index":591},{"krate":0,"index":595},{"krate":0,"index":599},{"krate":0,"index":603},{"krate":0,"index":607},{"krate":0,"index":611},{"krate":0,"index":615},{"krate":0,"index":619},{"krate":0,"index":623},{"krate":0,"index":627},{"krate":0,"index":631},{"krate":0,"index":635},{"krate":0,"index":639},{"krate":0,"index":643},{"krate":0,"index":647},{"krate":0,"index":651},{"krate":0,"index":655},{"krate":0,"index":659},{"krate":0,"index":663},{"krate":0,"index":667},{"krate":0,"index":671},{"krate":0,"index":675},{"krate":0,"index":679},{"krate":0,"index":683},{"krate":0,"index":687},{"krate":0,"index":691},{"krate":0,"index":695},{"krate":0,"index":699},{"krate":0,"index":703},{"krate":0,"index":707},{"krate":0,"index":711}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":138},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/set.rs","byte_start":6474,"byte_end":6477,"line_start":6,"line_end":6,"column_start":11,"column_end":14},"name":"Set","qualname":"::set::Set","value":"Set<T>","parent":null,"children":[{"krate":0,"index":140},{"krate":0,"index":141}],"decl_id":null,"docs":" Set relationship.\n","sig":null,"attributes":[{"value":"/ Set relationship.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/set.rs","byte_start":6442,"byte_end":6463,"line_start":5,"line_end":5,"column_start":1,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/set.rs","byte_start":6534,"byte_end":6542,"line_start":8,"line_end":8,"column_start":5,"column_end":13},"name":"contains","qualname":"::set::Set::contains","value":"pub fn contains(&Self, &T) -> bool","parent":{"krate":0,"index":138},"children":[],"decl_id":null,"docs":" Whether a set contains an element or not.\n","sig":null,"attributes":[{"value":"/ Whether a set contains an element or not.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/set.rs","byte_start":6484,"byte_end":6529,"line_start":7,"line_end":7,"column_start":2,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/set.rs","byte_start":6608,"byte_end":6614,"line_start":11,"line_end":11,"column_start":5,"column_end":11},"name":"to_str","qualname":"::set::Set::to_str","value":"pub fn to_str(&Self) -> &str","parent":{"krate":0,"index":138},"children":[],"decl_id":null,"docs":" Convert to text for display.\n","sig":null,"attributes":[{"value":"/ Convert to text for display.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/set.rs","byte_start":6571,"byte_end":6603,"line_start":10,"line_end":10,"column_start":2,"column_end":34}}]},{"kind":"Mod","id":{"krate":0,"index":162},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/parser.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"parser","qualname":"::parser","value":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/parser.rs","parent":null,"children":[{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":174},{"krate":0,"index":177},{"krate":0,"index":180},{"krate":0,"index":183},{"krate":0,"index":186},{"krate":0,"index":189},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":196},{"krate":0,"index":199},{"krate":0,"index":202},{"krate":0,"index":205},{"krate":0,"index":208},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":217},{"krate":0,"index":252},{"krate":0,"index":256},{"krate":0,"index":260},{"krate":0,"index":265},{"krate":0,"index":271},{"krate":0,"index":276},{"krate":0,"index":281},{"krate":0,"index":286},{"krate":0,"index":291},{"krate":0,"index":295},{"krate":0,"index":299},{"krate":0,"index":305},{"krate":0,"index":309},{"krate":0,"index":320},{"krate":0,"index":331},{"krate":0,"index":341},{"krate":0,"index":352},{"krate":0,"index":359},{"krate":0,"index":367}],"decl_id":null,"docs":" Constains predefined parsers and combinators.\n","sig":null,"attributes":[{"value":"/ Constains predefined parsers and combinators.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/lib.rs","byte_start":63,"byte_end":112,"line_start":7,"line_end":7,"column_start":1,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":212},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/parser.rs","byte_start":8702,"byte_end":8708,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"Parser","qualname":"::parser::Parser","value":"Parser {  }","parent":null,"children":[{"krate":0,"index":216}],"decl_id":null,"docs":" Parser combinator.\n","sig":null,"attributes":[{"value":"/ Parser combinator.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/parser.rs","byte_start":8668,"byte_end":8690,"line_start":8,"line_end":8,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/parser.rs","byte_start":8841,"byte_end":8844,"line_start":15,"line_end":15,"column_start":9,"column_end":12},"name":"new","qualname":"<Parser>::new","value":"pub fn new<P>(P) -> Parser where P: Fn(&mut Input<I>) -> Result<O> + 'a","parent":null,"children":[],"decl_id":null,"docs":" Create new parser.\n","sig":null,"attributes":[{"value":"/ Create new parser.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/parser.rs","byte_start":8810,"byte_end":8832,"line_start":14,"line_end":14,"column_start":2,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/parser.rs","byte_start":9015,"byte_end":9020,"line_start":22,"line_end":22,"column_start":9,"column_end":14},"name":"parse","qualname":"<Parser>::parse","value":"pub fn parse(&Self, &mut Input<I>) -> Result<O>","parent":null,"children":[],"decl_id":null,"docs":" Apply the parser to parse input.\n","sig":null,"attributes":[{"value":"/ Apply the parser to parse input.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/parser.rs","byte_start":8970,"byte_end":9006,"line_start":21,"line_end":21,"column_start":2,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/parser.rs","byte_start":9145,"byte_end":9148,"line_start":27,"line_end":27,"column_start":9,"column_end":12},"name":"map","qualname":"<Parser>::map","value":"pub fn map<U, F>(Self, F) -> Parser where F: Fn(O) -> U + 'a, I: 'static,\nO: 'static, U: 'static","parent":null,"children":[],"decl_id":null,"docs":" Convert parser result to desired value.\n","sig":null,"attributes":[{"value":"/ Convert parser result to desired value.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/parser.rs","byte_start":9093,"byte_end":9136,"line_start":26,"line_end":26,"column_start":2,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/parser.rs","byte_start":9437,"byte_end":9444,"line_start":39,"line_end":39,"column_start":9,"column_end":16},"name":"convert","qualname":"<Parser>::convert","value":"pub fn convert<U, E, F>(Self, F) -> Parser where F: Fn(O) ->\n::std::result::Result<U, E> + 'a, E: Debug, I: Copy + 'static, O: 'static,\nU: 'static","parent":null,"children":[],"decl_id":null,"docs":" Convert parser result to desired value, fail in case of conversion error.\n","sig":null,"attributes":[{"value":"/ Convert parser result to desired value, fail in case of conversion error.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/parser.rs","byte_start":9351,"byte_end":9428,"line_start":38,"line_end":38,"column_start":2,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/parser.rs","byte_start":10021,"byte_end":10024,"line_start":64,"line_end":64,"column_start":9,"column_end":12},"name":"pos","qualname":"<Parser>::pos","value":"pub fn pos(Self) -> Parser where I: Copy + 'static, O: 'static","parent":null,"children":[],"decl_id":null,"docs":" Get input position after matching parser.\n","sig":null,"attributes":[{"value":"/ Get input position after matching parser.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/parser.rs","byte_start":9967,"byte_end":10012,"line_start":63,"line_end":63,"column_start":2,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/parser.rs","byte_start":10248,"byte_end":10255,"line_start":74,"line_end":74,"column_start":9,"column_end":16},"name":"collect","qualname":"<Parser>::collect","value":"pub fn collect(Self) -> Parser where I: Copy + 'static, O: 'static","parent":null,"children":[],"decl_id":null,"docs":" Collect all matched input symbols.\n","sig":null,"attributes":[{"value":"/ Collect all matched input symbols.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/parser.rs","byte_start":10201,"byte_end":10239,"line_start":73,"line_end":73,"column_start":2,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/parser.rs","byte_start":10553,"byte_end":10560,"line_start":88,"line_end":88,"column_start":9,"column_end":16},"name":"discard","qualname":"<Parser>::discard","value":"pub fn discard(Self) -> Parser where I: 'static, O: 'static","parent":null,"children":[],"decl_id":null,"docs":" Discard parser output.\n","sig":null,"attributes":[{"value":"/ Discard parser output.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/parser.rs","byte_start":10518,"byte_end":10544,"line_start":87,"line_end":87,"column_start":2,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/parser.rs","byte_start":10747,"byte_end":10750,"line_start":98,"line_end":98,"column_start":9,"column_end":12},"name":"opt","qualname":"<Parser>::opt","value":"pub fn opt(Self) -> Parser where I: 'static, O: 'static","parent":null,"children":[],"decl_id":null,"docs":" Make parser optional.\n","sig":null,"attributes":[{"value":"/ Make parser optional.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/parser.rs","byte_start":10713,"byte_end":10738,"line_start":97,"line_end":97,"column_start":2,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/parser.rs","byte_start":11175,"byte_end":11181,"line_start":114,"line_end":114,"column_start":9,"column_end":15},"name":"repeat","qualname":"<Parser>::repeat","value":"pub fn repeat<R>(Self, R) -> Parser where R: RangeArgument<usize> + Debug +\n'a, I: Copy + 'static, O: 'static","parent":null,"children":[],"decl_id":null,"docs":" `p.repeat(5)` repeat p exactly 5 times\n `p.repeat(0..)` repeat p zero or more times\n `p.repeat(1..)` repeat p one or more times\n `p.repeat(1..4)` match p at least 1 and at most 3 times\n","sig":null,"attributes":[{"value":"/ `p.repeat(5)` repeat p exactly 5 times","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/parser.rs","byte_start":10966,"byte_end":11008,"line_start":110,"line_end":110,"column_start":2,"column_end":44}},{"value":"/ `p.repeat(0..)` repeat p zero or more times","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/parser.rs","byte_start":11010,"byte_end":11057,"line_start":111,"line_end":111,"column_start":2,"column_end":49}},{"value":"/ `p.repeat(1..)` repeat p one or more times","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/parser.rs","byte_start":11059,"byte_end":11105,"line_start":112,"line_end":112,"column_start":2,"column_end":48}},{"value":"/ `p.repeat(1..4)` match p at least 1 and at most 3 times","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/parser.rs","byte_start":11107,"byte_end":11166,"line_start":113,"line_end":113,"column_start":2,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/parser.rs","byte_start":12075,"byte_end":12079,"line_start":149,"line_end":149,"column_start":9,"column_end":13},"name":"name","qualname":"<Parser>::name","value":"pub fn name(Self, &'a str) -> Parser where I: Copy + 'static, O: 'static","parent":null,"children":[],"decl_id":null,"docs":" Give parser a name to identify parsing errors.\n","sig":null,"attributes":[{"value":"/ Give parser a name to identify parsing errors.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/parser.rs","byte_start":12016,"byte_end":12066,"line_start":148,"line_end":148,"column_start":2,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/parser.rs","byte_start":12609,"byte_end":12615,"line_start":170,"line_end":170,"column_start":9,"column_end":15},"name":"expect","qualname":"<Parser>::expect","value":"pub fn expect(Self, &'a str) -> Parser where I: Copy + 'static, O: 'static","parent":null,"children":[],"decl_id":null,"docs":" Mark parser as expected, abort early when failed in ordered choice.\n","sig":null,"attributes":[{"value":"/ Mark parser as expected, abort early when failed in ordered choice.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/parser.rs","byte_start":12529,"byte_end":12600,"line_start":169,"line_end":169,"column_start":2,"column_end":73}}]},{"kind":"Function","id":{"krate":0,"index":252},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/parser.rs","byte_start":13029,"byte_end":13034,"line_start":189,"line_end":189,"column_start":8,"column_end":13},"name":"empty","qualname":"::parser::empty","value":"pub fn empty<'a, I>() -> Parser","parent":null,"children":[],"decl_id":null,"docs":" Always succeeds, consume no input.\n","sig":null,"attributes":[{"value":"/ Always succeeds, consume no input.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/parser.rs","byte_start":12983,"byte_end":13021,"line_start":188,"line_end":188,"column_start":1,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":256},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/parser.rs","byte_start":13167,"byte_end":13170,"line_start":194,"line_end":194,"column_start":8,"column_end":11},"name":"sym","qualname":"::parser::sym","value":"pub fn sym<'a, I>(I) -> Parser where I: Copy + PartialEq + Display + 'static","parent":null,"children":[],"decl_id":null,"docs":" Success when current input symbol equals `t`.\n","sig":null,"attributes":[{"value":"/ Success when current input symbol equals `t`.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/parser.rs","byte_start":13110,"byte_end":13159,"line_start":193,"line_end":193,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":260},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/parser.rs","byte_start":13631,"byte_end":13634,"line_start":215,"line_end":215,"column_start":8,"column_end":11},"name":"seq","qualname":"::parser::seq","value":"pub fn seq<'a, I, T>(&'static T) -> Parser where I: Copy + PartialEq +\nDisplay + 'static, T: Train<I> + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Success when sequence of symbols matches current input.\n","sig":null,"attributes":[{"value":"/ Success when sequence of symbols matches current input.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/parser.rs","byte_start":13564,"byte_end":13623,"line_start":214,"line_end":214,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":265},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/parser.rs","byte_start":14444,"byte_end":14448,"line_start":254,"line_end":254,"column_start":8,"column_end":12},"name":"list","qualname":"::parser::list","value":"pub fn list<'a, I, O, U>(Parser, Parser) -> Parser where I: Copy + 'static,\nO: 'static, U: 'static","parent":null,"children":[],"decl_id":null,"docs":" Parse separated list.\n","sig":null,"attributes":[{"value":"/ Parse separated list.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/parser.rs","byte_start":14411,"byte_end":14436,"line_start":253,"line_end":253,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":271},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/parser.rs","byte_start":15106,"byte_end":15112,"line_start":280,"line_end":280,"column_start":8,"column_end":14},"name":"one_of","qualname":"::parser::one_of","value":"pub fn one_of<'a, I, S>(&'static S) -> Parser where I: Copy + PartialEq +\nDisplay + Debug + 'static, S: Set<I> + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Success when current input symbol is one of the set.\n","sig":null,"attributes":[{"value":"/ Success when current input symbol is one of the set.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/parser.rs","byte_start":15042,"byte_end":15098,"line_start":279,"line_end":279,"column_start":1,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":276},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/parser.rs","byte_start":15645,"byte_end":15652,"line_start":302,"line_end":302,"column_start":8,"column_end":15},"name":"none_of","qualname":"::parser::none_of","value":"pub fn none_of<'a, I, S>(&'static S) -> Parser where I: Copy + PartialEq +\nDisplay + Debug + 'static, S: Set<I> + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Success when current input symbol is none of the set.\n","sig":null,"attributes":[{"value":"/ Success when current input symbol is none of the set.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/parser.rs","byte_start":15580,"byte_end":15637,"line_start":301,"line_end":301,"column_start":1,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":281},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/parser.rs","byte_start":16194,"byte_end":16198,"line_start":325,"line_end":325,"column_start":8,"column_end":12},"name":"is_a","qualname":"::parser::is_a","value":"pub fn is_a<'a, I, F>(F) -> Parser where I: Copy + PartialEq + Display +\nDebug + 'static, F: Fn(I) -> bool + 'a","parent":null,"children":[],"decl_id":null,"docs":" Success when predicate returns true on current input symbol.\n","sig":null,"attributes":[{"value":"/ Success when predicate returns true on current input symbol.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/parser.rs","byte_start":16122,"byte_end":16186,"line_start":324,"line_end":324,"column_start":1,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":286},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/parser.rs","byte_start":16721,"byte_end":16726,"line_start":347,"line_end":347,"column_start":8,"column_end":13},"name":"not_a","qualname":"::parser::not_a","value":"pub fn not_a<'a, I, F>(F) -> Parser where I: Copy + PartialEq + Display +\nDebug + 'static, F: Fn(I) -> bool + 'a","parent":null,"children":[],"decl_id":null,"docs":" Success when predicate returns false on current input symbol.\n","sig":null,"attributes":[{"value":"/ Success when predicate returns false on current input symbol.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/parser.rs","byte_start":16648,"byte_end":16713,"line_start":346,"line_end":346,"column_start":1,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":291},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/parser.rs","byte_start":17204,"byte_end":17208,"line_start":369,"line_end":369,"column_start":8,"column_end":12},"name":"take","qualname":"::parser::take","value":"pub fn take<'a, I>(usize) -> Parser where I: Copy + 'static","parent":null,"children":[],"decl_id":null,"docs":" Read n symbols.\n","sig":null,"attributes":[{"value":"/ Read n symbols.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/parser.rs","byte_start":17177,"byte_end":17196,"line_start":368,"line_end":368,"column_start":1,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":295},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/parser.rs","byte_start":17697,"byte_end":17701,"line_start":394,"line_end":394,"column_start":8,"column_end":12},"name":"skip","qualname":"::parser::skip","value":"pub fn skip<'a, I>(usize) -> Parser where I: Copy + 'static","parent":null,"children":[],"decl_id":null,"docs":" Skip n symbols.\n","sig":null,"attributes":[{"value":"/ Skip n symbols.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/parser.rs","byte_start":17670,"byte_end":17689,"line_start":393,"line_end":393,"column_start":1,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":299},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/parser.rs","byte_start":18176,"byte_end":18180,"line_start":419,"line_end":419,"column_start":8,"column_end":12},"name":"call","qualname":"::parser::call","value":"pub fn call<'a, I, O, F>(F) -> Parser where I: 'static, O: 'static, F: Fn() ->\nParser + 'a","parent":null,"children":[],"decl_id":null,"docs":" Call a parser factory, can be used to create recursive parsers.\n","sig":null,"attributes":[{"value":"/ Call a parser factory, can be used to create recursive parsers.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/parser.rs","byte_start":18101,"byte_end":18168,"line_start":418,"line_end":418,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":305},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/parser.rs","byte_start":18461,"byte_end":18464,"line_start":431,"line_end":431,"column_start":8,"column_end":11},"name":"end","qualname":"::parser::end","value":"pub fn end<'a, I>() -> Parser where I: Copy + Display + 'static","parent":null,"children":[],"decl_id":null,"docs":" Success when end of input is reached.\n","sig":null,"attributes":[{"value":"/ Success when end of input is reached.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/parser.rs","byte_start":18412,"byte_end":18453,"line_start":430,"line_end":430,"column_start":1,"column_end":42}}]},{"kind":"Mod","id":{"krate":0,"index":374},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/char_class.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"char_class","qualname":"::char_class","value":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/char_class.rs","parent":null,"children":[{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":377},{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":381}],"decl_id":null,"docs":" Utility functions to recognize char class of byte value.\n","sig":null,"attributes":[{"value":"/ Utility functions to recognize char class of byte value.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/lib.rs","byte_start":130,"byte_end":190,"line_start":10,"line_end":10,"column_start":1,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":375},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/char_class.rs","byte_start":26491,"byte_end":26496,"line_start":3,"line_end":3,"column_start":8,"column_end":13},"name":"alpha","qualname":"::char_class::alpha","value":"pub fn alpha(u8) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Recognises an alphabetic character, `a-zA-Z`.\n","sig":null,"attributes":[{"value":"/ Recognises an alphabetic character, `a-zA-Z`.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/char_class.rs","byte_start":26424,"byte_end":26473,"line_start":1,"line_end":1,"column_start":1,"column_end":50}},{"value":"inline","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/char_class.rs","byte_start":26474,"byte_end":26483,"line_start":2,"line_end":2,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":376},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/char_class.rs","byte_start":26642,"byte_end":26647,"line_start":9,"line_end":9,"column_start":8,"column_end":13},"name":"digit","qualname":"::char_class::digit","value":"pub fn digit(u8) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Recognises a decimal digit, `0-9`.\n","sig":null,"attributes":[{"value":"/ Recognises a decimal digit, `0-9`.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/char_class.rs","byte_start":26586,"byte_end":26624,"line_start":7,"line_end":7,"column_start":1,"column_end":39}},{"value":"inline","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/char_class.rs","byte_start":26625,"byte_end":26634,"line_start":8,"line_end":8,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":377},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/char_class.rs","byte_start":26773,"byte_end":26781,"line_start":15,"line_end":15,"column_start":8,"column_end":16},"name":"alphanum","qualname":"::char_class::alphanum","value":"pub fn alphanum(u8) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Recognises an alphanumeric character, `a-zA-Z0-9`.\n","sig":null,"attributes":[{"value":"/ Recognises an alphanumeric character, `a-zA-Z0-9`.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/char_class.rs","byte_start":26701,"byte_end":26755,"line_start":13,"line_end":13,"column_start":1,"column_end":55}},{"value":"inline","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/char_class.rs","byte_start":26756,"byte_end":26765,"line_start":14,"line_end":14,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":378},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/char_class.rs","byte_start":26899,"byte_end":26908,"line_start":21,"line_end":21,"column_start":8,"column_end":17},"name":"hex_digit","qualname":"::char_class::hex_digit","value":"pub fn hex_digit(u8) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Recognises a hexadecimal digit, `0-9a-fA-F`.\n","sig":null,"attributes":[{"value":"/ Recognises a hexadecimal digit, `0-9a-fA-F`.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/char_class.rs","byte_start":26833,"byte_end":26881,"line_start":19,"line_end":19,"column_start":1,"column_end":49}},{"value":"inline","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/char_class.rs","byte_start":26882,"byte_end":26891,"line_start":20,"line_end":20,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":379},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/char_class.rs","byte_start":27089,"byte_end":27098,"line_start":29,"line_end":29,"column_start":8,"column_end":17},"name":"oct_digit","qualname":"::char_class::oct_digit","value":"pub fn oct_digit(u8) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Recognises an octal digit, `0-7`.\n","sig":null,"attributes":[{"value":"/ Recognises an octal digit, `0-7`.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/char_class.rs","byte_start":27034,"byte_end":27071,"line_start":27,"line_end":27,"column_start":1,"column_end":38}},{"value":"inline","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/char_class.rs","byte_start":27072,"byte_end":27081,"line_start":28,"line_end":28,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":380},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/char_class.rs","byte_start":27200,"byte_end":27205,"line_start":35,"line_end":35,"column_start":8,"column_end":13},"name":"space","qualname":"::char_class::space","value":"pub fn space(u8) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Recognises a space or tab.\n","sig":null,"attributes":[{"value":"/ Recognises a space or tab.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/char_class.rs","byte_start":27152,"byte_end":27182,"line_start":33,"line_end":33,"column_start":1,"column_end":31}},{"value":"inline","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/char_class.rs","byte_start":27183,"byte_end":27192,"line_start":34,"line_end":34,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":381},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/char_class.rs","byte_start":27337,"byte_end":27347,"line_start":41,"line_end":41,"column_start":8,"column_end":18},"name":"multispace","qualname":"::char_class::multispace","value":"pub fn multispace(u8) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Recognises a space, tab, line feed, or carriage return.\n","sig":null,"attributes":[{"value":"/ Recognises a space, tab, line feed, or carriage return.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/char_class.rs","byte_start":27260,"byte_end":27319,"line_start":39,"line_end":39,"column_start":1,"column_end":60}},{"value":"inline","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/char_class.rs","byte_start":27320,"byte_end":27329,"line_start":40,"line_end":40,"column_start":1,"column_end":10}}]},{"kind":"Type","id":{"krate":0,"index":402},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/lib.rs","byte_start":400,"byte_end":406,"line_start":18,"line_end":18,"column_start":10,"column_end":16},"name":"Parser","qualname":"::Parser","value":"parser::Parser","parent":null,"children":[],"decl_id":null,"docs":" Parser type, `Parser<I, O>` is alias of `parser::Parser<'static, I, O>`.\n","sig":null,"attributes":[{"value":"/ Parser type, `Parser<I, O>` is alias of `parser::Parser<'static, I, O>`.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/lib.rs","byte_start":314,"byte_end":390,"line_start":17,"line_end":17,"column_start":1,"column_end":77}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/input.rs","byte_start":1067,"byte_end":1076,"line_start":26,"line_end":26,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":14}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/input.rs","byte_start":1219,"byte_end":1228,"line_start":35,"line_end":35,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/input.rs","byte_start":1727,"byte_end":1736,"line_start":64,"line_end":64,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":25}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/input.rs","byte_start":1871,"byte_end":1880,"line_start":73,"line_end":73,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/result.rs","byte_start":2721,"byte_end":2726,"line_start":14,"line_end":14,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/result.rs","byte_start":2809,"byte_end":2814,"line_start":20,"line_end":20,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":47}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/range.rs","byte_start":5661,"byte_end":5666,"line_start":16,"line_end":16,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":97},{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/range.rs","byte_start":5810,"byte_end":5819,"line_start":21,"line_end":21,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":101},{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/range.rs","byte_start":5953,"byte_end":5960,"line_start":26,"line_end":26,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":105},{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/range.rs","byte_start":6092,"byte_end":6101,"line_start":31,"line_end":31,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":109},{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/set.rs","byte_start":6946,"byte_end":6951,"line_start":32,"line_end":32,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/set.rs","byte_start":7083,"byte_end":7092,"line_start":38,"line_end":38,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/set.rs","byte_start":7204,"byte_end":7211,"line_start":44,"line_end":44,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/set.rs","byte_start":7301,"byte_end":7310,"line_start":50,"line_end":50,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":159},{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/parser.rs","byte_start":8790,"byte_end":8796,"line_start":13,"line_end":13,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":221},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":228},{"krate":0,"index":234},{"krate":0,"index":237},{"krate":0,"index":240},{"krate":0,"index":243},{"krate":0,"index":245},{"krate":0,"index":248},{"krate":0,"index":250}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/parser.rs","byte_start":18873,"byte_end":18879,"line_start":447,"line_end":447,"column_start":87,"column_end":93},"value":"","parent":null,"children":[{"krate":0,"index":315},{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/parser.rs","byte_start":19357,"byte_end":19363,"line_start":463,"line_end":463,"column_start":87,"column_end":93},"value":"","parent":null,"children":[{"krate":0,"index":326},{"krate":0,"index":327}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/parser.rs","byte_start":19824,"byte_end":19830,"line_start":479,"line_end":479,"column_start":87,"column_end":93},"value":"","parent":null,"children":[{"krate":0,"index":337},{"krate":0,"index":338}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/parser.rs","byte_start":20338,"byte_end":20344,"line_start":495,"line_end":495,"column_start":107,"column_end":113},"value":"","parent":null,"children":[{"krate":0,"index":348},{"krate":0,"index":349}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/parser.rs","byte_start":20725,"byte_end":20731,"line_start":511,"line_end":511,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":356},{"krate":0,"index":357}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/parser.rs","byte_start":21115,"byte_end":21121,"line_start":528,"line_end":528,"column_start":49,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":363},{"krate":0,"index":364}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/parser.rs","byte_start":21441,"byte_end":21447,"line_start":542,"line_end":542,"column_start":49,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":371},{"krate":0,"index":372}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/lib.rs","byte_start":42,"byte_end":47,"line_start":4,"line_end":4,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":65}},{"kind":"Mod","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/lib.rs","byte_start":57,"byte_end":60,"line_start":5,"line_end":5,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":114}},{"kind":"Mod","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/lib.rs","byte_start":121,"byte_end":127,"line_start":8,"line_end":8,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":162}},{"kind":"Mod","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/lib.rs","byte_start":199,"byte_end":209,"line_start":11,"line_end":11,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":374}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/input.rs","byte_start":1067,"byte_end":1076,"line_start":26,"line_end":26,"column_start":19,"column_end":28},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":405},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/input.rs","byte_start":1219,"byte_end":1228,"line_start":35,"line_end":35,"column_start":32,"column_end":41},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":405},"to":{"krate":0,"index":4}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/input.rs","byte_start":1727,"byte_end":1736,"line_start":64,"line_end":64,"column_start":10,"column_end":19},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":418},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/input.rs","byte_start":1871,"byte_end":1880,"line_start":73,"line_end":73,"column_start":26,"column_end":35},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":418},"to":{"krate":0,"index":4}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/result.rs","byte_start":2721,"byte_end":2726,"line_start":14,"line_end":14,"column_start":23,"column_end":28},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":428},"to":{"krate":1,"index":2339}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/result.rs","byte_start":2809,"byte_end":2814,"line_start":20,"line_end":20,"column_start":18,"column_end":23},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":428},"to":{"krate":2,"index":9359}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/range.rs","byte_start":5661,"byte_end":5666,"line_start":16,"line_end":16,"column_start":30,"column_end":35},"kind":{"Impl":{"id":7}},"from":{"krate":2,"index":35461},"to":{"krate":0,"index":91}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/range.rs","byte_start":5810,"byte_end":5819,"line_start":21,"line_end":21,"column_start":30,"column_end":39},"kind":{"Impl":{"id":8}},"from":{"krate":2,"index":35486},"to":{"krate":0,"index":91}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/range.rs","byte_start":5953,"byte_end":5960,"line_start":26,"line_end":26,"column_start":30,"column_end":37},"kind":{"Impl":{"id":9}},"from":{"krate":2,"index":35507},"to":{"krate":0,"index":91}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/range.rs","byte_start":6092,"byte_end":6101,"line_start":31,"line_end":31,"column_start":30,"column_end":39},"kind":{"Impl":{"id":10}},"from":{"krate":2,"index":35445},"to":{"krate":0,"index":91}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/set.rs","byte_start":6946,"byte_end":6951,"line_start":32,"line_end":32,"column_start":39,"column_end":44},"kind":{"Impl":{"id":13}},"from":{"krate":2,"index":35461},"to":{"krate":0,"index":138}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/set.rs","byte_start":7083,"byte_end":7092,"line_start":38,"line_end":38,"column_start":39,"column_end":48},"kind":{"Impl":{"id":14}},"from":{"krate":2,"index":35486},"to":{"krate":0,"index":138}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/set.rs","byte_start":7204,"byte_end":7211,"line_start":44,"line_end":44,"column_start":39,"column_end":46},"kind":{"Impl":{"id":15}},"from":{"krate":2,"index":35507},"to":{"krate":0,"index":138}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/set.rs","byte_start":7301,"byte_end":7310,"line_start":50,"line_end":50,"column_start":20,"column_end":29},"kind":{"Impl":{"id":16}},"from":{"krate":2,"index":35445},"to":{"krate":0,"index":138}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/parser.rs","byte_start":8790,"byte_end":8796,"line_start":13,"line_end":13,"column_start":16,"column_end":22},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":212},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/parser.rs","byte_start":18873,"byte_end":18879,"line_start":447,"line_end":447,"column_start":87,"column_end":93},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":212},"to":{"krate":2,"index":3071}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/parser.rs","byte_start":19357,"byte_end":19363,"line_start":463,"line_end":463,"column_start":87,"column_end":93},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":212},"to":{"krate":2,"index":3076}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/parser.rs","byte_start":19824,"byte_end":19830,"line_start":479,"line_end":479,"column_start":87,"column_end":93},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":212},"to":{"krate":2,"index":3081}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/parser.rs","byte_start":20338,"byte_end":20344,"line_start":495,"line_end":495,"column_start":107,"column_end":113},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":212},"to":{"krate":2,"index":3148}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/parser.rs","byte_start":20725,"byte_end":20731,"line_start":511,"line_end":511,"column_start":44,"column_end":50},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":212},"to":{"krate":2,"index":3132}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/parser.rs","byte_start":21115,"byte_end":21121,"line_start":528,"line_end":528,"column_start":49,"column_end":55},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":212},"to":{"krate":2,"index":3098}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pom-1.1.0/src/parser.rs","byte_start":21441,"byte_end":21447,"line_start":542,"line_end":542,"column_start":49,"column_end":55},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":212},"to":{"krate":2,"index":3123}}]}