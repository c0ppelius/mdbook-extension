{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19","program":"/Users/matt/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","futures_util","--edition=2018","/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"async-await\"","--cfg","feature=\"async-await-macro\"","--cfg","feature=\"default\"","--cfg","feature=\"futures-macro\"","--cfg","feature=\"futures-sink\"","--cfg","feature=\"sink\"","--cfg","feature=\"slab\"","--cfg","feature=\"std\"","-C","metadata=e1f15bc4bc96a999","-C","extra-filename=-e1f15bc4bc96a999","--out-dir","/Users/matt/GitHub/mdbook-testing/target/rls/debug/deps","-L","dependency=/Users/matt/GitHub/mdbook-testing/target/rls/debug/deps","--extern","futures_core=/Users/matt/GitHub/mdbook-testing/target/rls/debug/deps/libfutures_core-846fa25a3d0d2b7e.rmeta","--extern","futures_macro=/Users/matt/GitHub/mdbook-testing/target/rls/debug/deps/libfutures_macro-8f25dedf3a8ba0ed.dylib","--extern","futures_sink=/Users/matt/GitHub/mdbook-testing/target/rls/debug/deps/libfutures_sink-8f02a546af0df962.rmeta","--extern","futures_task=/Users/matt/GitHub/mdbook-testing/target/rls/debug/deps/libfutures_task-02a9fac2f8ac7d96.rmeta","--extern","pin_project_lite=/Users/matt/GitHub/mdbook-testing/target/rls/debug/deps/libpin_project_lite-bfadbbc6a33dc079.rmeta","--extern","pin_utils=/Users/matt/GitHub/mdbook-testing/target/rls/debug/deps/libpin_utils-b1fb20ce260b7c8e.rmeta","--extern","slab=/Users/matt/GitHub/mdbook-testing/target/rls/debug/deps/libslab-097d71f02adf5f77.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/matt/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/matt/GitHub/mdbook-testing/target/rls/debug/deps/libfutures_util-e1f15bc4bc96a999.rmeta"},"prelude":{"crate_id":{"name":"futures_util","disambiguator":[17538682352454148438,0]},"crate_root":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src","external_crates":[{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[5327680806253035642,0]}},{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/async_await/poll.rs","num":2,"id":{"name":"core","disambiguator":[3474867148648759986,0]}},{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[5062925168166713036,0]}},{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[2981460363035574205,0]}},{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[17736094580601255721,0]}},{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[10052842426541007562,0]}},{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9489815130599098901,0]}},{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[3346726902215706372,0]}},{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[3873550637736747779,0]}},{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4549466995013025454,0]}},{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[5157751798851432137,0]}},{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[17289477099079096810,0]}},{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[9019874491848494796,0]}},{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[5361552711123437457,0]}},{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[1973549709176203698,0]}},{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[16289716248128265453,0]}},{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[1392457260957006495,0]}},{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","num":18,"id":{"name":"futures_core","disambiguator":[8337840894737059410,0]}},{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","num":19,"id":{"name":"pin_utils","disambiguator":[3886655782345268746,0]}},{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/async_await/join_mod.rs","num":20,"id":{"name":"futures_macro","disambiguator":[12928836273931105017,0]}},{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","num":21,"id":{"name":"futures_task","disambiguator":[18018197549152979585,0]}},{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/flatten.rs","num":22,"id":{"name":"futures_sink","disambiguator":[5384249830006595041,0]}},{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/flatten.rs","num":23,"id":{"name":"pin_project_lite","disambiguator":[468121180006744328,0]}},{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","num":24,"id":{"name":"slab","disambiguator":[2235610151631523434,0]}}],"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":0,"byte_end":11572,"line_start":1,"line_end":337,"column_start":1,"column_end":18}},"imports":[{"kind":"Use","ref_id":{"krate":18,"index":169},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":861,"byte_end":866,"line_start":29,"line_end":29,"column_start":23,"column_end":28},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":7},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":887,"byte_end":894,"line_start":30,"line_end":30,"column_start":20,"column_end":27},"alias_span":null,"name":"pin_mut","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":1033,"byte_end":1034,"line_start":37,"line_end":37,"column_start":28,"column_end":29},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":1142,"byte_end":1143,"line_start":43,"line_end":43,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":135}},{"kind":"Use","ref_id":{"krate":2,"index":36902},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":1181,"byte_end":1187,"line_start":45,"line_end":45,"column_start":17,"column_end":23},"alias_span":null,"name":"Option","value":"","parent":{"krate":0,"index":135}},{"kind":"Use","ref_id":{"krate":2,"index":36904},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":1196,"byte_end":1200,"line_start":45,"line_end":45,"column_start":32,"column_end":36},"alias_span":null,"name":"None","value":"","parent":{"krate":0,"index":135}},{"kind":"Use","ref_id":{"krate":2,"index":36905},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":1196,"byte_end":1200,"line_start":45,"line_end":45,"column_start":32,"column_end":36},"alias_span":null,"name":"None","value":"","parent":{"krate":0,"index":135}},{"kind":"Use","ref_id":{"krate":2,"index":36906},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":1202,"byte_end":1206,"line_start":45,"line_end":45,"column_start":38,"column_end":42},"alias_span":null,"name":"Some","value":"","parent":{"krate":0,"index":135}},{"kind":"Use","ref_id":{"krate":2,"index":36907},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":1202,"byte_end":1206,"line_start":45,"line_end":45,"column_start":38,"column_end":42},"alias_span":null,"name":"Some","value":"","parent":{"krate":0,"index":135}},{"kind":"Use","ref_id":{"krate":2,"index":37020},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":1222,"byte_end":1225,"line_start":46,"line_end":46,"column_start":14,"column_end":17},"alias_span":null,"name":"Pin","value":"","parent":{"krate":0,"index":135}},{"kind":"Use","ref_id":{"krate":2,"index":37034},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":1252,"byte_end":1255,"line_start":47,"line_end":47,"column_start":26,"column_end":29},"alias_span":null,"name":"Err","value":"","parent":{"krate":0,"index":135}},{"kind":"Use","ref_id":{"krate":2,"index":37035},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":1252,"byte_end":1255,"line_start":47,"line_end":47,"column_start":26,"column_end":29},"alias_span":null,"name":"Err","value":"","parent":{"krate":0,"index":135}},{"kind":"Use","ref_id":{"krate":2,"index":37031},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":1257,"byte_end":1259,"line_start":47,"line_end":47,"column_start":31,"column_end":33},"alias_span":null,"name":"Ok","value":"","parent":{"krate":0,"index":135}},{"kind":"Use","ref_id":{"krate":2,"index":37032},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":1257,"byte_end":1259,"line_start":47,"line_end":47,"column_start":31,"column_end":33},"alias_span":null,"name":"Ok","value":"","parent":{"krate":0,"index":135}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":1332,"byte_end":1333,"line_start":51,"line_end":51,"column_start":37,"column_end":38},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":158}},{"kind":"Use","ref_id":{"krate":2,"index":12620},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":35783,"byte_end":35789,"line_start":13,"line_end":13,"column_start":23,"column_end":29},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":18,"index":21},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":35849,"byte_end":35858,"line_start":16,"line_end":16,"column_start":32,"column_end":41},"alias_span":null,"name":"BoxFuture","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":18,"index":24},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":35860,"byte_end":35874,"line_start":16,"line_end":16,"column_start":43,"column_end":57},"alias_span":null,"name":"LocalBoxFuture","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":18,"index":27},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":35908,"byte_end":35919,"line_start":17,"line_end":17,"column_start":32,"column_end":43},"alias_span":null,"name":"FusedFuture","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":18,"index":44},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":35921,"byte_end":35930,"line_start":17,"line_end":17,"column_start":45,"column_end":54},"alias_span":null,"name":"TryFuture","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":21,"index":237},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":35956,"byte_end":35965,"line_start":18,"line_end":18,"column_start":24,"column_end":33},"alias_span":null,"name":"FutureObj","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":21,"index":203},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":35967,"byte_end":35981,"line_start":18,"line_end":18,"column_start":35,"column_end":49},"alias_span":null,"name":"LocalFutureObj","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":21,"index":258},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":35983,"byte_end":35998,"line_start":18,"line_end":18,"column_start":51,"column_end":66},"alias_span":null,"name":"UnsafeFutureObj","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":8948},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":41796,"byte_end":41807,"line_start":101,"line_end":101,"column_start":29,"column_end":40},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":193}},{"kind":"Use","ref_id":{"krate":0,"index":8443},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":36113,"byte_end":36120,"line_start":24,"line_end":24,"column_start":5,"column_end":12},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":8352},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":36122,"byte_end":36126,"line_start":24,"line_end":24,"column_start":14,"column_end":18},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":595},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":36128,"byte_end":36137,"line_start":24,"line_end":24,"column_start":20,"column_end":29},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":8794},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":36139,"byte_end":36146,"line_start":24,"line_end":24,"column_start":31,"column_end":38},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":8609},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":36148,"byte_end":36158,"line_start":24,"line_end":24,"column_start":40,"column_end":50},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":8549},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":36160,"byte_end":36163,"line_start":24,"line_end":24,"column_start":52,"column_end":55},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":8659},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":36165,"byte_end":36172,"line_start":24,"line_end":24,"column_start":57,"column_end":64},"alias_span":null,"name":"MapInto","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":8854},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":36174,"byte_end":36184,"line_start":24,"line_end":24,"column_start":66,"column_end":76},"alias_span":null,"name":"NeverError","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":8721},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":36186,"byte_end":36190,"line_start":24,"line_end":24,"column_start":78,"column_end":82},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":8902},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":36192,"byte_end":36201,"line_start":24,"line_end":24,"column_start":84,"column_end":93},"alias_span":null,"name":"UnitError","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":8491},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":36297,"byte_end":36310,"line_start":28,"line_end":28,"column_start":23,"column_end":36},"alias_span":null,"name":"FlattenStream","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":8948},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":36359,"byte_end":36370,"line_start":31,"line_end":31,"column_start":23,"column_end":34},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":496},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":36570,"byte_end":36576,"line_start":39,"line_end":39,"column_start":24,"column_end":30},"alias_span":null,"name":"Shared","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":507},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":36578,"byte_end":36588,"line_start":39,"line_end":39,"column_start":32,"column_end":42},"alias_span":null,"name":"WeakShared","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":9368},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":36640,"byte_end":36647,"line_start":43,"line_end":43,"column_start":5,"column_end":12},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":9515},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":36649,"byte_end":36656,"line_start":43,"line_end":43,"column_start":14,"column_end":21},"alias_span":null,"name":"ErrInto","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":9698},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":36658,"byte_end":36668,"line_start":43,"line_end":43,"column_start":23,"column_end":33},"alias_span":null,"name":"InspectErr","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":9637},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":36670,"byte_end":36679,"line_start":43,"line_end":43,"column_start":35,"column_end":44},"alias_span":null,"name":"InspectOk","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":8984},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":36681,"byte_end":36691,"line_start":43,"line_end":43,"column_start":46,"column_end":56},"alias_span":null,"name":"IntoFuture","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":9820},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":36693,"byte_end":36699,"line_start":43,"line_end":43,"column_start":58,"column_end":64},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":9759},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":36701,"byte_end":36706,"line_start":43,"line_end":43,"column_start":66,"column_end":71},"alias_span":null,"name":"MapOk","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":9882},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":36708,"byte_end":36719,"line_start":43,"line_end":43,"column_start":73,"column_end":84},"alias_span":null,"name":"MapOkOrElse","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":9576},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":36721,"byte_end":36727,"line_start":43,"line_end":43,"column_start":86,"column_end":92},"alias_span":null,"name":"OkInto","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":9442},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":36733,"byte_end":36739,"line_start":44,"line_end":44,"column_start":5,"column_end":11},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":9117},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":36741,"byte_end":36751,"line_start":44,"line_end":44,"column_start":13,"column_end":23},"alias_span":null,"name":"TryFlatten","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":9238},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":36753,"byte_end":36769,"line_start":44,"line_end":44,"column_start":25,"column_end":41},"alias_span":null,"name":"TryFlattenStream","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":888},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":36771,"byte_end":36783,"line_start":44,"line_end":44,"column_start":43,"column_end":55},"alias_span":null,"name":"TryFutureExt","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":9955},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":36785,"byte_end":36797,"line_start":44,"line_end":44,"column_start":57,"column_end":69},"alias_span":null,"name":"UnwrapOrElse","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":9296},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":36902,"byte_end":36913,"line_start":49,"line_end":49,"column_start":27,"column_end":38},"alias_span":null,"name":"FlattenSink","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":990},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":36969,"byte_end":36973,"line_start":54,"line_end":54,"column_start":22,"column_end":26},"alias_span":null,"name":"lazy","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":10013},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":36975,"byte_end":36979,"line_start":54,"line_end":54,"column_start":28,"column_end":32},"alias_span":null,"name":"Lazy","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":1036},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":37020,"byte_end":37027,"line_start":57,"line_end":57,"column_start":25,"column_end":32},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":10019},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":37029,"byte_end":37036,"line_start":57,"line_end":57,"column_start":34,"column_end":41},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":1083},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":37083,"byte_end":37093,"line_start":60,"line_end":60,"column_start":28,"column_end":38},"alias_span":null,"name":"maybe_done","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":10025},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":37095,"byte_end":37104,"line_start":60,"line_end":60,"column_start":40,"column_end":49},"alias_span":null,"name":"MaybeDone","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":1135},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":37159,"byte_end":37173,"line_start":63,"line_end":63,"column_start":32,"column_end":46},"alias_span":null,"name":"try_maybe_done","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":10038},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":37175,"byte_end":37187,"line_start":63,"line_end":63,"column_start":48,"column_end":60},"alias_span":null,"name":"TryMaybeDone","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":10051},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":37225,"byte_end":37237,"line_start":66,"line_end":66,"column_start":23,"column_end":35},"alias_span":null,"name":"OptionFuture","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":1217},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":37277,"byte_end":37284,"line_start":69,"line_end":69,"column_start":25,"column_end":32},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":1212},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":37286,"byte_end":37292,"line_start":69,"line_end":69,"column_start":34,"column_end":40},"alias_span":null,"name":"PollFn","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":1276},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":37347,"byte_end":37361,"line_start":72,"line_end":72,"column_start":32,"column_end":46},"alias_span":null,"name":"poll_immediate","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":10090},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":37363,"byte_end":37376,"line_start":72,"line_end":72,"column_start":48,"column_end":61},"alias_span":null,"name":"PollImmediate","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":1323},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":37413,"byte_end":37416,"line_start":75,"line_end":75,"column_start":23,"column_end":26},"alias_span":null,"name":"err","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":1320},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":37418,"byte_end":37420,"line_start":75,"line_end":75,"column_start":28,"column_end":30},"alias_span":null,"name":"ok","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":1318},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":37422,"byte_end":37427,"line_start":75,"line_end":75,"column_start":32,"column_end":37},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":10129},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":37429,"byte_end":37434,"line_start":75,"line_end":75,"column_start":39,"column_end":44},"alias_span":null,"name":"Ready","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":1374},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":37469,"byte_end":37473,"line_start":78,"line_end":78,"column_start":22,"column_end":26},"alias_span":null,"name":"join","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":1377},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":37475,"byte_end":37480,"line_start":78,"line_end":78,"column_start":28,"column_end":33},"alias_span":null,"name":"join3","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":1381},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":37482,"byte_end":37487,"line_start":78,"line_end":78,"column_start":35,"column_end":40},"alias_span":null,"name":"join4","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":1386},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":37489,"byte_end":37494,"line_start":78,"line_end":78,"column_start":42,"column_end":47},"alias_span":null,"name":"join5","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":10231},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":37496,"byte_end":37500,"line_start":78,"line_end":78,"column_start":49,"column_end":53},"alias_span":null,"name":"Join","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":10276},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":37502,"byte_end":37507,"line_start":78,"line_end":78,"column_start":55,"column_end":60},"alias_span":null,"name":"Join3","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":10333},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":37509,"byte_end":37514,"line_start":78,"line_end":78,"column_start":62,"column_end":67},"alias_span":null,"name":"Join4","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":10402},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":37516,"byte_end":37521,"line_start":78,"line_end":78,"column_start":69,"column_end":74},"alias_span":null,"name":"Join5","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":1480},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":37616,"byte_end":37624,"line_start":83,"line_end":83,"column_start":26,"column_end":34},"alias_span":null,"name":"join_all","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":1467},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":37626,"byte_end":37633,"line_start":83,"line_end":83,"column_start":36,"column_end":43},"alias_span":null,"name":"JoinAll","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":1529},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":37672,"byte_end":37678,"line_start":86,"line_end":86,"column_start":24,"column_end":30},"alias_span":null,"name":"select","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":10483},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":37680,"byte_end":37686,"line_start":86,"line_end":86,"column_start":32,"column_end":38},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":1579},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":37785,"byte_end":37795,"line_start":91,"line_end":91,"column_start":28,"column_end":38},"alias_span":null,"name":"select_all","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":10491},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":37797,"byte_end":37806,"line_start":91,"line_end":91,"column_start":40,"column_end":49},"alias_span":null,"name":"SelectAll","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":1635},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":37854,"byte_end":37862,"line_start":95,"line_end":95,"column_start":5,"column_end":13},"alias_span":null,"name":"try_join","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":1638},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":37864,"byte_end":37873,"line_start":95,"line_end":95,"column_start":15,"column_end":24},"alias_span":null,"name":"try_join3","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":1642},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":37875,"byte_end":37884,"line_start":95,"line_end":95,"column_start":26,"column_end":35},"alias_span":null,"name":"try_join4","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":1647},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":37886,"byte_end":37895,"line_start":95,"line_end":95,"column_start":37,"column_end":46},"alias_span":null,"name":"try_join5","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":10567},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":37897,"byte_end":37904,"line_start":95,"line_end":95,"column_start":48,"column_end":55},"alias_span":null,"name":"TryJoin","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":10612},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":37906,"byte_end":37914,"line_start":95,"line_end":95,"column_start":57,"column_end":65},"alias_span":null,"name":"TryJoin3","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":10669},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":37916,"byte_end":37924,"line_start":95,"line_end":95,"column_start":67,"column_end":75},"alias_span":null,"name":"TryJoin4","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":10738},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":37926,"byte_end":37934,"line_start":95,"line_end":95,"column_start":77,"column_end":85},"alias_span":null,"name":"TryJoin5","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":1736},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":38039,"byte_end":38051,"line_start":101,"line_end":101,"column_start":30,"column_end":42},"alias_span":null,"name":"try_join_all","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":1730},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":38053,"byte_end":38063,"line_start":101,"line_end":101,"column_start":44,"column_end":54},"alias_span":null,"name":"TryJoinAll","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":1782},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":38110,"byte_end":38120,"line_start":104,"line_end":104,"column_start":28,"column_end":38},"alias_span":null,"name":"try_select","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":10819},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":38122,"byte_end":38131,"line_start":104,"line_end":104,"column_start":40,"column_end":49},"alias_span":null,"name":"TrySelect","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":1832},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":38228,"byte_end":38237,"line_start":109,"line_end":109,"column_start":27,"column_end":36},"alias_span":null,"name":"select_ok","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":10827},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":38239,"byte_end":38247,"line_start":109,"line_end":109,"column_start":38,"column_end":46},"alias_span":null,"name":"SelectOk","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":10833},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":38285,"byte_end":38291,"line_start":112,"line_end":112,"column_start":23,"column_end":29},"alias_span":null,"name":"Either","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":15567},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":38458,"byte_end":38469,"line_start":119,"line_end":119,"column_start":28,"column_end":39},"alias_span":null,"name":"AbortHandle","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":15563},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":38471,"byte_end":38488,"line_start":119,"line_end":119,"column_start":41,"column_end":58},"alias_span":null,"name":"AbortRegistration","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":15520},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":38490,"byte_end":38499,"line_start":119,"line_end":119,"column_start":60,"column_end":69},"alias_span":null,"name":"Abortable","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":15578},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":38501,"byte_end":38508,"line_start":119,"line_end":119,"column_start":71,"column_end":78},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":15579},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":38501,"byte_end":38508,"line_start":119,"line_end":119,"column_start":71,"column_end":78},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":1943},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":38591,"byte_end":38600,"line_start":122,"line_end":122,"column_start":20,"column_end":29},"alias_span":null,"name":"abortable","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":2,"index":12620},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":10673,"byte_end":10679,"line_start":296,"line_end":296,"column_start":25,"column_end":31},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":595},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":10681,"byte_end":10690,"line_start":296,"line_end":296,"column_start":33,"column_end":42},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":44},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":10692,"byte_end":10701,"line_start":296,"line_end":296,"column_start":44,"column_end":53},"alias_span":null,"name":"TryFuture","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":888},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":10703,"byte_end":10715,"line_start":296,"line_end":296,"column_start":55,"column_end":67},"alias_span":null,"name":"TryFutureExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":90},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":171022,"byte_end":171031,"line_start":13,"line_end":13,"column_start":32,"column_end":41},"alias_span":null,"name":"BoxStream","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":18,"index":93},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":171033,"byte_end":171047,"line_start":13,"line_end":13,"column_start":43,"column_end":57},"alias_span":null,"name":"LocalBoxStream","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":18,"index":110},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":171081,"byte_end":171092,"line_start":14,"line_end":14,"column_start":32,"column_end":43},"alias_span":null,"name":"FusedStream","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":18,"index":96},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":171094,"byte_end":171100,"line_start":14,"line_end":14,"column_start":45,"column_end":51},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":18,"index":127},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":171102,"byte_end":171111,"line_start":14,"line_end":14,"column_start":53,"column_end":62},"alias_span":null,"name":"TryStream","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":12747},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":179805,"byte_end":179811,"line_start":172,"line_end":172,"column_start":23,"column_end":29},"alias_span":null,"name":"Chunks","value":"","parent":{"krate":0,"index":1995}},{"kind":"Use","ref_id":{"krate":0,"index":12799},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":179988,"byte_end":179999,"line_start":178,"line_end":178,"column_start":29,"column_end":40},"alias_span":null,"name":"ReadyChunks","value":"","parent":{"krate":0,"index":1995}},{"kind":"Use","ref_id":{"krate":0,"index":13099},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":181497,"byte_end":181508,"line_start":224,"line_end":224,"column_start":29,"column_end":40},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":1995}},{"kind":"Use","ref_id":{"krate":0,"index":10850},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":171227,"byte_end":171232,"line_start":21,"line_end":21,"column_start":5,"column_end":10},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":10899},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":171234,"byte_end":171241,"line_start":21,"line_end":21,"column_start":12,"column_end":19},"alias_span":null,"name":"Collect","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":11010},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":171243,"byte_end":171249,"line_start":21,"line_end":21,"column_start":21,"column_end":27},"alias_span":null,"name":"Concat","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":11087},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":171251,"byte_end":171256,"line_start":21,"line_end":21,"column_start":29,"column_end":34},"alias_span":null,"name":"Cycle","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":11127},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":171258,"byte_end":171267,"line_start":21,"line_end":21,"column_start":36,"column_end":45},"alias_span":null,"name":"Enumerate","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":11175},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":171269,"byte_end":171275,"line_start":21,"line_end":21,"column_start":47,"column_end":53},"alias_span":null,"name":"Filter","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":11244},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":171277,"byte_end":171286,"line_start":21,"line_end":21,"column_start":55,"column_end":64},"alias_span":null,"name":"FilterMap","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":11989},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":171288,"byte_end":171295,"line_start":21,"line_end":21,"column_start":66,"column_end":73},"alias_span":null,"name":"FlatMap","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":11368},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":171297,"byte_end":171304,"line_start":21,"line_end":21,"column_start":75,"column_end":82},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":11429},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":171306,"byte_end":171310,"line_start":21,"line_end":21,"column_start":84,"column_end":88},"alias_span":null,"name":"Fold","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":11743},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":171312,"byte_end":171319,"line_start":21,"line_end":21,"column_start":90,"column_end":97},"alias_span":null,"name":"ForEach","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":11800},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":171325,"byte_end":171329,"line_start":22,"line_end":22,"column_start":5,"column_end":9},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":11857},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":171331,"byte_end":171338,"line_start":22,"line_end":22,"column_start":11,"column_end":18},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":11932},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":171340,"byte_end":171343,"line_start":22,"line_end":22,"column_start":20,"column_end":23},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":12078},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":171345,"byte_end":171349,"line_start":22,"line_end":22,"column_start":25,"column_end":29},"alias_span":null,"name":"Next","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":12224},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":171351,"byte_end":171357,"line_start":22,"line_end":22,"column_start":31,"column_end":37},"alias_span":null,"name":"NextIf","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":12273},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":171359,"byte_end":171367,"line_start":22,"line_end":22,"column_start":39,"column_end":47},"alias_span":null,"name":"NextIfEq","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":12142},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":171369,"byte_end":171373,"line_start":22,"line_end":22,"column_start":49,"column_end":53},"alias_span":null,"name":"Peek","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":12183},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":171375,"byte_end":171382,"line_start":22,"line_end":22,"column_start":55,"column_end":62},"alias_span":null,"name":"PeekMut","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":12094},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":171384,"byte_end":171392,"line_start":22,"line_end":22,"column_start":64,"column_end":72},"alias_span":null,"name":"Peekable","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":12851},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":171394,"byte_end":171398,"line_start":22,"line_end":22,"column_start":74,"column_end":78},"alias_span":null,"name":"Scan","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":12086},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":171400,"byte_end":171414,"line_start":22,"line_end":22,"column_start":80,"column_end":94},"alias_span":null,"name":"SelectNextSome","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":12322},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":171420,"byte_end":171424,"line_start":23,"line_end":23,"column_start":5,"column_end":9},"alias_span":null,"name":"Skip","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":12370},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":171426,"byte_end":171435,"line_start":23,"line_end":23,"column_start":11,"column_end":20},"alias_span":null,"name":"SkipWhile","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":4138},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":171437,"byte_end":171446,"line_start":23,"line_end":23,"column_start":22,"column_end":31},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":11848},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":171448,"byte_end":171460,"line_start":23,"line_end":23,"column_start":33,"column_end":45},"alias_span":null,"name":"StreamFuture","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":12443},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":171462,"byte_end":171466,"line_start":23,"line_end":23,"column_start":47,"column_end":51},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":12564},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":171468,"byte_end":171477,"line_start":23,"line_end":23,"column_start":53,"column_end":62},"alias_span":null,"name":"TakeUntil","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":12491},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":171479,"byte_end":171488,"line_start":23,"line_end":23,"column_start":64,"column_end":73},"alias_span":null,"name":"TakeWhile","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":12625},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":171490,"byte_end":171494,"line_start":23,"line_end":23,"column_start":75,"column_end":79},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":10948},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":171496,"byte_end":171501,"line_start":23,"line_end":23,"column_start":81,"column_end":86},"alias_span":null,"name":"Unzip","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":12690},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":171503,"byte_end":171506,"line_start":23,"line_end":23,"column_start":88,"column_end":91},"alias_span":null,"name":"Zip","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":13099},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":171558,"byte_end":171569,"line_start":27,"line_end":27,"column_start":23,"column_end":34},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":12747},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":171620,"byte_end":171626,"line_start":30,"line_end":30,"column_start":23,"column_end":29},"alias_span":null,"name":"Chunks","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":12799},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":171677,"byte_end":171688,"line_start":33,"line_end":33,"column_start":23,"column_end":34},"alias_span":null,"name":"ReadyChunks","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":11685},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":171786,"byte_end":171793,"line_start":37,"line_end":37,"column_start":23,"column_end":30},"alias_span":null,"name":"Forward","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":12924},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":171880,"byte_end":171895,"line_start":41,"line_end":41,"column_start":24,"column_end":39},"alias_span":null,"name":"BufferUnordered","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":12973},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":171897,"byte_end":171905,"line_start":41,"line_end":41,"column_start":41,"column_end":49},"alias_span":null,"name":"Buffered","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":13022},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":171907,"byte_end":171924,"line_start":41,"line_end":41,"column_start":51,"column_end":68},"alias_span":null,"name":"ForEachConcurrent","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":4059},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":172085,"byte_end":172097,"line_start":47,"line_end":47,"column_start":24,"column_end":36},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":4060},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":172085,"byte_end":172097,"line_start":47,"line_end":47,"column_start":24,"column_end":36},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":13090},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":172099,"byte_end":172108,"line_start":47,"line_end":47,"column_start":38,"column_end":47},"alias_span":null,"name":"SplitSink","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":13083},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":172110,"byte_end":172121,"line_start":47,"line_end":47,"column_start":49,"column_end":60},"alias_span":null,"name":"SplitStream","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":5140},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":172173,"byte_end":172183,"line_start":51,"line_end":51,"column_start":5,"column_end":15},"alias_span":null,"name":"try_unfold","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":13143},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":172185,"byte_end":172192,"line_start":51,"line_end":51,"column_start":17,"column_end":24},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":13211},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":172194,"byte_end":172201,"line_start":51,"line_end":51,"column_start":26,"column_end":33},"alias_span":null,"name":"ErrInto","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":13367},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":172203,"byte_end":172213,"line_start":51,"line_end":51,"column_start":35,"column_end":45},"alias_span":null,"name":"InspectErr","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":13289},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":172215,"byte_end":172224,"line_start":51,"line_end":51,"column_start":47,"column_end":56},"alias_span":null,"name":"InspectOk","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":13442},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":172226,"byte_end":172236,"line_start":51,"line_end":51,"column_start":58,"column_end":68},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":13567},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":172238,"byte_end":172244,"line_start":51,"line_end":51,"column_start":70,"column_end":76},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":13489},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":172246,"byte_end":172251,"line_start":51,"line_end":51,"column_start":78,"column_end":83},"alias_span":null,"name":"MapOk","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":13642},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":172253,"byte_end":172259,"line_start":51,"line_end":51,"column_start":85,"column_end":91},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":13954},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":172265,"byte_end":172275,"line_start":52,"line_end":52,"column_start":5,"column_end":15},"alias_span":null,"name":"TryCollect","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":14003},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":172277,"byte_end":172286,"line_start":52,"line_end":52,"column_start":17,"column_end":26},"alias_span":null,"name":"TryConcat","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":13772},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":172288,"byte_end":172297,"line_start":52,"line_end":52,"column_start":28,"column_end":37},"alias_span":null,"name":"TryFilter","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":13841},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":172299,"byte_end":172311,"line_start":52,"line_end":52,"column_start":39,"column_end":51},"alias_span":null,"name":"TryFilterMap","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":13906},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":172313,"byte_end":172323,"line_start":52,"line_end":52,"column_start":53,"column_end":63},"alias_span":null,"name":"TryFlatten","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":14116},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":172325,"byte_end":172332,"line_start":52,"line_end":52,"column_start":65,"column_end":72},"alias_span":null,"name":"TryFold","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":13715},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":172334,"byte_end":172344,"line_start":52,"line_end":52,"column_start":74,"column_end":84},"alias_span":null,"name":"TryForEach","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":13707},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":172346,"byte_end":172353,"line_start":52,"line_end":52,"column_start":86,"column_end":93},"alias_span":null,"name":"TryNext","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":14242},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":172359,"byte_end":172371,"line_start":53,"line_end":53,"column_start":5,"column_end":17},"alias_span":null,"name":"TrySkipWhile","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":5491},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":172373,"byte_end":172385,"line_start":53,"line_end":53,"column_start":19,"column_end":31},"alias_span":null,"name":"TryStreamExt","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":14315},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":172387,"byte_end":172399,"line_start":53,"line_end":53,"column_start":33,"column_end":45},"alias_span":null,"name":"TryTakeWhile","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":14185},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":172401,"byte_end":172410,"line_start":53,"line_end":53,"column_start":47,"column_end":56},"alias_span":null,"name":"TryUnfold","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":14388},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":172639,"byte_end":172657,"line_start":63,"line_end":63,"column_start":28,"column_end":46},"alias_span":null,"name":"TryBufferUnordered","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":14440},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":172659,"byte_end":172670,"line_start":63,"line_end":63,"column_start":48,"column_end":59},"alias_span":null,"name":"TryBuffered","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":14492},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":172672,"byte_end":172692,"line_start":63,"line_end":63,"column_start":61,"column_end":81},"alias_span":null,"name":"TryForEachConcurrent","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":14043},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":172749,"byte_end":172758,"line_start":66,"line_end":66,"column_start":28,"column_end":37},"alias_span":null,"name":"TryChunks","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":14095},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":172760,"byte_end":172774,"line_start":66,"line_end":66,"column_start":39,"column_end":53},"alias_span":null,"name":"TryChunksError","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":14096},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":172760,"byte_end":172774,"line_start":66,"line_end":66,"column_start":39,"column_end":53},"alias_span":null,"name":"TryChunksError","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":5644},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":172831,"byte_end":172835,"line_start":71,"line_end":71,"column_start":22,"column_end":26},"alias_span":null,"name":"iter","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":14553},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":172837,"byte_end":172841,"line_start":71,"line_end":71,"column_start":28,"column_end":32},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":5679},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":172880,"byte_end":172886,"line_start":74,"line_end":74,"column_start":24,"column_end":30},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":14562},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":172888,"byte_end":172894,"line_start":74,"line_end":74,"column_start":32,"column_end":38},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":5732},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":172943,"byte_end":172954,"line_start":77,"line_end":77,"column_start":29,"column_end":40},"alias_span":null,"name":"repeat_with","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":14571},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":172956,"byte_end":172966,"line_start":77,"line_end":77,"column_start":42,"column_end":52},"alias_span":null,"name":"RepeatWith","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":5766},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":173003,"byte_end":173008,"line_start":80,"line_end":80,"column_start":23,"column_end":28},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":14580},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":173010,"byte_end":173015,"line_start":80,"line_end":80,"column_start":30,"column_end":35},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":5818},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":173050,"byte_end":173054,"line_start":83,"line_end":83,"column_start":22,"column_end":26},"alias_span":null,"name":"once","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":14586},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":173056,"byte_end":173060,"line_start":83,"line_end":83,"column_start":28,"column_end":32},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":5862},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":173101,"byte_end":173108,"line_start":86,"line_end":86,"column_start":25,"column_end":32},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":14622},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":173110,"byte_end":173117,"line_start":86,"line_end":86,"column_start":34,"column_end":41},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":5912},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":173158,"byte_end":173165,"line_start":89,"line_end":89,"column_start":25,"column_end":32},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":5904},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":173167,"byte_end":173173,"line_start":89,"line_end":89,"column_start":34,"column_end":40},"alias_span":null,"name":"PollFn","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":5953},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":173228,"byte_end":173242,"line_start":92,"line_end":92,"column_start":32,"column_end":46},"alias_span":null,"name":"poll_immediate","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":14628},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":173244,"byte_end":173257,"line_start":92,"line_end":92,"column_start":48,"column_end":61},"alias_span":null,"name":"PollImmediate","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":5996},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":173296,"byte_end":173302,"line_start":95,"line_end":95,"column_start":24,"column_end":30},"alias_span":null,"name":"select","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":14667},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":173304,"byte_end":173310,"line_start":95,"line_end":95,"column_start":32,"column_end":38},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":6062},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":173377,"byte_end":173397,"line_start":98,"line_end":98,"column_start":38,"column_end":58},"alias_span":null,"name":"select_with_strategy","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":14712},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":173399,"byte_end":173407,"line_start":98,"line_end":98,"column_start":60,"column_end":68},"alias_span":null,"name":"PollNext","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":14731},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":173409,"byte_end":173427,"line_start":98,"line_end":98,"column_start":70,"column_end":88},"alias_span":null,"name":"SelectWithStrategy","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":6144},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":173466,"byte_end":173472,"line_start":101,"line_end":101,"column_start":24,"column_end":30},"alias_span":null,"name":"unfold","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":14800},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":173474,"byte_end":173480,"line_start":101,"line_end":101,"column_start":32,"column_end":38},"alias_span":null,"name":"Unfold","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":6244},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":173658,"byte_end":173672,"line_start":108,"line_end":108,"column_start":32,"column_end":46},"alias_span":null,"name":"FuturesOrdered","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":14932},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":453750,"byte_end":453758,"line_start":26,"line_end":26,"column_start":22,"column_end":30},"alias_span":null,"name":"IntoIter","value":"","parent":{"krate":0,"index":6284}},{"kind":"Use","ref_id":{"krate":0,"index":14923},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":453760,"byte_end":453764,"line_start":26,"line_end":26,"column_start":32,"column_end":36},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":6284}},{"kind":"Use","ref_id":{"krate":0,"index":14924},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":453760,"byte_end":453764,"line_start":26,"line_end":26,"column_start":32,"column_end":36},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":6284}},{"kind":"Use","ref_id":{"krate":0,"index":14903},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":453766,"byte_end":453773,"line_start":26,"line_end":26,"column_start":38,"column_end":45},"alias_span":null,"name":"IterMut","value":"","parent":{"krate":0,"index":6284}},{"kind":"Use","ref_id":{"krate":0,"index":14904},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":453766,"byte_end":453773,"line_start":26,"line_end":26,"column_start":38,"column_end":45},"alias_span":null,"name":"IterMut","value":"","parent":{"krate":0,"index":6284}},{"kind":"Use","ref_id":{"krate":0,"index":14893},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":453775,"byte_end":453785,"line_start":26,"line_end":26,"column_start":47,"column_end":57},"alias_span":null,"name":"IterPinMut","value":"","parent":{"krate":0,"index":6284}},{"kind":"Use","ref_id":{"krate":0,"index":14912},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":453787,"byte_end":453797,"line_start":26,"line_end":26,"column_start":59,"column_end":69},"alias_span":null,"name":"IterPinRef","value":"","parent":{"krate":0,"index":6284}},{"kind":"Use","ref_id":{"krate":0,"index":6602},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":173872,"byte_end":173888,"line_start":116,"line_end":116,"column_start":34,"column_end":50},"alias_span":null,"name":"FuturesUnordered","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":6762},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":174075,"byte_end":174085,"line_start":124,"line_end":124,"column_start":28,"column_end":38},"alias_span":null,"name":"select_all","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":14939},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":174087,"byte_end":174096,"line_start":124,"line_end":124,"column_start":40,"column_end":49},"alias_span":null,"name":"SelectAll","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":15567},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":174264,"byte_end":174275,"line_start":131,"line_end":131,"column_start":28,"column_end":39},"alias_span":null,"name":"AbortHandle","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":15563},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":174277,"byte_end":174294,"line_start":131,"line_end":131,"column_start":41,"column_end":58},"alias_span":null,"name":"AbortRegistration","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":15520},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":174296,"byte_end":174305,"line_start":131,"line_end":131,"column_start":60,"column_end":69},"alias_span":null,"name":"Abortable","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":15578},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":174307,"byte_end":174314,"line_start":131,"line_end":131,"column_start":71,"column_end":78},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":15579},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":174307,"byte_end":174314,"line_start":131,"line_end":131,"column_start":71,"column_end":78},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":6833},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":174397,"byte_end":174406,"line_start":134,"line_end":134,"column_start":20,"column_end":29},"alias_span":null,"name":"abortable","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":18,"index":96},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":10777,"byte_end":10783,"line_start":300,"line_end":300,"column_start":25,"column_end":31},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4138},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":10785,"byte_end":10794,"line_start":300,"line_end":300,"column_start":33,"column_end":42},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":127},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":10796,"byte_end":10805,"line_start":300,"line_end":300,"column_start":44,"column_end":53},"alias_span":null,"name":"TryStream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5491},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":10807,"byte_end":10819,"line_start":300,"line_end":300,"column_start":55,"column_end":67},"alias_span":null,"name":"TryStreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":17},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":502996,"byte_end":503000,"line_start":18,"line_end":18,"column_start":23,"column_end":27},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":6867}},{"kind":"Use","ref_id":{"krate":0,"index":14997},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":503035,"byte_end":503040,"line_start":21,"line_end":21,"column_start":22,"column_end":27},"alias_span":null,"name":"Close","value":"","parent":{"krate":0,"index":6867}},{"kind":"Use","ref_id":{"krate":0,"index":6957},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":503076,"byte_end":503081,"line_start":24,"line_end":24,"column_start":23,"column_end":28},"alias_span":null,"name":"drain","value":"","parent":{"krate":0,"index":6867}},{"kind":"Use","ref_id":{"krate":0,"index":15008},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":503083,"byte_end":503088,"line_start":24,"line_end":24,"column_start":30,"column_end":35},"alias_span":null,"name":"Drain","value":"","parent":{"krate":0,"index":6867}},{"kind":"Use","ref_id":{"krate":0,"index":15014},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":503126,"byte_end":503132,"line_start":27,"line_end":27,"column_start":23,"column_end":29},"alias_span":null,"name":"Fanout","value":"","parent":{"krate":0,"index":6867}},{"kind":"Use","ref_id":{"krate":0,"index":15059},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":503165,"byte_end":503169,"line_start":30,"line_end":30,"column_start":21,"column_end":25},"alias_span":null,"name":"Feed","value":"","parent":{"krate":0,"index":6867}},{"kind":"Use","ref_id":{"krate":0,"index":15070},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":503204,"byte_end":503209,"line_start":33,"line_end":33,"column_start":22,"column_end":27},"alias_span":null,"name":"Flush","value":"","parent":{"krate":0,"index":6867}},{"kind":"Use","ref_id":{"krate":0,"index":15081},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":503250,"byte_end":503261,"line_start":36,"line_end":36,"column_start":25,"column_end":36},"alias_span":null,"name":"SinkErrInto","value":"","parent":{"krate":0,"index":6867}},{"kind":"Use","ref_id":{"krate":0,"index":15145},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":503300,"byte_end":503310,"line_start":39,"line_end":39,"column_start":24,"column_end":34},"alias_span":null,"name":"SinkMapErr","value":"","parent":{"krate":0,"index":6867}},{"kind":"Use","ref_id":{"krate":0,"index":15204},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":503343,"byte_end":503347,"line_start":42,"line_end":42,"column_start":21,"column_end":25},"alias_span":null,"name":"Send","value":"","parent":{"krate":0,"index":6867}},{"kind":"Use","ref_id":{"krate":0,"index":7277},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":503388,"byte_end":503395,"line_start":45,"line_end":45,"column_start":25,"column_end":32},"alias_span":null,"name":"SendAll","value":"","parent":{"krate":0,"index":6867}},{"kind":"Use","ref_id":{"krate":0,"index":7339},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":503433,"byte_end":503439,"line_start":48,"line_end":48,"column_start":24,"column_end":30},"alias_span":null,"name":"unfold","value":"","parent":{"krate":0,"index":6867}},{"kind":"Use","ref_id":{"krate":0,"index":15214},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":503441,"byte_end":503447,"line_start":48,"line_end":48,"column_start":32,"column_end":38},"alias_span":null,"name":"Unfold","value":"","parent":{"krate":0,"index":6867}},{"kind":"Use","ref_id":{"krate":0,"index":15272},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":503481,"byte_end":503485,"line_start":51,"line_end":51,"column_start":21,"column_end":25},"alias_span":null,"name":"With","value":"","parent":{"krate":0,"index":6867}},{"kind":"Use","ref_id":{"krate":0,"index":15355},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":503536,"byte_end":503547,"line_start":54,"line_end":54,"column_start":30,"column_end":41},"alias_span":null,"name":"WithFlatMap","value":"","parent":{"krate":0,"index":6867}},{"kind":"Use","ref_id":{"krate":0,"index":15442},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":503636,"byte_end":503642,"line_start":59,"line_end":59,"column_start":23,"column_end":29},"alias_span":null,"name":"Buffer","value":"","parent":{"krate":0,"index":6867}},{"kind":"Use","ref_id":{"krate":22,"index":17},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":10975,"byte_end":10979,"line_start":307,"line_end":307,"column_start":23,"column_end":27},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7582},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":10981,"byte_end":10988,"line_start":307,"line_end":307,"column_start":29,"column_end":36},"alias_span":null,"name":"SinkExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":2,"index":12876},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":543033,"byte_end":543040,"line_start":14,"line_end":14,"column_start":22,"column_end":29},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":7627}},{"kind":"Use","ref_id":{"krate":2,"index":39659},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":543042,"byte_end":543046,"line_start":14,"line_end":14,"column_start":31,"column_end":35},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":7627}},{"kind":"Use","ref_id":{"krate":2,"index":39695},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":543048,"byte_end":543056,"line_start":14,"line_end":14,"column_start":37,"column_end":45},"alias_span":null,"name":"RawWaker","value":"","parent":{"krate":0,"index":7627}},{"kind":"Use","ref_id":{"krate":2,"index":39704},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":543058,"byte_end":543072,"line_start":14,"line_end":14,"column_start":47,"column_end":61},"alias_span":null,"name":"RawWakerVTable","value":"","parent":{"krate":0,"index":7627}},{"kind":"Use","ref_id":{"krate":2,"index":12886},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":543074,"byte_end":543079,"line_start":14,"line_end":14,"column_start":63,"column_end":68},"alias_span":null,"name":"Waker","value":"","parent":{"krate":0,"index":7627}},{"kind":"Use","ref_id":{"krate":21,"index":237},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":543106,"byte_end":543115,"line_start":16,"line_end":16,"column_start":24,"column_end":33},"alias_span":null,"name":"FutureObj","value":"","parent":{"krate":0,"index":7627}},{"kind":"Use","ref_id":{"krate":21,"index":203},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":543117,"byte_end":543131,"line_start":16,"line_end":16,"column_start":35,"column_end":49},"alias_span":null,"name":"LocalFutureObj","value":"","parent":{"krate":0,"index":7627}},{"kind":"Use","ref_id":{"krate":21,"index":18},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":543133,"byte_end":543143,"line_start":16,"line_end":16,"column_start":51,"column_end":61},"alias_span":null,"name":"LocalSpawn","value":"","parent":{"krate":0,"index":7627}},{"kind":"Use","ref_id":{"krate":21,"index":15},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":543145,"byte_end":543150,"line_start":16,"line_end":16,"column_start":63,"column_end":68},"alias_span":null,"name":"Spawn","value":"","parent":{"krate":0,"index":7627}},{"kind":"Use","ref_id":{"krate":21,"index":21},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":543152,"byte_end":543162,"line_start":16,"line_end":16,"column_start":70,"column_end":80},"alias_span":null,"name":"SpawnError","value":"","parent":{"krate":0,"index":7627}},{"kind":"Use","ref_id":{"krate":21,"index":258},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":543164,"byte_end":543179,"line_start":16,"line_end":16,"column_start":82,"column_end":97},"alias_span":null,"name":"UnsafeFutureObj","value":"","parent":{"krate":0,"index":7627}},{"kind":"Use","ref_id":{"krate":21,"index":378},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":543205,"byte_end":543215,"line_start":18,"line_end":18,"column_start":23,"column_end":33},"alias_span":null,"name":"noop_waker","value":"","parent":{"krate":0,"index":7627}},{"kind":"Use","ref_id":{"krate":21,"index":379},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":543239,"byte_end":543253,"line_start":19,"line_end":19,"column_start":23,"column_end":37},"alias_span":null,"name":"noop_waker_ref","value":"","parent":{"krate":0,"index":7627}},{"kind":"Use","ref_id":{"krate":21,"index":94},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":543339,"byte_end":543346,"line_start":23,"line_end":23,"column_start":23,"column_end":30},"alias_span":null,"name":"ArcWake","value":"","parent":{"krate":0,"index":7627}},{"kind":"Use","ref_id":{"krate":21,"index":122},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":543432,"byte_end":543437,"line_start":27,"line_end":27,"column_start":23,"column_end":28},"alias_span":null,"name":"waker","value":"","parent":{"krate":0,"index":7627}},{"kind":"Use","ref_id":{"krate":21,"index":170},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":543524,"byte_end":543533,"line_start":31,"line_end":31,"column_start":24,"column_end":33},"alias_span":null,"name":"waker_ref","value":"","parent":{"krate":0,"index":7627}},{"kind":"Use","ref_id":{"krate":21,"index":407},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":543535,"byte_end":543543,"line_start":31,"line_end":31,"column_start":35,"column_end":43},"alias_span":null,"name":"WakerRef","value":"","parent":{"krate":0,"index":7627}},{"kind":"Use","ref_id":{"krate":18,"index":194},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":543622,"byte_end":543633,"line_start":34,"line_end":34,"column_start":41,"column_end":52},"alias_span":null,"name":"AtomicWaker","value":"","parent":{"krate":0,"index":7627}},{"kind":"Use","ref_id":{"krate":0,"index":7716},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":543669,"byte_end":543682,"line_start":37,"line_end":37,"column_start":23,"column_end":36},"alias_span":null,"name":"LocalSpawnExt","value":"","parent":{"krate":0,"index":7627}},{"kind":"Use","ref_id":{"krate":0,"index":7713},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":543684,"byte_end":543692,"line_start":37,"line_end":37,"column_start":38,"column_end":46},"alias_span":null,"name":"SpawnExt","value":"","parent":{"krate":0,"index":7627}},{"kind":"Use","ref_id":{"krate":0,"index":7862},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mod.rs","byte_start":550602,"byte_end":550618,"line_start":11,"line_end":11,"column_start":23,"column_end":39},"alias_span":null,"name":"MappedMutexGuard","value":"","parent":{"krate":0,"index":7728}},{"kind":"Use","ref_id":{"krate":0,"index":7783},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mod.rs","byte_start":550620,"byte_end":550625,"line_start":11,"line_end":11,"column_start":41,"column_end":46},"alias_span":null,"name":"Mutex","value":"","parent":{"krate":0,"index":7728}},{"kind":"Use","ref_id":{"krate":0,"index":7839},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mod.rs","byte_start":550627,"byte_end":550637,"line_start":11,"line_end":11,"column_start":48,"column_end":58},"alias_span":null,"name":"MutexGuard","value":"","parent":{"krate":0,"index":7728}},{"kind":"Use","ref_id":{"krate":0,"index":7820},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mod.rs","byte_start":550639,"byte_end":550654,"line_start":11,"line_end":11,"column_start":60,"column_end":75},"alias_span":null,"name":"MutexLockFuture","value":"","parent":{"krate":0,"index":7728}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":0,"byte_end":11572,"line_start":1,"line_end":337,"column_start":1,"column_end":18},"name":"","qualname":"::","value":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":1964},{"krate":0,"index":1965},{"krate":0,"index":1968},{"krate":0,"index":1971},{"krate":0,"index":1974},{"krate":0,"index":1977},{"krate":0,"index":6854},{"krate":0,"index":6855},{"krate":0,"index":6858},{"krate":0,"index":6861},{"krate":0,"index":6864},{"krate":0,"index":6867},{"krate":0,"index":7620},{"krate":0,"index":7621},{"krate":0,"index":7624},{"krate":0,"index":7627},{"krate":0,"index":7726},{"krate":0,"index":7728},{"krate":0,"index":8009},{"krate":0,"index":8071},{"krate":0,"index":8285}],"decl_id":null,"docs":" Combinators and utilities for working with `Future`s, `Stream`s, `Sink`s,\n and the `AsyncRead` and `AsyncWrite` traits.\n","sig":null,"attributes":[{"value":"/ Combinators and utilities for working with `Future`s, `Stream`s, `Sink`s,","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":0,"byte_end":77,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"/ and the `AsyncRead` and `AsyncWrite` traits.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":78,"byte_end":126,"line_start":2,"line_end":2,"column_start":1,"column_end":49}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       single_use_lifetimes, unreachable_pub)","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":243,"byte_end":375,"line_start":6,"line_end":12,"column_start":1,"column_end":3}}]},{"kind":"Function","id":{"krate":0,"index":43},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/async_await/poll.rs","byte_start":14000,"byte_end":14004,"line_start":24,"line_end":24,"column_start":8,"column_end":12},"name":"poll","qualname":"::async_await::poll::poll","value":"pub fn poll<F: Future + Unpin>(F) -> PollOnce<F>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":45},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/async_await/poll.rs","byte_start":14145,"byte_end":14153,"line_start":30,"line_end":30,"column_start":12,"column_end":20},"name":"PollOnce","qualname":"::async_await::poll::PollOnce","value":"PollOnce {  }","parent":null,"children":[{"krate":0,"index":47}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/async_await/poll.rs","byte_start":14079,"byte_end":14118,"line_start":28,"line_end":28,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":68},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/async_await/pending.rs","byte_start":15214,"byte_end":15226,"line_start":23,"line_end":23,"column_start":8,"column_end":20},"name":"pending_once","qualname":"::async_await::pending::pending_once","value":"pub fn pending_once() -> PendingOnce","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":69},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/async_await/pending.rs","byte_start":15351,"byte_end":15362,"line_start":29,"line_end":29,"column_start":12,"column_end":23},"name":"PendingOnce","qualname":"::async_await::pending::PendingOnce","value":"PendingOnce {  }","parent":null,"children":[{"krate":0,"index":70}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/async_await/pending.rs","byte_start":15285,"byte_end":15324,"line_start":27,"line_end":27,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":120},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/async_await/random.rs","byte_start":34247,"byte_end":34254,"line_start":13,"line_end":13,"column_start":8,"column_end":15},"name":"shuffle","qualname":"::async_await::random::shuffle","value":"pub fn shuffle<T>(&mut [T])","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":128},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/async_await/mod.rs","byte_start":13015,"byte_end":13027,"line_start":50,"line_end":50,"column_start":8,"column_end":20},"name":"assert_unpin","qualname":"::async_await::assert_unpin","value":"pub fn assert_unpin<T: Unpin>(&T)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/async_await/mod.rs","byte_start":12990,"byte_end":13007,"line_start":49,"line_end":49,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":130},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/async_await/mod.rs","byte_start":13089,"byte_end":13108,"line_start":54,"line_end":54,"column_start":8,"column_end":27},"name":"assert_fused_future","qualname":"::async_await::assert_fused_future","value":"pub fn assert_fused_future<T: Future + FusedFuture>(&T)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/async_await/mod.rs","byte_start":13064,"byte_end":13081,"line_start":53,"line_end":53,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":132},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/async_await/mod.rs","byte_start":13185,"byte_end":13204,"line_start":58,"line_end":58,"column_start":8,"column_end":27},"name":"assert_fused_stream","qualname":"::async_await::assert_fused_stream","value":"pub fn assert_fused_stream<T: Stream + FusedStream>(&T)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/async_await/mod.rs","byte_start":13160,"byte_end":13177,"line_start":57,"line_end":57,"column_start":1,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":135},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":1111,"byte_end":1120,"line_start":42,"line_end":42,"column_start":9,"column_end":18},"name":"__private","qualname":"::__private","value":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","parent":null,"children":[{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":148},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":158}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"async-await\")","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":1056,"byte_end":1087,"line_start":40,"line_end":40,"column_start":1,"column_end":32}}]},{"kind":"Mod","id":{"krate":0,"index":158},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":1282,"byte_end":1293,"line_start":50,"line_end":50,"column_start":13,"column_end":24},"name":"async_await","qualname":"::__private::async_await","value":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","parent":null,"children":[{"krate":0,"index":159}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":165},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future","qualname":"::future","value":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","parent":null,"children":[{"krate":0,"index":166},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":173},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":180},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":187},{"krate":0,"index":190},{"krate":0,"index":193},{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":628},{"krate":0,"index":631},{"krate":0,"index":634},{"krate":0,"index":637},{"krate":0,"index":640},{"krate":0,"index":643},{"krate":0,"index":646},{"krate":0,"index":649},{"krate":0,"index":652},{"krate":0,"index":655},{"krate":0,"index":658},{"krate":0,"index":661},{"krate":0,"index":662},{"krate":0,"index":665},{"krate":0,"index":668},{"krate":0,"index":921},{"krate":0,"index":922},{"krate":0,"index":925},{"krate":0,"index":928},{"krate":0,"index":931},{"krate":0,"index":934},{"krate":0,"index":937},{"krate":0,"index":940},{"krate":0,"index":943},{"krate":0,"index":946},{"krate":0,"index":949},{"krate":0,"index":952},{"krate":0,"index":955},{"krate":0,"index":958},{"krate":0,"index":961},{"krate":0,"index":964},{"krate":0,"index":967},{"krate":0,"index":1002},{"krate":0,"index":1003},{"krate":0,"index":1006},{"krate":0,"index":1009},{"krate":0,"index":1047},{"krate":0,"index":1048},{"krate":0,"index":1051},{"krate":0,"index":1054},{"krate":0,"index":1096},{"krate":0,"index":1097},{"krate":0,"index":1100},{"krate":0,"index":1103},{"krate":0,"index":1148},{"krate":0,"index":1149},{"krate":0,"index":1152},{"krate":0,"index":1155},{"krate":0,"index":1189},{"krate":0,"index":1192},{"krate":0,"index":1228},{"krate":0,"index":1229},{"krate":0,"index":1232},{"krate":0,"index":1235},{"krate":0,"index":1278},{"krate":0,"index":1279},{"krate":0,"index":1282},{"krate":0,"index":1285},{"krate":0,"index":1326},{"krate":0,"index":1327},{"krate":0,"index":1330},{"krate":0,"index":1333},{"krate":0,"index":1336},{"krate":0,"index":1339},{"krate":0,"index":1392},{"krate":0,"index":1393},{"krate":0,"index":1396},{"krate":0,"index":1399},{"krate":0,"index":1402},{"krate":0,"index":1405},{"krate":0,"index":1408},{"krate":0,"index":1411},{"krate":0,"index":1414},{"krate":0,"index":1417},{"krate":0,"index":1491},{"krate":0,"index":1492},{"krate":0,"index":1495},{"krate":0,"index":1498},{"krate":0,"index":1541},{"krate":0,"index":1542},{"krate":0,"index":1545},{"krate":0,"index":1548},{"krate":0,"index":1593},{"krate":0,"index":1594},{"krate":0,"index":1597},{"krate":0,"index":1600},{"krate":0,"index":1653},{"krate":0,"index":1654},{"krate":0,"index":1657},{"krate":0,"index":1660},{"krate":0,"index":1663},{"krate":0,"index":1666},{"krate":0,"index":1669},{"krate":0,"index":1672},{"krate":0,"index":1675},{"krate":0,"index":1678},{"krate":0,"index":1747},{"krate":0,"index":1748},{"krate":0,"index":1751},{"krate":0,"index":1754},{"krate":0,"index":1790},{"krate":0,"index":1791},{"krate":0,"index":1794},{"krate":0,"index":1797},{"krate":0,"index":1843},{"krate":0,"index":1844},{"krate":0,"index":1847},{"krate":0,"index":1850},{"krate":0,"index":1923},{"krate":0,"index":1926},{"krate":0,"index":1945},{"krate":0,"index":1946},{"krate":0,"index":1949},{"krate":0,"index":1952},{"krate":0,"index":1955},{"krate":0,"index":1956},{"krate":0,"index":1958},{"krate":0,"index":1961}],"decl_id":null,"docs":" Asynchronous values.","sig":null,"attributes":[{"value":"/ Asynchronous values.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":35316,"byte_end":35340,"line_start":1,"line_end":1,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":35341,"byte_end":35344,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":35345,"byte_end":35370,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":35371,"byte_end":35374,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - The [`Future`] trait.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":35375,"byte_end":35402,"line_start":5,"line_end":5,"column_start":1,"column_end":28}},{"value":"/ - The [`FutureExt`] and [`TryFutureExt`] trait, which provides adapters for","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":35403,"byte_end":35482,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"/   chaining and composing futures.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":35483,"byte_end":35520,"line_start":7,"line_end":7,"column_start":1,"column_end":38}},{"value":"/ - Top-level future combinators like [`lazy`](lazy()) which creates a future","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":35521,"byte_end":35600,"line_start":8,"line_end":8,"column_start":1,"column_end":80}},{"value":"/   from a closure that defines its return value, and [`ready`](ready()),","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":35601,"byte_end":35676,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/   which constructs a future with an immediate defined value.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":35677,"byte_end":35741,"line_start":10,"line_end":10,"column_start":1,"column_end":65}}]},{"kind":"StructVariant","id":{"krate":0,"index":8308},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/flatten.rs","byte_start":59123,"byte_end":59128,"line_start":14,"line_end":14,"column_start":9,"column_end":14},"name":"First","qualname":"::future::future::flatten::Flatten::First","value":"Flatten::First { f }","parent":{"krate":0,"index":8305},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":8310},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/flatten.rs","byte_start":59157,"byte_end":59163,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"name":"Second","qualname":"::future::future::flatten::Flatten::Second","value":"Flatten::Second { f }","parent":{"krate":0,"index":8305},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8312},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/flatten.rs","byte_start":59192,"byte_end":59197,"line_start":16,"line_end":16,"column_start":9,"column_end":14},"name":"Empty","qualname":"::future::future::flatten::Flatten::Empty","value":"Flatten::Empty","parent":{"krate":0,"index":8305},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":8305},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/flatten.rs","byte_start":59093,"byte_end":59100,"line_start":13,"line_end":13,"column_start":14,"column_end":21},"name":"Flatten","qualname":"::future::future::flatten::Flatten","value":"pub enum Flatten<Fut1, Fut2> {\n    First {\n        f: Fut1,\n    },\n    Second {\n        f: Fut2,\n    },\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":8308},{"krate":0,"index":8310},{"krate":0,"index":8312}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8352},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":63554,"byte_end":63558,"line_start":11,"line_end":11,"column_start":16,"column_end":20},"name":"Fuse","qualname":"::future::future::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":8354}],"decl_id":null,"docs":" Future for the [`fuse`](super::FutureExt::fuse) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":345},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":65377,"byte_end":65387,"line_start":69,"line_end":69,"column_start":12,"column_end":22},"name":"terminated","qualname":"<Fuse<Fut>>::terminated","value":"pub fn terminated() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Fuse`-wrapped future which is already terminated.","sig":null,"attributes":[{"value":"/ Creates a new `Fuse`-wrapped future which is already terminated.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":63755,"byte_end":63823,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":63828,"byte_end":63831,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ This can be useful in combination with looping and the `select!`","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":63836,"byte_end":63904,"line_start":26,"line_end":26,"column_start":5,"column_end":73}},{"value":"/ macro, which bypasses terminated futures.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":63909,"byte_end":63954,"line_start":27,"line_end":27,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":63959,"byte_end":63962,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":63967,"byte_end":63981,"line_start":29,"line_end":29,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":63986,"byte_end":63989,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":63994,"byte_end":64001,"line_start":31,"line_end":31,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":64006,"byte_end":64047,"line_start":32,"line_end":32,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":64052,"byte_end":64083,"line_start":33,"line_end":33,"column_start":5,"column_end":36}},{"value":"/ use futures::future::{Fuse, FusedFuture, FutureExt};","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":64088,"byte_end":64144,"line_start":34,"line_end":34,"column_start":5,"column_end":61}},{"value":"/ use futures::select;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":64149,"byte_end":64173,"line_start":35,"line_end":35,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":64178,"byte_end":64213,"line_start":36,"line_end":36,"column_start":5,"column_end":40}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":64218,"byte_end":64243,"line_start":37,"line_end":37,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":64248,"byte_end":64251,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ let (sender, mut stream) = mpsc::unbounded();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":64256,"byte_end":64305,"line_start":39,"line_end":39,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":64310,"byte_end":64313,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ // Send a few messages into the stream","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":64318,"byte_end":64360,"line_start":41,"line_end":41,"column_start":5,"column_end":47}},{"value":"/ sender.unbounded_send(()).unwrap();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":64365,"byte_end":64404,"line_start":42,"line_end":42,"column_start":5,"column_end":44}},{"value":"/ sender.unbounded_send(()).unwrap();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":64409,"byte_end":64448,"line_start":43,"line_end":43,"column_start":5,"column_end":44}},{"value":"/ drop(sender);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":64453,"byte_end":64470,"line_start":44,"line_end":44,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":64475,"byte_end":64478,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ // Use `Fuse::terminated()` to create an already-terminated future","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":64483,"byte_end":64553,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/ // which may be instantiated later.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":64558,"byte_end":64597,"line_start":47,"line_end":47,"column_start":5,"column_end":44}},{"value":"/ let foo_printer = Fuse::terminated();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":64602,"byte_end":64643,"line_start":48,"line_end":48,"column_start":5,"column_end":46}},{"value":"/ pin_mut!(foo_printer);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":64648,"byte_end":64674,"line_start":49,"line_end":49,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":64679,"byte_end":64682,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ loop {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":64687,"byte_end":64697,"line_start":51,"line_end":51,"column_start":5,"column_end":15}},{"value":"/     select! {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":64702,"byte_end":64719,"line_start":52,"line_end":52,"column_start":5,"column_end":22}},{"value":"/         _ = foo_printer => {},","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":64724,"byte_end":64758,"line_start":53,"line_end":53,"column_start":5,"column_end":39}},{"value":"/         () = stream.select_next_some() => {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":64763,"byte_end":64810,"line_start":54,"line_end":54,"column_start":5,"column_end":52}},{"value":"/             if !foo_printer.is_terminated() {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":64815,"byte_end":64864,"line_start":55,"line_end":55,"column_start":5,"column_end":54}},{"value":"/                 println!(\"Foo is already being printed!\");","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":64869,"byte_end":64931,"line_start":56,"line_end":56,"column_start":5,"column_end":67}},{"value":"/             } else {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":64936,"byte_end":64960,"line_start":57,"line_end":57,"column_start":5,"column_end":29}},{"value":"/                 foo_printer.set(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":64965,"byte_end":65008,"line_start":58,"line_end":58,"column_start":5,"column_end":48}},{"value":"/                     // do some other async operations","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":65013,"byte_end":65070,"line_start":59,"line_end":59,"column_start":5,"column_end":62}},{"value":"/                     println!(\"Printing foo from `foo_printer` future\");","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":65075,"byte_end":65150,"line_start":60,"line_end":60,"column_start":5,"column_end":80}},{"value":"/                 }.fuse());","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":65155,"byte_end":65185,"line_start":61,"line_end":61,"column_start":5,"column_end":35}},{"value":"/             }","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":65190,"byte_end":65207,"line_start":62,"line_end":62,"column_start":5,"column_end":22}},{"value":"/         },","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":65212,"byte_end":65226,"line_start":63,"line_end":63,"column_start":5,"column_end":19}},{"value":"/         complete => break, // `foo_printer` is terminated and the stream is done","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":65231,"byte_end":65315,"line_start":64,"line_end":64,"column_start":5,"column_end":89}},{"value":"/     }","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":65320,"byte_end":65329,"line_start":65,"line_end":65,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":65334,"byte_end":65339,"line_start":66,"line_end":66,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":65344,"byte_end":65353,"line_start":67,"line_end":67,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":65358,"byte_end":65365,"line_start":68,"line_end":68,"column_start":5,"column_end":12}}]},{"kind":"StructVariant","id":{"krate":0,"index":8391},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/map.rs","byte_start":66445,"byte_end":66455,"line_start":16,"line_end":16,"column_start":9,"column_end":19},"name":"Incomplete","qualname":"::future::future::map::Map::Incomplete","value":"Map::Incomplete { future, f }","parent":{"krate":0,"index":8388},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8394},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/map.rs","byte_start":66539,"byte_end":66547,"line_start":21,"line_end":21,"column_start":9,"column_end":17},"name":"Complete","qualname":"::future::future::map::Map::Complete","value":"Map::Complete","parent":{"krate":0,"index":8388},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":8388},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/map.rs","byte_start":66423,"byte_end":66426,"line_start":15,"line_end":15,"column_start":14,"column_end":17},"name":"Map","qualname":"::future::future::map::Map","value":"pub enum Map<Fut, F> {\n    Incomplete {\n        future: Fut,\n        f: F,\n    },\n    Complete,\n}","parent":null,"children":[{"krate":0,"index":8391},{"krate":0,"index":8394}],"decl_id":null,"docs":" Internal Map future\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341990,"byte_end":10341999,"line_start":678,"line_end":678,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8443},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":39549,"byte_end":39556,"line_start":31,"line_end":31,"column_start":5,"column_end":12},"name":"Flatten","qualname":"::future::future::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":8445}],"decl_id":null,"docs":" Future for the [`flatten`](super::FutureExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8491},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":39807,"byte_end":39820,"line_start":39,"line_end":39,"column_start":5,"column_end":18},"name":"FlattenStream","qualname":"::future::future::FlattenStream","value":"FlattenStream {  }","parent":null,"children":[{"krate":0,"index":8493}],"decl_id":null,"docs":" Stream for the [`flatten_stream`](FutureExt::flatten_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8549},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":40160,"byte_end":40163,"line_start":50,"line_end":50,"column_start":5,"column_end":8},"name":"Map","qualname":"::future::future::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":8552}],"decl_id":null,"docs":" Future for the [`map`](super::FutureExt::map) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8609},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":40370,"byte_end":40380,"line_start":57,"line_end":57,"column_start":5,"column_end":15},"name":"IntoStream","qualname":"::future::future::IntoStream","value":"IntoStream {  }","parent":null,"children":[{"krate":0,"index":8611}],"decl_id":null,"docs":" Stream for the [`into_stream`](FutureExt::into_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8659},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":40586,"byte_end":40593,"line_start":64,"line_end":64,"column_start":5,"column_end":12},"name":"MapInto","qualname":"::future::future::MapInto","value":"MapInto {  }","parent":null,"children":[{"krate":0,"index":8662}],"decl_id":null,"docs":" Future for the [`map_into`](FutureExt::map_into) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8721},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":40786,"byte_end":40790,"line_start":71,"line_end":71,"column_start":5,"column_end":9},"name":"Then","qualname":"::future::future::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":8725}],"decl_id":null,"docs":" Future for the [`then`](FutureExt::then) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8794},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":41035,"byte_end":41042,"line_start":78,"line_end":78,"column_start":5,"column_end":12},"name":"Inspect","qualname":"::future::future::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":8797}],"decl_id":null,"docs":" Future for the [`inspect`](FutureExt::inspect) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8854},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":41283,"byte_end":41293,"line_start":85,"line_end":85,"column_start":5,"column_end":15},"name":"NeverError","qualname":"::future::future::NeverError","value":"NeverError {  }","parent":null,"children":[{"krate":0,"index":8856}],"decl_id":null,"docs":" Future for the [`never_error`](super::FutureExt::never_error) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8902},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":41506,"byte_end":41515,"line_start":92,"line_end":92,"column_start":5,"column_end":14},"name":"UnitError","qualname":"::future::future::UnitError","value":"UnitError {  }","parent":null,"children":[{"krate":0,"index":8904}],"decl_id":null,"docs":" Future for the [`unit_error`](super::FutureExt::unit_error) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8948},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/catch_unwind.rs","byte_start":68143,"byte_end":68154,"line_start":13,"line_end":13,"column_start":16,"column_end":27},"name":"CatchUnwind","qualname":"::future::future::catch_unwind::CatchUnwind","value":"CatchUnwind {  }","parent":null,"children":[{"krate":0,"index":8950}],"decl_id":null,"docs":" Future for the [`catch_unwind`](super::FutureExt::catch_unwind) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":496},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":69157,"byte_end":69163,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"Shared","qualname":"::future::future::shared::Shared","value":"Shared {  }","parent":null,"children":[{"krate":0,"index":498},{"krate":0,"index":499}],"decl_id":null,"docs":" Future for the [`shared`](super::FutureExt::shared) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`shared`](super::FutureExt::shared) method.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":69014,"byte_end":69077,"line_start":12,"line_end":12,"column_start":1,"column_end":64}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":69078,"byte_end":69145,"line_start":13,"line_end":13,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":507},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":69537,"byte_end":69547,"line_start":30,"line_end":30,"column_start":12,"column_end":22},"name":"WeakShared","qualname":"::future::future::shared::WeakShared","value":"","parent":null,"children":[],"decl_id":null,"docs":" A weak reference to a [`Shared`] that can be upgraded much like an `Arc`.\n","sig":null,"attributes":[{"value":"/ A weak reference to a [`Shared`] that can be upgraded much like an `Arc`.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":69448,"byte_end":69525,"line_start":29,"line_end":29,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":547},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":71649,"byte_end":71653,"line_start":112,"line_end":112,"column_start":12,"column_end":16},"name":"peek","qualname":"<Shared<Fut>>::peek","value":"pub fn peek(&Self) -> Option<&Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns [`Some`] containing a reference to this [`Shared`]'s output if\n it has already been computed by a clone or [`None`] if it hasn't been\n computed yet or this [`Shared`] already returned its output from\n [`poll`](Future::poll).\n","sig":null,"attributes":[{"value":"/ Returns [`Some`] containing a reference to this [`Shared`]'s output if","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":71380,"byte_end":71454,"line_start":108,"line_end":108,"column_start":5,"column_end":79}},{"value":"/ it has already been computed by a clone or [`None`] if it hasn't been","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":71459,"byte_end":71532,"line_start":109,"line_end":109,"column_start":5,"column_end":78}},{"value":"/ computed yet or this [`Shared`] already returned its output from","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":71537,"byte_end":71605,"line_start":110,"line_end":110,"column_start":5,"column_end":73}},{"value":"/ [`poll`](Future::poll).","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":71610,"byte_end":71637,"line_start":111,"line_end":111,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":548},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":72148,"byte_end":72157,"line_start":126,"line_end":126,"column_start":12,"column_end":21},"name":"downgrade","qualname":"<Shared<Fut>>::downgrade","value":"pub fn downgrade(&Self) -> Option<WeakShared<Fut>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`WeakShared`] for this [`Shared`].","sig":null,"attributes":[{"value":"/ Creates a new [`WeakShared`] for this [`Shared`].","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":72005,"byte_end":72058,"line_start":123,"line_end":123,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":72063,"byte_end":72066,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if it has already been polled to completion.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":72071,"byte_end":72136,"line_start":125,"line_end":125,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":549},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":72751,"byte_end":72763,"line_start":142,"line_end":142,"column_start":12,"column_end":24},"name":"strong_count","qualname":"<Shared<Fut>>::strong_count","value":"pub fn strong_count(&Self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Gets the number of strong pointers to this allocation.","sig":null,"attributes":[{"value":"/ Gets the number of strong pointers to this allocation.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":72339,"byte_end":72397,"line_start":133,"line_end":133,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":72402,"byte_end":72405,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if it has already been polled to completion.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":72410,"byte_end":72475,"line_start":135,"line_end":135,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":72480,"byte_end":72483,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":72488,"byte_end":72500,"line_start":137,"line_end":137,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":72505,"byte_end":72508,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ This method by itself is safe, but using it correctly requires extra care. Another thread","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":72513,"byte_end":72606,"line_start":139,"line_end":139,"column_start":5,"column_end":98}},{"value":"/ can change the strong count at any time, including potentially between calling this method","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":72611,"byte_end":72705,"line_start":140,"line_end":140,"column_start":5,"column_end":99}},{"value":"/ and acting on the result.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":72710,"byte_end":72739,"line_start":141,"line_end":141,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":551},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":73271,"byte_end":73281,"line_start":155,"line_end":155,"column_start":12,"column_end":22},"name":"weak_count","qualname":"<Shared<Fut>>::weak_count","value":"pub fn weak_count(&Self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Gets the number of weak pointers to this allocation.","sig":null,"attributes":[{"value":"/ Gets the number of weak pointers to this allocation.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":72863,"byte_end":72919,"line_start":146,"line_end":146,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":72924,"byte_end":72927,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if it has already been polled to completion.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":72932,"byte_end":72997,"line_start":148,"line_end":148,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":73002,"byte_end":73005,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":73010,"byte_end":73022,"line_start":150,"line_end":150,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":73027,"byte_end":73030,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ This method by itself is safe, but using it correctly requires extra care. Another thread","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":73035,"byte_end":73128,"line_start":152,"line_end":152,"column_start":5,"column_end":98}},{"value":"/ can change the weak count at any time, including potentially between calling this method","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":73133,"byte_end":73225,"line_start":153,"line_end":153,"column_start":5,"column_end":97}},{"value":"/ and acting on the result.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":73230,"byte_end":73259,"line_start":154,"line_end":154,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":585},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":79731,"byte_end":79738,"line_start":368,"line_end":368,"column_start":12,"column_end":19},"name":"upgrade","qualname":"<WeakShared<Fut>>::upgrade","value":"pub fn upgrade(&Self) -> Option<Shared<Fut>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to upgrade this [`WeakShared`] into a [`Shared`].","sig":null,"attributes":[{"value":"/ Attempts to upgrade this [`WeakShared`] into a [`Shared`].","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":79541,"byte_end":79603,"line_start":364,"line_end":364,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":79608,"byte_end":79611,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if all clones of the [`Shared`] have been dropped or polled","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":79616,"byte_end":79696,"line_start":366,"line_end":366,"column_start":5,"column_end":85}},{"value":"/ to completion.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":79701,"byte_end":79719,"line_start":367,"line_end":367,"column_start":5,"column_end":23}}]},{"kind":"Trait","id":{"krate":0,"index":595},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":42497,"byte_end":42506,"line_start":123,"line_end":123,"column_start":11,"column_end":20},"name":"FutureExt","qualname":"::future::future::FutureExt","value":"FutureExt: Future","parent":null,"children":[{"krate":0,"index":596},{"krate":0,"index":599},{"krate":0,"index":601},{"krate":0,"index":604},{"krate":0,"index":606},{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":612},{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":618},{"krate":0,"index":620},{"krate":0,"index":621},{"krate":0,"index":622},{"krate":0,"index":623}],"decl_id":null,"docs":" An extension trait for `Future`s that provides a variety of convenient\n adapters.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Future`s that provides a variety of convenient","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":42398,"byte_end":42472,"line_start":121,"line_end":121,"column_start":1,"column_end":75}},{"value":"/ adapters.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":42473,"byte_end":42486,"line_start":122,"line_end":122,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":596},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":43338,"byte_end":43341,"line_start":146,"line_end":146,"column_start":8,"column_end":11},"name":"map","qualname":"::future::future::FutureExt::map","value":"pub fn map<U, F>(Self, F) -> Map<Self, F> where F: FnOnce(Self::Output) -> U,\nSelf: Sized","parent":{"krate":0,"index":595},"children":[],"decl_id":null,"docs":" Map this future's output to a different type, returning a new future of\n the resulting type.","sig":null,"attributes":[{"value":"/ Map this future's output to a different type, returning a new future of","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":42521,"byte_end":42596,"line_start":124,"line_end":124,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":42601,"byte_end":42624,"line_start":125,"line_end":125,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":42629,"byte_end":42632,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This function is similar to the `Option::map` or `Iterator::map` where","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":42637,"byte_end":42711,"line_start":127,"line_end":127,"column_start":5,"column_end":79}},{"value":"/ it will change the type of the underlying future. This is useful to","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":42716,"byte_end":42787,"line_start":128,"line_end":128,"column_start":5,"column_end":76}},{"value":"/ chain along a computation once a future has been resolved.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":42792,"byte_end":42854,"line_start":129,"line_end":129,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":42859,"byte_end":42862,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":42867,"byte_end":42938,"line_start":131,"line_end":131,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":42943,"byte_end":43014,"line_start":132,"line_end":132,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":43019,"byte_end":43040,"line_start":133,"line_end":133,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":43045,"byte_end":43048,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":43053,"byte_end":43067,"line_start":135,"line_end":135,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":43072,"byte_end":43075,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":43080,"byte_end":43087,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":43092,"byte_end":43133,"line_start":138,"line_end":138,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":43138,"byte_end":43173,"line_start":139,"line_end":139,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":43178,"byte_end":43181,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let future = async { 1 };","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":43186,"byte_end":43215,"line_start":141,"line_end":141,"column_start":5,"column_end":34}},{"value":"/ let new_future = future.map(|x| x + 3);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":43220,"byte_end":43263,"line_start":142,"line_end":142,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(new_future.await, 4);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":43268,"byte_end":43304,"line_start":143,"line_end":143,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":43309,"byte_end":43318,"line_start":144,"line_end":144,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":43323,"byte_end":43330,"line_start":145,"line_end":145,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":599},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":43738,"byte_end":43746,"line_start":159,"line_end":159,"column_start":8,"column_end":16},"name":"map_into","qualname":"::future::future::FutureExt::map_into","value":"pub fn map_into<U>(Self) -> MapInto<Self, U> where Self::Output: Into<U>,\nSelf: Sized","parent":{"krate":0,"index":595},"children":[],"decl_id":null,"docs":" Map this future's output to a different type, returning a new future of\n the resulting type.","sig":null,"attributes":[{"value":"/ Map this future's output to a different type, returning a new future of","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":43511,"byte_end":43586,"line_start":154,"line_end":154,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":43591,"byte_end":43614,"line_start":155,"line_end":155,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":43619,"byte_end":43622,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to calling `map(Into::into)` but allows naming","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":43627,"byte_end":43705,"line_start":157,"line_end":157,"column_start":5,"column_end":83}},{"value":"/ the return type.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":43710,"byte_end":43730,"line_start":158,"line_end":158,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":601},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":44758,"byte_end":44762,"line_start":191,"line_end":191,"column_start":8,"column_end":12},"name":"then","qualname":"::future::future::FutureExt::then","value":"pub fn then<Fut, F>(Self, F) -> Then<Self, Fut, F> where\nF: FnOnce(Self::Output) -> Fut, Fut: Future, Self: Sized","parent":{"krate":0,"index":595},"children":[],"decl_id":null,"docs":" Chain on a computation for when a future finished, passing the result of\n the future to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when a future finished, passing the result of","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":43905,"byte_end":43981,"line_start":167,"line_end":167,"column_start":5,"column_end":81}},{"value":"/ the future to the provided closure `f`.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":43986,"byte_end":44029,"line_start":168,"line_end":168,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":44034,"byte_end":44037,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `Future` trait","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":44042,"byte_end":44113,"line_start":170,"line_end":170,"column_start":5,"column_end":76}},{"value":"/ and can represent some more work to be done before the composed future","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":44118,"byte_end":44192,"line_start":171,"line_end":171,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":44197,"byte_end":44213,"line_start":172,"line_end":172,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":44218,"byte_end":44221,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ The closure `f` is only run *after* successful completion of the `self`","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":44226,"byte_end":44301,"line_start":174,"line_end":174,"column_start":5,"column_end":80}},{"value":"/ future.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":44306,"byte_end":44317,"line_start":175,"line_end":175,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":44322,"byte_end":44325,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":44330,"byte_end":44401,"line_start":177,"line_end":177,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":44406,"byte_end":44432,"line_start":178,"line_end":178,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":44437,"byte_end":44440,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":44445,"byte_end":44459,"line_start":180,"line_end":180,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":44464,"byte_end":44467,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":44472,"byte_end":44479,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":44484,"byte_end":44525,"line_start":183,"line_end":183,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":44530,"byte_end":44565,"line_start":184,"line_end":184,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":44570,"byte_end":44573,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ let future_of_1 = async { 1 };","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":44578,"byte_end":44612,"line_start":186,"line_end":186,"column_start":5,"column_end":39}},{"value":"/ let future_of_4 = future_of_1.then(|x| async move { x + 3 });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":44617,"byte_end":44682,"line_start":187,"line_end":187,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(future_of_4.await, 4);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":44687,"byte_end":44724,"line_start":188,"line_end":188,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":44729,"byte_end":44738,"line_start":189,"line_end":189,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":44743,"byte_end":44750,"line_start":190,"line_end":190,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":604},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":45632,"byte_end":45643,"line_start":222,"line_end":222,"column_start":8,"column_end":19},"name":"left_future","qualname":"::future::future::FutureExt::left_future","value":"pub fn left_future<B>(Self) -> Either<Self, B> where B: Future<Output =\nSelf::Output>, Self: Sized","parent":{"krate":0,"index":595},"children":[],"decl_id":null,"docs":" Wrap this future in an `Either` future, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this future in an `Either` future, making it the left-hand variant","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":44974,"byte_end":45049,"line_start":200,"line_end":200,"column_start":5,"column_end":80}},{"value":"/ of that `Either`.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":45054,"byte_end":45075,"line_start":201,"line_end":201,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":45080,"byte_end":45083,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_future` method to write `if`","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":45088,"byte_end":45168,"line_start":203,"line_end":203,"column_start":5,"column_end":85}},{"value":"/ statements that evaluate to different futures in different branches.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":45173,"byte_end":45245,"line_start":204,"line_end":204,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":45250,"byte_end":45253,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":45258,"byte_end":45272,"line_start":206,"line_end":206,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":45277,"byte_end":45280,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":45285,"byte_end":45292,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":45297,"byte_end":45338,"line_start":209,"line_end":209,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":45343,"byte_end":45378,"line_start":210,"line_end":210,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":45383,"byte_end":45386,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ let x = 6;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":45391,"byte_end":45405,"line_start":212,"line_end":212,"column_start":5,"column_end":19}},{"value":"/ let future = if x < 10 {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":45410,"byte_end":45438,"line_start":213,"line_end":213,"column_start":5,"column_end":33}},{"value":"/     async { true }.left_future()","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":45443,"byte_end":45479,"line_start":214,"line_end":214,"column_start":5,"column_end":41}},{"value":"/ } else {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":45484,"byte_end":45496,"line_start":215,"line_end":215,"column_start":5,"column_end":17}},{"value":"/     async { false }.right_future()","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":45501,"byte_end":45539,"line_start":216,"line_end":216,"column_start":5,"column_end":43}},{"value":"/ };","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":45544,"byte_end":45550,"line_start":217,"line_end":217,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":45555,"byte_end":45558,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future.await, true);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":45563,"byte_end":45598,"line_start":219,"line_end":219,"column_start":5,"column_end":40}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":45603,"byte_end":45612,"line_start":220,"line_end":220,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":45617,"byte_end":45624,"line_start":221,"line_end":221,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":606},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":46482,"byte_end":46494,"line_start":252,"line_end":252,"column_start":8,"column_end":20},"name":"right_future","qualname":"::future::future::FutureExt::right_future","value":"pub fn right_future<A>(Self) -> Either<A, Self> where A: Future<Output =\nSelf::Output>, Self: Sized","parent":{"krate":0,"index":595},"children":[],"decl_id":null,"docs":" Wrap this future in an `Either` future, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this future in an `Either` future, making it the right-hand variant","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":45823,"byte_end":45899,"line_start":230,"line_end":230,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":45904,"byte_end":45925,"line_start":231,"line_end":231,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":45930,"byte_end":45933,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_future` method to write `if`","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":45938,"byte_end":46017,"line_start":233,"line_end":233,"column_start":5,"column_end":84}},{"value":"/ statements that evaluate to different futures in different branches.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":46022,"byte_end":46094,"line_start":234,"line_end":234,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":46099,"byte_end":46102,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":46107,"byte_end":46121,"line_start":236,"line_end":236,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":46126,"byte_end":46129,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":46134,"byte_end":46141,"line_start":238,"line_end":238,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":46146,"byte_end":46187,"line_start":239,"line_end":239,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":46192,"byte_end":46227,"line_start":240,"line_end":240,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":46232,"byte_end":46235,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ let x = 6;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":46240,"byte_end":46254,"line_start":242,"line_end":242,"column_start":5,"column_end":19}},{"value":"/ let future = if x > 10 {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":46259,"byte_end":46287,"line_start":243,"line_end":243,"column_start":5,"column_end":33}},{"value":"/     async { true }.left_future()","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":46292,"byte_end":46328,"line_start":244,"line_end":244,"column_start":5,"column_end":41}},{"value":"/ } else {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":46333,"byte_end":46345,"line_start":245,"line_end":245,"column_start":5,"column_end":17}},{"value":"/     async { false }.right_future()","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":46350,"byte_end":46388,"line_start":246,"line_end":246,"column_start":5,"column_end":43}},{"value":"/ };","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":46393,"byte_end":46399,"line_start":247,"line_end":247,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":46404,"byte_end":46407,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future.await, false);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":46412,"byte_end":46448,"line_start":249,"line_end":249,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":46453,"byte_end":46462,"line_start":250,"line_end":250,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":46467,"byte_end":46474,"line_start":251,"line_end":251,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":608},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":47273,"byte_end":47284,"line_start":278,"line_end":278,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::future::future::FutureExt::into_stream","value":"pub fn into_stream(Self) -> IntoStream<Self> where Self: Sized","parent":{"krate":0,"index":595},"children":[],"decl_id":null,"docs":" Convert this future into a single element stream.","sig":null,"attributes":[{"value":"/ Convert this future into a single element stream.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":46675,"byte_end":46728,"line_start":260,"line_end":260,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":46733,"byte_end":46736,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ The returned stream contains single success if this future resolves to","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":46741,"byte_end":46815,"line_start":262,"line_end":262,"column_start":5,"column_end":79}},{"value":"/ success or single error if this future resolves into error.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":46820,"byte_end":46883,"line_start":263,"line_end":263,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":46888,"byte_end":46891,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":46896,"byte_end":46910,"line_start":265,"line_end":265,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":46915,"byte_end":46918,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":46923,"byte_end":46930,"line_start":267,"line_end":267,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":46935,"byte_end":46976,"line_start":268,"line_end":268,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":46981,"byte_end":47016,"line_start":269,"line_end":269,"column_start":5,"column_end":40}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":47021,"byte_end":47056,"line_start":270,"line_end":270,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":47061,"byte_end":47064,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ let future = async { 17 };","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":47069,"byte_end":47099,"line_start":272,"line_end":272,"column_start":5,"column_end":35}},{"value":"/ let stream = future.into_stream();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":47104,"byte_end":47142,"line_start":273,"line_end":273,"column_start":5,"column_end":43}},{"value":"/ let collected: Vec<_> = stream.collect().await;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":47147,"byte_end":47198,"line_start":274,"line_end":274,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(collected, vec![17]);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":47203,"byte_end":47239,"line_start":275,"line_end":275,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":47244,"byte_end":47253,"line_start":276,"line_end":276,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":47258,"byte_end":47265,"line_start":277,"line_end":277,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":609},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":48149,"byte_end":48156,"line_start":307,"line_end":307,"column_start":8,"column_end":15},"name":"flatten","qualname":"::future::future::FutureExt::flatten","value":"pub fn flatten(Self) -> Flatten<Self> where Self::Output: Future, Self: Sized","parent":{"krate":0,"index":595},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the output of this\n future is itself another future.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the output of this","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":47423,"byte_end":47487,"line_start":285,"line_end":285,"column_start":5,"column_end":69}},{"value":"/ future is itself another future.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":47492,"byte_end":47528,"line_start":286,"line_end":286,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":47533,"byte_end":47536,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ This can be useful when combining futures together to flatten the","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":47541,"byte_end":47610,"line_start":288,"line_end":288,"column_start":5,"column_end":74}},{"value":"/ computation out the final result.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":47615,"byte_end":47652,"line_start":289,"line_end":289,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":47657,"byte_end":47660,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ This method is roughly equivalent to `self.then(|x| x)`.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":47665,"byte_end":47725,"line_start":291,"line_end":291,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":47730,"byte_end":47733,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":47738,"byte_end":47809,"line_start":293,"line_end":293,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":47814,"byte_end":47840,"line_start":294,"line_end":294,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":47845,"byte_end":47848,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":47853,"byte_end":47867,"line_start":296,"line_end":296,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":47872,"byte_end":47875,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":47880,"byte_end":47887,"line_start":298,"line_end":298,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":47892,"byte_end":47933,"line_start":299,"line_end":299,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":47938,"byte_end":47973,"line_start":300,"line_end":300,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":47978,"byte_end":47981,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ let nested_future = async { async { 1 } };","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":47986,"byte_end":48032,"line_start":302,"line_end":302,"column_start":5,"column_end":51}},{"value":"/ let future = nested_future.flatten();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":48037,"byte_end":48078,"line_start":303,"line_end":303,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(future.await, 1);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":48083,"byte_end":48115,"line_start":304,"line_end":304,"column_start":5,"column_end":37}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":48120,"byte_end":48129,"line_start":305,"line_end":305,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":48134,"byte_end":48141,"line_start":306,"line_end":306,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":610},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":49261,"byte_end":49275,"line_start":341,"line_end":341,"column_start":8,"column_end":22},"name":"flatten_stream","qualname":"::future::future::FutureExt::flatten_stream","value":"pub fn flatten_stream(Self) -> FlattenStream<Self> where Self::Output: Stream,\nSelf: Sized","parent":{"krate":0,"index":595},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is a stream.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":48370,"byte_end":48445,"line_start":316,"line_end":316,"column_start":5,"column_end":80}},{"value":"/ future is a stream.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":48450,"byte_end":48473,"line_start":317,"line_end":317,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":48478,"byte_end":48481,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ This can be useful when stream initialization is deferred, and it is","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":48486,"byte_end":48558,"line_start":319,"line_end":319,"column_start":5,"column_end":77}},{"value":"/ convenient to work with that stream as if stream was available at the","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":48563,"byte_end":48636,"line_start":320,"line_end":320,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":48641,"byte_end":48655,"line_start":321,"line_end":321,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":48660,"byte_end":48663,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":48668,"byte_end":48738,"line_start":323,"line_end":323,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":48743,"byte_end":48761,"line_start":324,"line_end":324,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":48766,"byte_end":48769,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":48774,"byte_end":48788,"line_start":326,"line_end":326,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":48793,"byte_end":48796,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":48801,"byte_end":48808,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":48813,"byte_end":48854,"line_start":329,"line_end":329,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":48859,"byte_end":48894,"line_start":330,"line_end":330,"column_start":5,"column_end":40}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":48899,"byte_end":48942,"line_start":331,"line_end":331,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":48947,"byte_end":48950,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ let stream_items = vec![17, 18, 19];","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":48955,"byte_end":48995,"line_start":333,"line_end":333,"column_start":5,"column_end":45}},{"value":"/ let future_of_a_stream = async { stream::iter(stream_items) };","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":49000,"byte_end":49066,"line_start":334,"line_end":334,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":49071,"byte_end":49074,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ let stream = future_of_a_stream.flatten_stream();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":49079,"byte_end":49132,"line_start":336,"line_end":336,"column_start":5,"column_end":58}},{"value":"/ let list: Vec<_> = stream.collect().await;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":49137,"byte_end":49183,"line_start":337,"line_end":337,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(list, vec![17, 18, 19]);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":49188,"byte_end":49227,"line_start":338,"line_end":338,"column_start":5,"column_end":44}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":49232,"byte_end":49241,"line_start":339,"line_end":339,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":49246,"byte_end":49253,"line_start":340,"line_end":340,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":611},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":50363,"byte_end":50367,"line_start":365,"line_end":365,"column_start":8,"column_end":12},"name":"fuse","qualname":"::future::future::FutureExt::fuse","value":"pub fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":595},"children":[],"decl_id":null,"docs":" Fuse a future such that `poll` will never again be called once it has\n completed. This method can be used to turn any `Future` into a\n `FusedFuture`.","sig":null,"attributes":[{"value":"/ Fuse a future such that `poll` will never again be called once it has","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":49468,"byte_end":49541,"line_start":349,"line_end":349,"column_start":5,"column_end":78}},{"value":"/ completed. This method can be used to turn any `Future` into a","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":49546,"byte_end":49612,"line_start":350,"line_end":350,"column_start":5,"column_end":71}},{"value":"/ `FusedFuture`.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":49617,"byte_end":49635,"line_start":351,"line_end":351,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":49640,"byte_end":49643,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ Normally, once a future has returned `Poll::Ready` from `poll`,","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":49648,"byte_end":49715,"line_start":353,"line_end":353,"column_start":5,"column_end":72}},{"value":"/ any further calls could exhibit bad behavior such as blocking","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":49720,"byte_end":49785,"line_start":354,"line_end":354,"column_start":5,"column_end":70}},{"value":"/ forever, panicking, never returning, etc. If it is known that `poll`","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":49790,"byte_end":49862,"line_start":355,"line_end":355,"column_start":5,"column_end":77}},{"value":"/ may be called too often then this method can be used to ensure that it","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":49867,"byte_end":49941,"line_start":356,"line_end":356,"column_start":5,"column_end":79}},{"value":"/ has defined semantics.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":49946,"byte_end":49972,"line_start":357,"line_end":357,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":49977,"byte_end":49980,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ If a `fuse`d future is `poll`ed after having returned `Poll::Ready`","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":49985,"byte_end":50056,"line_start":359,"line_end":359,"column_start":5,"column_end":76}},{"value":"/ previously, it will return `Poll::Pending`, from `poll` again (and will","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":50061,"byte_end":50136,"line_start":360,"line_end":360,"column_start":5,"column_end":80}},{"value":"/ continue to do so for all future calls to `poll`).","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":50141,"byte_end":50195,"line_start":361,"line_end":361,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":50200,"byte_end":50203,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ This combinator will drop the underlying future as soon as it has been","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":50208,"byte_end":50282,"line_start":363,"line_end":363,"column_start":5,"column_end":79}},{"value":"/ completed to ensure resources are reclaimed as soon as possible.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":50287,"byte_end":50355,"line_start":364,"line_end":364,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":612},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":51207,"byte_end":51214,"line_start":391,"line_end":391,"column_start":8,"column_end":15},"name":"inspect","qualname":"::future::future::FutureExt::inspect","value":"pub fn inspect<F>(Self, F) -> Inspect<Self, F> where F: FnOnce(&Self::Output)\n-> (), Self: Sized","parent":{"krate":0,"index":595},"children":[],"decl_id":null,"docs":" Do something with the output of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the output of a future before passing it on.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":50513,"byte_end":50579,"line_start":373,"line_end":373,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":50584,"byte_end":50587,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":50592,"byte_end":50667,"line_start":375,"line_end":375,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":50672,"byte_end":50745,"line_start":376,"line_end":376,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":50750,"byte_end":50819,"line_start":377,"line_end":377,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect`.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":50824,"byte_end":50874,"line_start":378,"line_end":378,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":50879,"byte_end":50882,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":50887,"byte_end":50901,"line_start":380,"line_end":380,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":50906,"byte_end":50909,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":50914,"byte_end":50921,"line_start":382,"line_end":382,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":50926,"byte_end":50967,"line_start":383,"line_end":383,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":50972,"byte_end":51007,"line_start":384,"line_end":384,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":51012,"byte_end":51015,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ let future = async { 1 };","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":51020,"byte_end":51049,"line_start":386,"line_end":386,"column_start":5,"column_end":34}},{"value":"/ let new_future = future.inspect(|&x| println!(\"about to resolve: {}\", x));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":51054,"byte_end":51132,"line_start":387,"line_end":387,"column_start":5,"column_end":83}},{"value":"/ assert_eq!(new_future.await, 1);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":51137,"byte_end":51173,"line_start":388,"line_end":388,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":51178,"byte_end":51187,"line_start":389,"line_end":389,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":51192,"byte_end":51199,"line_start":390,"line_end":390,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":614},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":52752,"byte_end":52764,"line_start":431,"line_end":431,"column_start":8,"column_end":20},"name":"catch_unwind","qualname":"::future::future::FutureExt::catch_unwind","value":"pub fn catch_unwind(Self) -> CatchUnwind<Self> where Self: Sized +\n::std::panic::UnwindSafe","parent":{"krate":0,"index":595},"children":[],"decl_id":null,"docs":" Catches unwinding panics while polling the future.","sig":null,"attributes":[{"value":"/ Catches unwinding panics while polling the future.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":51396,"byte_end":51450,"line_start":399,"line_end":399,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":51455,"byte_end":51458,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ In general, panics within a future can propagate all the way out to the","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":51463,"byte_end":51538,"line_start":401,"line_end":401,"column_start":5,"column_end":80}},{"value":"/ task level. This combinator makes it possible to halt unwinding within","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":51543,"byte_end":51617,"line_start":402,"line_end":402,"column_start":5,"column_end":79}},{"value":"/ the future itself. It's most commonly used within task executors. It's","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":51622,"byte_end":51696,"line_start":403,"line_end":403,"column_start":5,"column_end":79}},{"value":"/ not recommended to use this for error handling.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":51701,"byte_end":51752,"line_start":404,"line_end":404,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":51757,"byte_end":51760,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ Note that this method requires the `UnwindSafe` bound from the standard","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":51765,"byte_end":51840,"line_start":406,"line_end":406,"column_start":5,"column_end":80}},{"value":"/ library. This isn't always applied automatically, and the standard","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":51845,"byte_end":51915,"line_start":407,"line_end":407,"column_start":5,"column_end":75}},{"value":"/ library provides an `AssertUnwindSafe` wrapper type to apply it","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":51920,"byte_end":51987,"line_start":408,"line_end":408,"column_start":5,"column_end":72}},{"value":"/ after-the fact. To assist using this method, the `Future` trait is also","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":51992,"byte_end":52067,"line_start":409,"line_end":409,"column_start":5,"column_end":80}},{"value":"/ implemented for `AssertUnwindSafe<F>` where `F` implements `Future`.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":52072,"byte_end":52144,"line_start":410,"line_end":410,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":52149,"byte_end":52152,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":52157,"byte_end":52221,"line_start":412,"line_end":412,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":52226,"byte_end":52283,"line_start":413,"line_end":413,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":52288,"byte_end":52291,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":52296,"byte_end":52310,"line_start":415,"line_end":415,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":52315,"byte_end":52318,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":52323,"byte_end":52330,"line_start":417,"line_end":417,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":52335,"byte_end":52376,"line_start":418,"line_end":418,"column_start":5,"column_end":46}},{"value":"/ use futures::future::{self, FutureExt, Ready};","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":52381,"byte_end":52431,"line_start":419,"line_end":419,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":52436,"byte_end":52439,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ let future = future::ready(2);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":52444,"byte_end":52478,"line_start":421,"line_end":421,"column_start":5,"column_end":39}},{"value":"/ assert!(future.catch_unwind().await.is_ok());","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":52483,"byte_end":52532,"line_start":422,"line_end":422,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":52537,"byte_end":52540,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ let future = future::lazy(|_| -> Ready<i32> {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":52545,"byte_end":52594,"line_start":424,"line_end":424,"column_start":5,"column_end":54}},{"value":"/     unimplemented!()","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":52599,"byte_end":52623,"line_start":425,"line_end":425,"column_start":5,"column_end":29}},{"value":"/ });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":52628,"byte_end":52635,"line_start":426,"line_end":426,"column_start":5,"column_end":12}},{"value":"/ assert!(future.catch_unwind().await.is_err());","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":52640,"byte_end":52690,"line_start":427,"line_end":427,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":52695,"byte_end":52704,"line_start":428,"line_end":428,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":52709,"byte_end":52716,"line_start":429,"line_end":429,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":52721,"byte_end":52744,"line_start":430,"line_end":430,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":615},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":54516,"byte_end":54522,"line_start":486,"line_end":486,"column_start":8,"column_end":14},"name":"shared","qualname":"::future::future::FutureExt::shared","value":"pub fn shared(Self) -> Shared<Self> where Self: Sized, Self::Output: Clone","parent":{"krate":0,"index":595},"children":[],"decl_id":null,"docs":" Create a cloneable handle to this future where all handles will resolve\n to the same result.","sig":null,"attributes":[{"value":"/ Create a cloneable handle to this future where all handles will resolve","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":52994,"byte_end":53069,"line_start":440,"line_end":440,"column_start":5,"column_end":80}},{"value":"/ to the same result.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":53074,"byte_end":53097,"line_start":441,"line_end":441,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":53102,"byte_end":53105,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ The `shared` combinator method provides a method to convert any future","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":53110,"byte_end":53184,"line_start":443,"line_end":443,"column_start":5,"column_end":79}},{"value":"/ into a cloneable future. It enables a future to be polled by multiple","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":53189,"byte_end":53262,"line_start":444,"line_end":444,"column_start":5,"column_end":78}},{"value":"/ threads.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":53267,"byte_end":53279,"line_start":445,"line_end":445,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":53284,"byte_end":53287,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":53292,"byte_end":53356,"line_start":447,"line_end":447,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":53361,"byte_end":53418,"line_start":448,"line_end":448,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":53423,"byte_end":53426,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":53431,"byte_end":53445,"line_start":450,"line_end":450,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":53450,"byte_end":53453,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":53458,"byte_end":53465,"line_start":452,"line_end":452,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":53470,"byte_end":53511,"line_start":453,"line_end":453,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":53516,"byte_end":53551,"line_start":454,"line_end":454,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":53556,"byte_end":53559,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ let future = async { 6 };","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":53564,"byte_end":53593,"line_start":456,"line_end":456,"column_start":5,"column_end":34}},{"value":"/ let shared1 = future.shared();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":53598,"byte_end":53632,"line_start":457,"line_end":457,"column_start":5,"column_end":39}},{"value":"/ let shared2 = shared1.clone();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":53637,"byte_end":53671,"line_start":458,"line_end":458,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":53676,"byte_end":53679,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(6, shared1.await);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":53684,"byte_end":53717,"line_start":460,"line_end":460,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(6, shared2.await);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":53722,"byte_end":53755,"line_start":461,"line_end":461,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":53760,"byte_end":53769,"line_start":462,"line_end":462,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":53774,"byte_end":53781,"line_start":463,"line_end":463,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":53786,"byte_end":53789,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":53794,"byte_end":53801,"line_start":465,"line_end":465,"column_start":5,"column_end":12}},{"value":"/ // Note, unlike most examples this is written in the context of a","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":53806,"byte_end":53875,"line_start":466,"line_end":466,"column_start":5,"column_end":74}},{"value":"/ // synchronous function to better illustrate the cross-thread aspect of","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":53880,"byte_end":53955,"line_start":467,"line_end":467,"column_start":5,"column_end":80}},{"value":"/ // the `shared` combinator.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":53960,"byte_end":53991,"line_start":468,"line_end":468,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":53996,"byte_end":53999,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":54004,"byte_end":54045,"line_start":470,"line_end":470,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":54050,"byte_end":54085,"line_start":471,"line_end":471,"column_start":5,"column_end":40}},{"value":"/ use futures::executor::block_on;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":54090,"byte_end":54126,"line_start":472,"line_end":472,"column_start":5,"column_end":41}},{"value":"/ use std::thread;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":54131,"byte_end":54151,"line_start":473,"line_end":473,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":54156,"byte_end":54159,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ let future = async { 6 };","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":54164,"byte_end":54193,"line_start":475,"line_end":475,"column_start":5,"column_end":34}},{"value":"/ let shared1 = future.shared();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":54198,"byte_end":54232,"line_start":476,"line_end":476,"column_start":5,"column_end":39}},{"value":"/ let shared2 = shared1.clone();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":54237,"byte_end":54271,"line_start":477,"line_end":477,"column_start":5,"column_end":39}},{"value":"/ let join_handle = thread::spawn(move || {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":54276,"byte_end":54321,"line_start":478,"line_end":478,"column_start":5,"column_end":50}},{"value":"/     assert_eq!(6, block_on(shared2));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":54326,"byte_end":54367,"line_start":479,"line_end":479,"column_start":5,"column_end":46}},{"value":"/ });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":54372,"byte_end":54379,"line_start":480,"line_end":480,"column_start":5,"column_end":12}},{"value":"/ assert_eq!(6, shared1.await);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":54384,"byte_end":54417,"line_start":481,"line_end":481,"column_start":5,"column_end":38}},{"value":"/ join_handle.join().unwrap();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":54422,"byte_end":54454,"line_start":482,"line_end":482,"column_start":5,"column_end":37}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":54459,"byte_end":54468,"line_start":483,"line_end":483,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":54473,"byte_end":54480,"line_start":484,"line_end":484,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":54485,"byte_end":54508,"line_start":485,"line_end":485,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":616},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":55684,"byte_end":55689,"line_start":518,"line_end":518,"column_start":8,"column_end":13},"name":"boxed","qualname":"::future::future::FutureExt::boxed","value":"pub fn boxed<'a>(Self) -> BoxFuture where Self: Sized + Send + 'a","parent":{"krate":0,"index":595},"children":[],"decl_id":null,"docs":" Wrap the future in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the future in a Box, pinning it.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":55455,"byte_end":55496,"line_start":513,"line_end":513,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":55501,"byte_end":55504,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":55509,"byte_end":55584,"line_start":515,"line_end":515,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":55589,"byte_end":55646,"line_start":516,"line_end":516,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":55651,"byte_end":55676,"line_start":517,"line_end":517,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":618},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":56149,"byte_end":56160,"line_start":532,"line_end":532,"column_start":8,"column_end":19},"name":"boxed_local","qualname":"::future::future::FutureExt::boxed_local","value":"pub fn boxed_local<'a>(Self) -> LocalBoxFuture where Self: Sized + 'a","parent":{"krate":0,"index":595},"children":[],"decl_id":null,"docs":" Wrap the future in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the future in a Box, pinning it.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":55848,"byte_end":55889,"line_start":525,"line_end":525,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":55894,"byte_end":55897,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ Similar to `boxed`, but without the `Send` requirement.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":55902,"byte_end":55961,"line_start":527,"line_end":527,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":55966,"byte_end":55969,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":55974,"byte_end":56049,"line_start":529,"line_end":529,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":56054,"byte_end":56111,"line_start":530,"line_end":530,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":56116,"byte_end":56141,"line_start":531,"line_end":531,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":620},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":56450,"byte_end":56460,"line_start":541,"line_end":541,"column_start":8,"column_end":18},"name":"unit_error","qualname":"::future::future::FutureExt::unit_error","value":"pub fn unit_error(Self) -> UnitError<Self> where Self: Sized","parent":{"krate":0,"index":595},"children":[],"decl_id":null,"docs":" Turns a [`Future<Output = T>`](Future) into a\n [`TryFuture<Ok = T, Error = ()`>](futures_core::future::TryFuture).\n","sig":null,"attributes":[{"value":"/ Turns a [`Future<Output = T>`](Future) into a","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":56317,"byte_end":56366,"line_start":539,"line_end":539,"column_start":5,"column_end":54}},{"value":"/ [`TryFuture<Ok = T, Error = ()`>](futures_core::future::TryFuture).","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":56371,"byte_end":56442,"line_start":540,"line_end":540,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":621},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":56745,"byte_end":56756,"line_start":550,"line_end":550,"column_start":8,"column_end":19},"name":"never_error","qualname":"::future::future::FutureExt::never_error","value":"pub fn never_error(Self) -> NeverError<Self> where Self: Sized","parent":{"krate":0,"index":595},"children":[],"decl_id":null,"docs":" Turns a [`Future<Output = T>`](Future) into a\n [`TryFuture<Ok = T, Error = Never`>](futures_core::future::TryFuture).\n","sig":null,"attributes":[{"value":"/ Turns a [`Future<Output = T>`](Future) into a","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":56609,"byte_end":56658,"line_start":548,"line_end":548,"column_start":5,"column_end":54}},{"value":"/ [`TryFuture<Ok = T, Error = Never`>](futures_core::future::TryFuture).","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":56663,"byte_end":56737,"line_start":549,"line_end":549,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":622},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":56987,"byte_end":56997,"line_start":558,"line_end":558,"column_start":8,"column_end":18},"name":"poll_unpin","qualname":"::future::future::FutureExt::poll_unpin","value":"pub fn poll_unpin(&mut Self, &mut Context) -> Poll<Self::Output> where\nSelf: Unpin","parent":{"krate":0,"index":595},"children":[],"decl_id":null,"docs":" A convenience for calling `Future::poll` on `Unpin` future types.\n","sig":null,"attributes":[{"value":"/ A convenience for calling `Future::poll` on `Unpin` future types.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":56910,"byte_end":56979,"line_start":557,"line_end":557,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":623},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":58393,"byte_end":58405,"line_start":596,"line_end":596,"column_start":8,"column_end":20},"name":"now_or_never","qualname":"::future::future::FutureExt::now_or_never","value":"pub fn now_or_never(Self) -> Option<Self::Output> where Self: Sized","parent":{"krate":0,"index":595},"children":[],"decl_id":null,"docs":" Evaluates and consumes the future, returning the resulting output if\n the future is ready after the first call to `Future::poll`.","sig":null,"attributes":[{"value":"/ Evaluates and consumes the future, returning the resulting output if","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":57133,"byte_end":57205,"line_start":565,"line_end":565,"column_start":5,"column_end":77}},{"value":"/ the future is ready after the first call to `Future::poll`.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":57210,"byte_end":57273,"line_start":566,"line_end":566,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":57278,"byte_end":57281,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ If `poll` instead returns `Poll::Pending`, `None` is returned.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":57286,"byte_end":57352,"line_start":568,"line_end":568,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":57357,"byte_end":57360,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ This method is useful in cases where immediacy is more important than","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":57365,"byte_end":57438,"line_start":570,"line_end":570,"column_start":5,"column_end":78}},{"value":"/ waiting for a result. It is also convenient for quickly obtaining","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":57443,"byte_end":57512,"line_start":571,"line_end":571,"column_start":5,"column_end":74}},{"value":"/ the value of a future that is known to always resolve immediately.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":57517,"byte_end":57587,"line_start":572,"line_end":572,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":57592,"byte_end":57595,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":57600,"byte_end":57614,"line_start":574,"line_end":574,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":57619,"byte_end":57622,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":57627,"byte_end":57634,"line_start":576,"line_end":576,"column_start":5,"column_end":12}},{"value":"/ # use futures::prelude::*;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":57639,"byte_end":57669,"line_start":577,"line_end":577,"column_start":5,"column_end":35}},{"value":"/ use futures::{future::ready, future::pending};","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":57674,"byte_end":57724,"line_start":578,"line_end":578,"column_start":5,"column_end":55}},{"value":"/ let future_ready = ready(\"foobar\");","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":57729,"byte_end":57768,"line_start":579,"line_end":579,"column_start":5,"column_end":44}},{"value":"/ let future_pending = pending::<&'static str>();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":57773,"byte_end":57824,"line_start":580,"line_end":580,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":57829,"byte_end":57832,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future_ready.now_or_never(), Some(\"foobar\"));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":57837,"byte_end":57897,"line_start":582,"line_end":582,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(future_pending.now_or_never(), None);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":57902,"byte_end":57954,"line_start":583,"line_end":583,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":57959,"byte_end":57966,"line_start":584,"line_end":584,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":57971,"byte_end":57974,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ In cases where it is absolutely known that a future should always","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":57979,"byte_end":58048,"line_start":586,"line_end":586,"column_start":5,"column_end":74}},{"value":"/ resolve immediately and never return `Poll::Pending`, this method can","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":58053,"byte_end":58126,"line_start":587,"line_end":587,"column_start":5,"column_end":78}},{"value":"/ be combined with `expect()`:","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":58131,"byte_end":58163,"line_start":588,"line_end":588,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":58168,"byte_end":58171,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":58176,"byte_end":58183,"line_start":590,"line_end":590,"column_start":5,"column_end":12}},{"value":"/ # use futures::{prelude::*, future::ready};","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":58188,"byte_end":58235,"line_start":591,"line_end":591,"column_start":5,"column_end":52}},{"value":"/ let future_ready = ready(\"foobar\");","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":58240,"byte_end":58279,"line_start":592,"line_end":592,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":58284,"byte_end":58287,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future_ready.now_or_never().expect(\"Future not ready\"), \"foobar\");","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":58292,"byte_end":58373,"line_start":594,"line_end":594,"column_start":5,"column_end":86}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":58378,"byte_end":58385,"line_start":595,"line_end":595,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":8984},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/into_future.rs","byte_start":101882,"byte_end":101892,"line_start":10,"line_end":10,"column_start":16,"column_end":26},"name":"IntoFuture","qualname":"::future::try_future::into_future::IntoFuture","value":"IntoFuture {  }","parent":null,"children":[{"krate":0,"index":8986}],"decl_id":null,"docs":" Future for the [`into_future`](super::TryFutureExt::into_future) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"StructVariant","id":{"krate":0,"index":9023},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten.rs","byte_start":102866,"byte_end":102871,"line_start":14,"line_end":14,"column_start":9,"column_end":14},"name":"First","qualname":"::future::try_future::try_flatten::TryFlatten::First","value":"TryFlatten::First { f }","parent":{"krate":0,"index":9020},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":9025},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten.rs","byte_start":102900,"byte_end":102906,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"name":"Second","qualname":"::future::try_future::try_flatten::TryFlatten::Second","value":"TryFlatten::Second { f }","parent":{"krate":0,"index":9020},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9027},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten.rs","byte_start":102935,"byte_end":102940,"line_start":16,"line_end":16,"column_start":9,"column_end":14},"name":"Empty","qualname":"::future::try_future::try_flatten::TryFlatten::Empty","value":"TryFlatten::Empty","parent":{"krate":0,"index":9020},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":9020},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten.rs","byte_start":102833,"byte_end":102843,"line_start":13,"line_end":13,"column_start":14,"column_end":24},"name":"TryFlatten","qualname":"::future::try_future::try_flatten::TryFlatten","value":"pub enum TryFlatten<Fut1, Fut2> {\n    First {\n        f: Fut1,\n    },\n    Second {\n        f: Fut2,\n    },\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":9023},{"krate":0,"index":9025},{"krate":0,"index":9027}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":9070},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten_err.rs","byte_start":107809,"byte_end":107814,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"name":"First","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::First","value":"TryFlattenErr::First { f }","parent":{"krate":0,"index":9067},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":9072},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten_err.rs","byte_start":107843,"byte_end":107849,"line_start":12,"line_end":12,"column_start":9,"column_end":15},"name":"Second","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::Second","value":"TryFlattenErr::Second { f }","parent":{"krate":0,"index":9067},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9074},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten_err.rs","byte_start":107878,"byte_end":107883,"line_start":13,"line_end":13,"column_start":9,"column_end":14},"name":"Empty","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::Empty","value":"TryFlattenErr::Empty","parent":{"krate":0,"index":9067},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":9067},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten_err.rs","byte_start":107773,"byte_end":107786,"line_start":10,"line_end":10,"column_start":14,"column_end":27},"name":"TryFlattenErr","qualname":"::future::try_future::try_flatten_err::TryFlattenErr","value":"pub enum TryFlattenErr<Fut1, Fut2> {\n    First {\n        f: Fut1,\n    },\n    Second {\n        f: Fut2,\n    },\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":9070},{"krate":0,"index":9072},{"krate":0,"index":9074}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9117},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":80717,"byte_end":80727,"line_start":32,"line_end":32,"column_start":5,"column_end":15},"name":"TryFlatten","qualname":"::future::try_future::TryFlatten","value":"TryFlatten {  }","parent":null,"children":[{"krate":0,"index":9120}],"decl_id":null,"docs":" Future for the [`try_flatten`](TryFutureExt::try_flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9178},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":80975,"byte_end":80988,"line_start":39,"line_end":39,"column_start":5,"column_end":18},"name":"TryFlattenErr","qualname":"::future::try_future::TryFlattenErr","value":"TryFlattenErr {  }","parent":null,"children":[{"krate":0,"index":9181}],"decl_id":null,"docs":" Future for the [`try_flatten_err`](TryFutureExt::try_flatten_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9238},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":81256,"byte_end":81272,"line_start":46,"line_end":46,"column_start":5,"column_end":21},"name":"TryFlattenStream","qualname":"::future::try_future::TryFlattenStream","value":"TryFlattenStream {  }","parent":null,"children":[{"krate":0,"index":9240}],"decl_id":null,"docs":" Future for the [`try_flatten_stream`](TryFutureExt::try_flatten_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9296},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":81615,"byte_end":81626,"line_start":56,"line_end":56,"column_start":5,"column_end":16},"name":"FlattenSink","qualname":"::future::try_future::FlattenSink","value":"FlattenSink {  }","parent":null,"children":[{"krate":0,"index":9299}],"decl_id":null,"docs":" Sink for the [`flatten_sink`](TryFutureExt::flatten_sink) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9368},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":81860,"byte_end":81867,"line_start":63,"line_end":63,"column_start":5,"column_end":12},"name":"AndThen","qualname":"::future::try_future::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":9372}],"decl_id":null,"docs":" Future for the [`and_then`](TryFutureExt::and_then) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9442},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":82107,"byte_end":82113,"line_start":70,"line_end":70,"column_start":5,"column_end":11},"name":"OrElse","qualname":"::future::try_future::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":9446}],"decl_id":null,"docs":" Future for the [`or_else`](TryFutureExt::or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9515},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":82363,"byte_end":82370,"line_start":77,"line_end":77,"column_start":5,"column_end":12},"name":"ErrInto","qualname":"::future::try_future::ErrInto","value":"ErrInto {  }","parent":null,"children":[{"krate":0,"index":9518}],"decl_id":null,"docs":" Future for the [`err_into`](TryFutureExt::err_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9576},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":82578,"byte_end":82584,"line_start":84,"line_end":84,"column_start":5,"column_end":11},"name":"OkInto","qualname":"::future::try_future::OkInto","value":"OkInto {  }","parent":null,"children":[{"krate":0,"index":9579}],"decl_id":null,"docs":" Future for the [`ok_into`](TryFutureExt::ok_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9637},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":82803,"byte_end":82812,"line_start":91,"line_end":91,"column_start":5,"column_end":14},"name":"InspectOk","qualname":"::future::try_future::InspectOk","value":"InspectOk {  }","parent":null,"children":[{"krate":0,"index":9640}],"decl_id":null,"docs":" Future for the [`inspect_ok`](super::TryFutureExt::inspect_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9698},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":83084,"byte_end":83094,"line_start":98,"line_end":98,"column_start":5,"column_end":15},"name":"InspectErr","qualname":"::future::try_future::InspectErr","value":"InspectErr {  }","parent":null,"children":[{"krate":0,"index":9701}],"decl_id":null,"docs":" Future for the [`inspect_err`](super::TryFutureExt::inspect_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9759},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":83467,"byte_end":83472,"line_start":108,"line_end":108,"column_start":5,"column_end":10},"name":"MapOk","qualname":"::future::try_future::MapOk","value":"MapOk {  }","parent":null,"children":[{"krate":0,"index":9762}],"decl_id":null,"docs":" Future for the [`map_ok`](TryFutureExt::map_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9820},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":83713,"byte_end":83719,"line_start":115,"line_end":115,"column_start":5,"column_end":11},"name":"MapErr","qualname":"::future::try_future::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":9823}],"decl_id":null,"docs":" Future for the [`map_err`](TryFutureExt::map_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9882},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":83976,"byte_end":83987,"line_start":122,"line_end":122,"column_start":5,"column_end":16},"name":"MapOkOrElse","qualname":"::future::try_future::MapOkOrElse","value":"MapOkOrElse {  }","parent":null,"children":[{"krate":0,"index":9886}],"decl_id":null,"docs":" Future for the [`map_ok_or_else`](TryFutureExt::map_ok_or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9955},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":84271,"byte_end":84283,"line_start":129,"line_end":129,"column_start":5,"column_end":17},"name":"UnwrapOrElse","qualname":"::future::try_future::UnwrapOrElse","value":"UnwrapOrElse {  }","parent":null,"children":[{"krate":0,"index":9958}],"decl_id":null,"docs":" Future for the [`unwrap_or_else`](TryFutureExt::unwrap_or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":888},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":84573,"byte_end":84585,"line_start":137,"line_end":137,"column_start":11,"column_end":23},"name":"TryFutureExt","qualname":"::future::try_future::TryFutureExt","value":"TryFutureExt: TryFuture","parent":null,"children":[{"krate":0,"index":889},{"krate":0,"index":891},{"krate":0,"index":894},{"krate":0,"index":898},{"krate":0,"index":901},{"krate":0,"index":903},{"krate":0,"index":905},{"krate":0,"index":908},{"krate":0,"index":911},{"krate":0,"index":913},{"krate":0,"index":915},{"krate":0,"index":916},{"krate":0,"index":917},{"krate":0,"index":919},{"krate":0,"index":920}],"decl_id":null,"docs":" Adapters specific to [`Result`]-returning futures\n","sig":null,"attributes":[{"value":"/ Adapters specific to [`Result`]-returning futures","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":84509,"byte_end":84562,"line_start":136,"line_end":136,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":889},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":85737,"byte_end":85749,"line_start":171,"line_end":171,"column_start":8,"column_end":20},"name":"flatten_sink","qualname":"::future::try_future::TryFutureExt::flatten_sink","value":"pub fn flatten_sink<Item>(Self) -> FlattenSink<Self, Self::Ok> where\nSelf::Ok: Sink<Item, Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":888},"children":[],"decl_id":null,"docs":" Flattens the execution of this future when the successful result of this\n future is a [`Sink`].","sig":null,"attributes":[{"value":"/ Flattens the execution of this future when the successful result of this","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":84603,"byte_end":84679,"line_start":138,"line_end":138,"column_start":5,"column_end":81}},{"value":"/ future is a [`Sink`].","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":84684,"byte_end":84709,"line_start":139,"line_end":139,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":84714,"byte_end":84717,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ This can be useful when sink initialization is deferred, and it is","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":84722,"byte_end":84792,"line_start":141,"line_end":141,"column_start":5,"column_end":75}},{"value":"/ convenient to work with that sink as if the sink was available at the","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":84797,"byte_end":84870,"line_start":142,"line_end":142,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":84875,"byte_end":84889,"line_start":143,"line_end":143,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":84894,"byte_end":84897,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":84902,"byte_end":84972,"line_start":145,"line_end":145,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":84977,"byte_end":84995,"line_start":146,"line_end":146,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":85000,"byte_end":85003,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":85008,"byte_end":85022,"line_start":148,"line_end":148,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":85027,"byte_end":85030,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":85035,"byte_end":85042,"line_start":150,"line_end":150,"column_start":5,"column_end":12}},{"value":"/ use futures::future::{Future, TryFutureExt};","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":85047,"byte_end":85095,"line_start":151,"line_end":151,"column_start":5,"column_end":53}},{"value":"/ use futures::sink::Sink;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":85100,"byte_end":85128,"line_start":152,"line_end":152,"column_start":5,"column_end":33}},{"value":"/ # use futures::channel::mpsc::{self, SendError};","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":85133,"byte_end":85185,"line_start":153,"line_end":153,"column_start":5,"column_end":57}},{"value":"/ # type T = i32;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":85190,"byte_end":85209,"line_start":154,"line_end":154,"column_start":5,"column_end":24}},{"value":"/ # type E = SendError;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":85214,"byte_end":85239,"line_start":155,"line_end":155,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":85244,"byte_end":85247,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ fn make_sink_async() -> impl Future<Output = Result<","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":85252,"byte_end":85308,"line_start":157,"line_end":157,"column_start":5,"column_end":61}},{"value":"/     impl Sink<T, Error = E>,","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":85313,"byte_end":85345,"line_start":158,"line_end":158,"column_start":5,"column_end":37}},{"value":"/     E,","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":85350,"byte_end":85360,"line_start":159,"line_end":159,"column_start":5,"column_end":15}},{"value":"/ >> { // ... }","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":85365,"byte_end":85382,"line_start":160,"line_end":160,"column_start":5,"column_end":22}},{"value":"/ # let (tx, _rx) = mpsc::unbounded::<i32>();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":85387,"byte_end":85434,"line_start":161,"line_end":161,"column_start":5,"column_end":52}},{"value":"/ # futures::future::ready(Ok(tx))","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":85439,"byte_end":85475,"line_start":162,"line_end":162,"column_start":5,"column_end":41}},{"value":"/ # }","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":85480,"byte_end":85487,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"/ fn take_sink(sink: impl Sink<T, Error = E>) { /* ... */ }","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":85492,"byte_end":85553,"line_start":164,"line_end":164,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":85558,"byte_end":85561,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ let fut = make_sink_async();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":85566,"byte_end":85598,"line_start":166,"line_end":166,"column_start":5,"column_end":37}},{"value":"/ take_sink(fut.flatten_sink())","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":85603,"byte_end":85636,"line_start":167,"line_end":167,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":85641,"byte_end":85648,"line_start":168,"line_end":168,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"sink\")","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":85653,"byte_end":85677,"line_start":169,"line_end":169,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":891},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":87345,"byte_end":87351,"line_start":217,"line_end":217,"column_start":8,"column_end":14},"name":"map_ok","qualname":"::future::try_future::TryFutureExt::map_ok","value":"pub fn map_ok<T, F>(Self, F) -> MapOk<Self, F> where F: FnOnce(Self::Ok) -> T,\nSelf: Sized","parent":{"krate":0,"index":888},"children":[],"decl_id":null,"docs":" Maps this future's success value to a different value.","sig":null,"attributes":[{"value":"/ Maps this future's success value to a different value.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":85973,"byte_end":86031,"line_start":179,"line_end":179,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":86036,"byte_end":86039,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Ok`](TryFuture::Ok) type of the","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":86044,"byte_end":86119,"line_start":181,"line_end":181,"column_start":5,"column_end":80}},{"value":"/ future into a different type. It is similar to the [`Result::map`]","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":86124,"byte_end":86194,"line_start":182,"line_end":182,"column_start":5,"column_end":75}},{"value":"/ method. You can use this method to chain along a computation once the","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":86199,"byte_end":86272,"line_start":183,"line_end":183,"column_start":5,"column_end":78}},{"value":"/ future has been resolved.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":86277,"byte_end":86306,"line_start":184,"line_end":184,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":86311,"byte_end":86314,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":86319,"byte_end":86394,"line_start":186,"line_end":186,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If it resolves to an [`Err`], panics, or is dropped, then","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":86399,"byte_end":86474,"line_start":187,"line_end":187,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":86479,"byte_end":86526,"line_start":188,"line_end":188,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":86531,"byte_end":86534,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":86539,"byte_end":86614,"line_start":190,"line_end":190,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":86619,"byte_end":86645,"line_start":191,"line_end":191,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":86650,"byte_end":86653,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":86658,"byte_end":86672,"line_start":193,"line_end":193,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":86677,"byte_end":86680,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":86685,"byte_end":86692,"line_start":195,"line_end":195,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":86697,"byte_end":86735,"line_start":196,"line_end":196,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":86740,"byte_end":86743,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":86748,"byte_end":86789,"line_start":198,"line_end":198,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":86794,"byte_end":86839,"line_start":199,"line_end":199,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_ok(|x| x + 3);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":86844,"byte_end":86886,"line_start":200,"line_end":200,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(future.await, Ok(4));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":86891,"byte_end":86927,"line_start":201,"line_end":201,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":86932,"byte_end":86941,"line_start":202,"line_end":202,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":86946,"byte_end":86953,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":86958,"byte_end":86961,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ Calling [`map_ok`](TryFutureExt::map_ok) on an errored future has no","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":86966,"byte_end":87038,"line_start":205,"line_end":205,"column_start":5,"column_end":77}},{"value":"/ effect:","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":87043,"byte_end":87054,"line_start":206,"line_end":206,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":87059,"byte_end":87062,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":87067,"byte_end":87074,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":87079,"byte_end":87117,"line_start":209,"line_end":209,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":87122,"byte_end":87125,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":87130,"byte_end":87171,"line_start":211,"line_end":211,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":87176,"byte_end":87222,"line_start":212,"line_end":212,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_ok(|x| x + 3);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":87227,"byte_end":87269,"line_start":213,"line_end":213,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(future.await, Err(1));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":87274,"byte_end":87311,"line_start":214,"line_end":214,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":87316,"byte_end":87325,"line_start":215,"line_end":215,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":87330,"byte_end":87337,"line_start":216,"line_end":216,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":894},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":88910,"byte_end":88924,"line_start":257,"line_end":257,"column_start":8,"column_end":22},"name":"map_ok_or_else","qualname":"::future::try_future::TryFutureExt::map_ok_or_else","value":"pub fn map_ok_or_else<T, E, F>(Self, E, F) -> MapOkOrElse<Self, F, E> where\nF: FnOnce(Self::Ok) -> T, E: FnOnce(Self::Error) -> T, Self: Sized","parent":{"krate":0,"index":888},"children":[],"decl_id":null,"docs":" Maps this future's success value to a different value, and permits for error handling resulting in the same type.","sig":null,"attributes":[{"value":"/ Maps this future's success value to a different value, and permits for error handling resulting in the same type.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":87542,"byte_end":87659,"line_start":225,"line_end":225,"column_start":5,"column_end":122}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":87664,"byte_end":87667,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ This method can be used to coalesce your [`Ok`](TryFuture::Ok) type and [`Error`](TryFuture::Error) into another type,","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":87672,"byte_end":87794,"line_start":227,"line_end":227,"column_start":5,"column_end":127}},{"value":"/ where that type is the same for both outcomes.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":87799,"byte_end":87849,"line_start":228,"line_end":228,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":87854,"byte_end":87857,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":87862,"byte_end":87937,"line_start":230,"line_end":230,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If it resolves to an [`Err`], panics, or is dropped, then","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":87942,"byte_end":88017,"line_start":231,"line_end":231,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":88022,"byte_end":88069,"line_start":232,"line_end":232,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":88074,"byte_end":88077,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ The provided closure `e` will only be called if this future is resolved","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":88082,"byte_end":88157,"line_start":234,"line_end":234,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If it resolves to an [`Ok`], panics, or is dropped, then","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":88162,"byte_end":88237,"line_start":235,"line_end":235,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":88242,"byte_end":88289,"line_start":236,"line_end":236,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":88294,"byte_end":88297,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":88302,"byte_end":88377,"line_start":238,"line_end":238,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":88382,"byte_end":88408,"line_start":239,"line_end":239,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":88413,"byte_end":88416,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":88421,"byte_end":88435,"line_start":241,"line_end":241,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":88440,"byte_end":88443,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":88448,"byte_end":88455,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":88460,"byte_end":88498,"line_start":244,"line_end":244,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":88503,"byte_end":88506,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":88511,"byte_end":88552,"line_start":246,"line_end":246,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(5) };","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":88557,"byte_end":88602,"line_start":247,"line_end":247,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_ok_or_else(|x| x * 2, |x| x + 3);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":88607,"byte_end":88668,"line_start":248,"line_end":248,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(future.await, 8);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":88673,"byte_end":88705,"line_start":249,"line_end":249,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":88710,"byte_end":88713,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ let future = async { Err::<i32, i32>(5) };","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":88718,"byte_end":88764,"line_start":251,"line_end":251,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_ok_or_else(|x| x * 2, |x| x + 3);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":88769,"byte_end":88830,"line_start":252,"line_end":252,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(future.await, 10);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":88835,"byte_end":88868,"line_start":253,"line_end":253,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":88873,"byte_end":88882,"line_start":254,"line_end":254,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":88887,"byte_end":88894,"line_start":255,"line_end":255,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":88899,"byte_end":88902,"line_start":256,"line_end":256,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":898},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":90607,"byte_end":90614,"line_start":305,"line_end":305,"column_start":8,"column_end":15},"name":"map_err","qualname":"::future::try_future::TryFutureExt::map_err","value":"pub fn map_err<E, F>(Self, F) -> MapErr<Self, F> where F: FnOnce(Self::Error)\n-> E, Self: Sized","parent":{"krate":0,"index":888},"children":[],"decl_id":null,"docs":" Maps this future's error value to a different value.","sig":null,"attributes":[{"value":"/ Maps this future's error value to a different value.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":89158,"byte_end":89214,"line_start":266,"line_end":266,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":89219,"byte_end":89222,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Error`](TryFuture::Error) type","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":89227,"byte_end":89301,"line_start":268,"line_end":268,"column_start":5,"column_end":79}},{"value":"/ of the future into a different type. It is similar to the","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":89306,"byte_end":89367,"line_start":269,"line_end":269,"column_start":5,"column_end":66}},{"value":"/ [`Result::map_err`] method. You can use this method for example to","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":89372,"byte_end":89442,"line_start":270,"line_end":270,"column_start":5,"column_end":75}},{"value":"/ ensure that futures have the same [`Error`](TryFuture::Error) type when","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":89447,"byte_end":89522,"line_start":271,"line_end":271,"column_start":5,"column_end":80}},{"value":"/ using [`select!`] or [`join!`].","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":89527,"byte_end":89562,"line_start":272,"line_end":272,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":89567,"byte_end":89570,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":89575,"byte_end":89650,"line_start":274,"line_end":274,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If it resolves to an [`Ok`], panics, or is dropped, then","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":89655,"byte_end":89730,"line_start":275,"line_end":275,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":89735,"byte_end":89782,"line_start":276,"line_end":276,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":89787,"byte_end":89790,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":89795,"byte_end":89870,"line_start":278,"line_end":278,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":89875,"byte_end":89901,"line_start":279,"line_end":279,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":89906,"byte_end":89909,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":89914,"byte_end":89928,"line_start":281,"line_end":281,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":89933,"byte_end":89936,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":89941,"byte_end":89948,"line_start":283,"line_end":283,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":89953,"byte_end":89991,"line_start":284,"line_end":284,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":89996,"byte_end":89999,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":90004,"byte_end":90045,"line_start":286,"line_end":286,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":90050,"byte_end":90096,"line_start":287,"line_end":287,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_err(|x| x + 3);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":90101,"byte_end":90144,"line_start":288,"line_end":288,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(future.await, Err(4));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":90149,"byte_end":90186,"line_start":289,"line_end":289,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":90191,"byte_end":90200,"line_start":290,"line_end":290,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":90205,"byte_end":90212,"line_start":291,"line_end":291,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":90217,"byte_end":90220,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ Calling [`map_err`](TryFutureExt::map_err) on a successful future has","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":90225,"byte_end":90298,"line_start":293,"line_end":293,"column_start":5,"column_end":78}},{"value":"/ no effect:","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":90303,"byte_end":90317,"line_start":294,"line_end":294,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":90322,"byte_end":90325,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":90330,"byte_end":90337,"line_start":296,"line_end":296,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":90342,"byte_end":90380,"line_start":297,"line_end":297,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":90385,"byte_end":90388,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":90393,"byte_end":90434,"line_start":299,"line_end":299,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":90439,"byte_end":90484,"line_start":300,"line_end":300,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_err(|x| x + 3);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":90489,"byte_end":90532,"line_start":301,"line_end":301,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(future.await, Ok(1));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":90537,"byte_end":90573,"line_start":302,"line_end":302,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":90578,"byte_end":90587,"line_start":303,"line_end":303,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":90592,"byte_end":90599,"line_start":304,"line_end":304,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":901},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":91704,"byte_end":91712,"line_start":335,"line_end":335,"column_start":8,"column_end":16},"name":"err_into","qualname":"::future::try_future::TryFutureExt::err_into","value":"pub fn err_into<E>(Self) -> ErrInto<Self, E> where Self: Sized,\nSelf::Error: Into<E>","parent":{"krate":0,"index":888},"children":[],"decl_id":null,"docs":" Maps this future's [`Error`](TryFuture::Error) to a new error type\n using the [`Into`](std::convert::Into) trait.","sig":null,"attributes":[{"value":"/ Maps this future's [`Error`](TryFuture::Error) to a new error type","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":90807,"byte_end":90877,"line_start":313,"line_end":313,"column_start":5,"column_end":75}},{"value":"/ using the [`Into`](std::convert::Into) trait.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":90882,"byte_end":90931,"line_start":314,"line_end":314,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":90936,"byte_end":90939,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ This method does for futures what the `?`-operator does for","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":90944,"byte_end":91007,"line_start":316,"line_end":316,"column_start":5,"column_end":68}},{"value":"/ [`Result`]: It lets the compiler infer the type of the resulting","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":91012,"byte_end":91080,"line_start":317,"line_end":317,"column_start":5,"column_end":73}},{"value":"/ error. Just as [`map_err`](TryFutureExt::map_err), this is useful for","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":91085,"byte_end":91158,"line_start":318,"line_end":318,"column_start":5,"column_end":78}},{"value":"/ example to ensure that futures have the same [`Error`](TryFuture::Error)","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":91163,"byte_end":91239,"line_start":319,"line_end":319,"column_start":5,"column_end":81}},{"value":"/ type when using [`select!`] or [`join!`].","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":91244,"byte_end":91289,"line_start":320,"line_end":320,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":91294,"byte_end":91297,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":91302,"byte_end":91377,"line_start":322,"line_end":322,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":91382,"byte_end":91408,"line_start":323,"line_end":323,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":91413,"byte_end":91416,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":91421,"byte_end":91435,"line_start":325,"line_end":325,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":91440,"byte_end":91443,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":91448,"byte_end":91455,"line_start":327,"line_end":327,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":91460,"byte_end":91498,"line_start":328,"line_end":328,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":91503,"byte_end":91506,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":91511,"byte_end":91552,"line_start":330,"line_end":330,"column_start":5,"column_end":46}},{"value":"/ let future_err_u8 = async { Err::<(), u8>(1) };","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":91557,"byte_end":91608,"line_start":331,"line_end":331,"column_start":5,"column_end":56}},{"value":"/ let future_err_i32 = future_err_u8.err_into::<i32>();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":91613,"byte_end":91670,"line_start":332,"line_end":332,"column_start":5,"column_end":62}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":91675,"byte_end":91684,"line_start":333,"line_end":333,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":91689,"byte_end":91696,"line_start":334,"line_end":334,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":903},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":92008,"byte_end":92015,"line_start":345,"line_end":345,"column_start":8,"column_end":15},"name":"ok_into","qualname":"::future::try_future::TryFutureExt::ok_into","value":"pub fn ok_into<U>(Self) -> OkInto<Self, U> where Self: Sized,\nSelf::Ok: Into<U>","parent":{"krate":0,"index":888},"children":[],"decl_id":null,"docs":" Maps this future's [`Ok`](TryFuture::Ok) to a new type\n using the [`Into`](std::convert::Into) trait.\n","sig":null,"attributes":[{"value":"/ Maps this future's [`Ok`](TryFuture::Ok) to a new type","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":91888,"byte_end":91946,"line_start":343,"line_end":343,"column_start":5,"column_end":63}},{"value":"/ using the [`Into`](std::convert::Into) trait.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":91951,"byte_end":92000,"line_start":344,"line_end":344,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":905},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":93570,"byte_end":93578,"line_start":389,"line_end":389,"column_start":8,"column_end":16},"name":"and_then","qualname":"::future::try_future::TryFutureExt::and_then","value":"pub fn and_then<Fut, F>(Self, F) -> AndThen<Self, Fut, F> where\nF: FnOnce(Self::Ok) -> Fut, Fut: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":888},"children":[],"decl_id":null,"docs":" Executes another future after this one resolves successfully. The\n success value is passed to a closure to create this subsequent future.","sig":null,"attributes":[{"value":"/ Executes another future after this one resolves successfully. The","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":92189,"byte_end":92258,"line_start":353,"line_end":353,"column_start":5,"column_end":74}},{"value":"/ success value is passed to a closure to create this subsequent future.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":92263,"byte_end":92337,"line_start":354,"line_end":354,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":92342,"byte_end":92345,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":92350,"byte_end":92425,"line_start":356,"line_end":356,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If this future resolves to an [`Err`], panics, or is","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":92430,"byte_end":92500,"line_start":357,"line_end":357,"column_start":5,"column_end":75}},{"value":"/ dropped, then the provided closure will never be invoked. The","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":92505,"byte_end":92570,"line_start":358,"line_end":358,"column_start":5,"column_end":70}},{"value":"/ [`Error`](TryFuture::Error) type of this future and the future","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":92575,"byte_end":92641,"line_start":359,"line_end":359,"column_start":5,"column_end":71}},{"value":"/ returned by `f` have to match.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":92646,"byte_end":92680,"line_start":360,"line_end":360,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":92685,"byte_end":92688,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":92693,"byte_end":92768,"line_start":362,"line_end":362,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":92773,"byte_end":92799,"line_start":363,"line_end":363,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":92804,"byte_end":92807,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":92812,"byte_end":92826,"line_start":365,"line_end":365,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":92831,"byte_end":92834,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":92839,"byte_end":92846,"line_start":367,"line_end":367,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":92851,"byte_end":92889,"line_start":368,"line_end":368,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":92894,"byte_end":92897,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":92902,"byte_end":92943,"line_start":370,"line_end":370,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":92948,"byte_end":92993,"line_start":371,"line_end":371,"column_start":5,"column_end":50}},{"value":"/ let future = future.and_then(|x| async move { Ok::<i32, i32>(x + 3) });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":92998,"byte_end":93073,"line_start":372,"line_end":372,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(future.await, Ok(4));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":93078,"byte_end":93114,"line_start":373,"line_end":373,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":93119,"byte_end":93128,"line_start":374,"line_end":374,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":93133,"byte_end":93140,"line_start":375,"line_end":375,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":93145,"byte_end":93148,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ Calling [`and_then`](TryFutureExt::and_then) on an errored future has no","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":93153,"byte_end":93229,"line_start":377,"line_end":377,"column_start":5,"column_end":81}},{"value":"/ effect:","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":93234,"byte_end":93245,"line_start":378,"line_end":378,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":93250,"byte_end":93253,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":93258,"byte_end":93265,"line_start":380,"line_end":380,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":93270,"byte_end":93308,"line_start":381,"line_end":381,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":93313,"byte_end":93316,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":93321,"byte_end":93362,"line_start":383,"line_end":383,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":93367,"byte_end":93413,"line_start":384,"line_end":384,"column_start":5,"column_end":51}},{"value":"/ let future = future.and_then(|x| async move { Err::<i32, i32>(x + 3) });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":93418,"byte_end":93494,"line_start":385,"line_end":385,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(future.await, Err(1));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":93499,"byte_end":93536,"line_start":386,"line_end":386,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":93541,"byte_end":93550,"line_start":387,"line_end":387,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":93555,"byte_end":93562,"line_start":388,"line_end":388,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":908},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":95199,"byte_end":95206,"line_start":434,"line_end":434,"column_start":8,"column_end":15},"name":"or_else","qualname":"::future::try_future::TryFutureExt::or_else","value":"pub fn or_else<Fut, F>(Self, F) -> OrElse<Self, Fut, F> where\nF: FnOnce(Self::Error) -> Fut, Fut: TryFuture<Ok = Self::Ok>, Self: Sized","parent":{"krate":0,"index":888},"children":[],"decl_id":null,"docs":" Executes another future if this one resolves to an error. The\n error value is passed to a closure to create this subsequent future.","sig":null,"attributes":[{"value":"/ Executes another future if this one resolves to an error. The","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":93832,"byte_end":93897,"line_start":398,"line_end":398,"column_start":5,"column_end":70}},{"value":"/ error value is passed to a closure to create this subsequent future.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":93902,"byte_end":93974,"line_start":399,"line_end":399,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":93979,"byte_end":93982,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":93987,"byte_end":94062,"line_start":401,"line_end":401,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If this future resolves to an [`Ok`], panics, or is","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":94067,"byte_end":94137,"line_start":402,"line_end":402,"column_start":5,"column_end":75}},{"value":"/ dropped, then the provided closure will never be invoked. The","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":94142,"byte_end":94207,"line_start":403,"line_end":403,"column_start":5,"column_end":70}},{"value":"/ [`Ok`](TryFuture::Ok) type of this future and the future returned by `f`","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":94212,"byte_end":94288,"line_start":404,"line_end":404,"column_start":5,"column_end":81}},{"value":"/ have to match.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":94293,"byte_end":94311,"line_start":405,"line_end":405,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":94316,"byte_end":94319,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":94324,"byte_end":94399,"line_start":407,"line_end":407,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":94404,"byte_end":94430,"line_start":408,"line_end":408,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":94435,"byte_end":94438,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":94443,"byte_end":94457,"line_start":410,"line_end":410,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":94462,"byte_end":94465,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":94470,"byte_end":94477,"line_start":412,"line_end":412,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":94482,"byte_end":94520,"line_start":413,"line_end":413,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":94525,"byte_end":94528,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":94533,"byte_end":94574,"line_start":415,"line_end":415,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":94579,"byte_end":94625,"line_start":416,"line_end":416,"column_start":5,"column_end":51}},{"value":"/ let future = future.or_else(|x| async move { Err::<i32, i32>(x + 3) });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":94630,"byte_end":94705,"line_start":417,"line_end":417,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(future.await, Err(4));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":94710,"byte_end":94747,"line_start":418,"line_end":418,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":94752,"byte_end":94761,"line_start":419,"line_end":419,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":94766,"byte_end":94773,"line_start":420,"line_end":420,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":94778,"byte_end":94781,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ Calling [`or_else`](TryFutureExt::or_else) on a successful future has","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":94786,"byte_end":94859,"line_start":422,"line_end":422,"column_start":5,"column_end":78}},{"value":"/ no effect:","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":94864,"byte_end":94878,"line_start":423,"line_end":423,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":94883,"byte_end":94886,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":94891,"byte_end":94898,"line_start":425,"line_end":425,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":94903,"byte_end":94941,"line_start":426,"line_end":426,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":94946,"byte_end":94949,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":94954,"byte_end":94995,"line_start":428,"line_end":428,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":95000,"byte_end":95045,"line_start":429,"line_end":429,"column_start":5,"column_end":50}},{"value":"/ let future = future.or_else(|x| async move { Ok::<i32, i32>(x + 3) });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":95050,"byte_end":95124,"line_start":430,"line_end":430,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(future.await, Ok(1));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":95129,"byte_end":95165,"line_start":431,"line_end":431,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":95170,"byte_end":95179,"line_start":432,"line_end":432,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":95184,"byte_end":95191,"line_start":433,"line_end":433,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":911},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":96182,"byte_end":96192,"line_start":461,"line_end":461,"column_start":8,"column_end":18},"name":"inspect_ok","qualname":"::future::try_future::TryFutureExt::inspect_ok","value":"pub fn inspect_ok<F>(Self, F) -> InspectOk<Self, F> where F: FnOnce(&Self::Ok)\n-> (), Self: Sized","parent":{"krate":0,"index":888},"children":[],"decl_id":null,"docs":" Do something with the success value of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the success value of a future before passing it on.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":95455,"byte_end":95528,"line_start":443,"line_end":443,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":95533,"byte_end":95536,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":95541,"byte_end":95616,"line_start":445,"line_end":445,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":95621,"byte_end":95694,"line_start":446,"line_end":446,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":95699,"byte_end":95768,"line_start":447,"line_end":447,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect_ok`.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":95773,"byte_end":95826,"line_start":448,"line_end":448,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":95831,"byte_end":95834,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":95839,"byte_end":95853,"line_start":450,"line_end":450,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":95858,"byte_end":95861,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":95866,"byte_end":95873,"line_start":452,"line_end":452,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":95878,"byte_end":95919,"line_start":453,"line_end":453,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":95924,"byte_end":95962,"line_start":454,"line_end":454,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":95967,"byte_end":95970,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ let future = async { Ok::<_, ()>(1) };","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":95975,"byte_end":96017,"line_start":456,"line_end":456,"column_start":5,"column_end":47}},{"value":"/ let new_future = future.inspect_ok(|&x| println!(\"about to resolve: {}\", x));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":96022,"byte_end":96103,"line_start":457,"line_end":457,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(new_future.await, Ok(1));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":96108,"byte_end":96148,"line_start":458,"line_end":458,"column_start":5,"column_end":45}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":96153,"byte_end":96162,"line_start":459,"line_end":459,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":96167,"byte_end":96174,"line_start":460,"line_end":460,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":913},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":97118,"byte_end":97129,"line_start":487,"line_end":487,"column_start":8,"column_end":19},"name":"inspect_err","qualname":"::future::try_future::TryFutureExt::inspect_err","value":"pub fn inspect_err<F>(Self, F) -> InspectErr<Self, F> where\nF: FnOnce(&Self::Error) -> (), Self: Sized","parent":{"krate":0,"index":888},"children":[],"decl_id":null,"docs":" Do something with the error value of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the error value of a future before passing it on.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":96391,"byte_end":96462,"line_start":469,"line_end":469,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":96467,"byte_end":96470,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":96475,"byte_end":96550,"line_start":471,"line_end":471,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":96555,"byte_end":96628,"line_start":472,"line_end":472,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":96633,"byte_end":96702,"line_start":473,"line_end":473,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect_err`.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":96707,"byte_end":96761,"line_start":474,"line_end":474,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":96766,"byte_end":96769,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":96774,"byte_end":96788,"line_start":476,"line_end":476,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":96793,"byte_end":96796,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":96801,"byte_end":96808,"line_start":478,"line_end":478,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":96813,"byte_end":96854,"line_start":479,"line_end":479,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":96859,"byte_end":96897,"line_start":480,"line_end":480,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":96902,"byte_end":96905,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ let future = async { Err::<(), _>(1) };","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":96910,"byte_end":96953,"line_start":482,"line_end":482,"column_start":5,"column_end":48}},{"value":"/ let new_future = future.inspect_err(|&x| println!(\"about to error: {}\", x));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":96958,"byte_end":97038,"line_start":483,"line_end":483,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(new_future.await, Err(1));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":97043,"byte_end":97084,"line_start":484,"line_end":484,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":97089,"byte_end":97098,"line_start":485,"line_end":485,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":97103,"byte_end":97110,"line_start":486,"line_end":486,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":915},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":97514,"byte_end":97525,"line_start":499,"line_end":499,"column_start":8,"column_end":19},"name":"try_flatten","qualname":"::future::try_future::TryFutureExt::try_flatten","value":"pub fn try_flatten(Self) -> TryFlatten<Self, Self::Ok> where\nSelf::Ok: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":888},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is another future.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":97333,"byte_end":97408,"line_start":495,"line_end":495,"column_start":5,"column_end":80}},{"value":"/ future is another future.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":97413,"byte_end":97442,"line_start":496,"line_end":496,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":97447,"byte_end":97450,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `future.and_then(|x| x)`.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":97455,"byte_end":97506,"line_start":498,"line_end":498,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":916},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":98704,"byte_end":98722,"line_start":532,"line_end":532,"column_start":8,"column_end":26},"name":"try_flatten_stream","qualname":"::future::try_future::TryFutureExt::try_flatten_stream","value":"pub fn try_flatten_stream(Self) -> TryFlattenStream<Self> where\nSelf::Ok: TryStream<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":888},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is a stream.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":97760,"byte_end":97835,"line_start":507,"line_end":507,"column_start":5,"column_end":80}},{"value":"/ future is a stream.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":97840,"byte_end":97863,"line_start":508,"line_end":508,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":97868,"byte_end":97871,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ This can be useful when stream initialization is deferred, and it is","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":97876,"byte_end":97948,"line_start":510,"line_end":510,"column_start":5,"column_end":77}},{"value":"/ convenient to work with that stream as if stream was available at the","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":97953,"byte_end":98026,"line_start":511,"line_end":511,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":98031,"byte_end":98045,"line_start":512,"line_end":512,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":98050,"byte_end":98053,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":98058,"byte_end":98128,"line_start":514,"line_end":514,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":98133,"byte_end":98151,"line_start":515,"line_end":515,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":98156,"byte_end":98159,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":98164,"byte_end":98178,"line_start":517,"line_end":517,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":98183,"byte_end":98186,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":98191,"byte_end":98198,"line_start":519,"line_end":519,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":98203,"byte_end":98244,"line_start":520,"line_end":520,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":98249,"byte_end":98287,"line_start":521,"line_end":521,"column_start":5,"column_end":43}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":98292,"byte_end":98338,"line_start":522,"line_end":522,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":98343,"byte_end":98346,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ let stream_items = vec![17, 18, 19].into_iter().map(Ok);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":98351,"byte_end":98411,"line_start":524,"line_end":524,"column_start":5,"column_end":65}},{"value":"/ let future_of_a_stream = async { Ok::<_, ()>(stream::iter(stream_items)) };","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":98416,"byte_end":98495,"line_start":525,"line_end":525,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":98500,"byte_end":98503,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ let stream = future_of_a_stream.try_flatten_stream();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":98508,"byte_end":98565,"line_start":527,"line_end":527,"column_start":5,"column_end":62}},{"value":"/ let list = stream.try_collect::<Vec<_>>().await;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":98570,"byte_end":98622,"line_start":528,"line_end":528,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(list, Ok(vec![17, 18, 19]));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":98627,"byte_end":98670,"line_start":529,"line_end":529,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":98675,"byte_end":98684,"line_start":530,"line_end":530,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":98689,"byte_end":98696,"line_start":531,"line_end":531,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":917},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":99813,"byte_end":99827,"line_start":564,"line_end":564,"column_start":8,"column_end":22},"name":"unwrap_or_else","qualname":"::future::try_future::TryFutureExt::unwrap_or_else","value":"pub fn unwrap_or_else<F>(Self, F) -> UnwrapOrElse<Self, F> where Self: Sized,\nF: FnOnce(Self::Error) -> Self::Ok","parent":{"krate":0,"index":888},"children":[],"decl_id":null,"docs":" Unwraps this future's output, producing a future with this future's\n [`Ok`](TryFuture::Ok) type as its\n [`Output`](std::future::Future::Output) type.","sig":null,"attributes":[{"value":"/ Unwraps this future's output, producing a future with this future's","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":98982,"byte_end":99053,"line_start":542,"line_end":542,"column_start":5,"column_end":76}},{"value":"/ [`Ok`](TryFuture::Ok) type as its","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":99058,"byte_end":99095,"line_start":543,"line_end":543,"column_start":5,"column_end":42}},{"value":"/ [`Output`](std::future::Future::Output) type.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":99100,"byte_end":99149,"line_start":544,"line_end":544,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":99154,"byte_end":99157,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ If this future is resolved successfully, the returned future will","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":99162,"byte_end":99231,"line_start":546,"line_end":546,"column_start":5,"column_end":74}},{"value":"/ contain the original future's success value as output. Otherwise, the","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":99236,"byte_end":99309,"line_start":547,"line_end":547,"column_start":5,"column_end":78}},{"value":"/ closure `f` is called with the error value to produce an alternate","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":99314,"byte_end":99384,"line_start":548,"line_end":548,"column_start":5,"column_end":75}},{"value":"/ success value.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":99389,"byte_end":99407,"line_start":549,"line_end":549,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":99412,"byte_end":99415,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ This method is similar to the [`Result::unwrap_or_else`] method.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":99420,"byte_end":99488,"line_start":551,"line_end":551,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":99493,"byte_end":99496,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":99501,"byte_end":99515,"line_start":553,"line_end":553,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":99520,"byte_end":99523,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":99528,"byte_end":99535,"line_start":555,"line_end":555,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":99540,"byte_end":99578,"line_start":556,"line_end":556,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":99583,"byte_end":99586,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":99591,"byte_end":99632,"line_start":558,"line_end":558,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<(), &str>(\"Boom!\") };","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":99637,"byte_end":99689,"line_start":559,"line_end":559,"column_start":5,"column_end":57}},{"value":"/ let future = future.unwrap_or_else(|_| ());","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":99694,"byte_end":99741,"line_start":560,"line_end":560,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(future.await, ());","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":99746,"byte_end":99779,"line_start":561,"line_end":561,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":99784,"byte_end":99793,"line_start":562,"line_end":562,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":99798,"byte_end":99805,"line_start":563,"line_end":563,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":919},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":101082,"byte_end":101093,"line_start":604,"line_end":604,"column_start":8,"column_end":19},"name":"into_future","qualname":"::future::try_future::TryFutureExt::into_future","value":"pub fn into_future(Self) -> IntoFuture<Self> where Self: Sized","parent":{"krate":0,"index":888},"children":[],"decl_id":null,"docs":" Wraps a [`TryFuture`] into a type that implements\n [`Future`](std::future::Future).","sig":null,"attributes":[{"value":"/ Wraps a [`TryFuture`] into a type that implements","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":100381,"byte_end":100434,"line_start":583,"line_end":583,"column_start":5,"column_end":58}},{"value":"/ [`Future`](std::future::Future).","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":100439,"byte_end":100475,"line_start":584,"line_end":584,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":100480,"byte_end":100483,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ [`TryFuture`]s currently do not implement the","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":100488,"byte_end":100537,"line_start":586,"line_end":586,"column_start":5,"column_end":54}},{"value":"/ [`Future`](std::future::Future) trait due to limitations of the","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":100542,"byte_end":100609,"line_start":587,"line_end":587,"column_start":5,"column_end":72}},{"value":"/ compiler.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":100614,"byte_end":100627,"line_start":588,"line_end":588,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":100632,"byte_end":100635,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":100640,"byte_end":100654,"line_start":590,"line_end":590,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":100659,"byte_end":100662,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":100667,"byte_end":100674,"line_start":592,"line_end":592,"column_start":5,"column_end":12}},{"value":"/ use futures::future::{Future, TryFuture, TryFutureExt};","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":100679,"byte_end":100738,"line_start":593,"line_end":593,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":100743,"byte_end":100746,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ # type T = i32;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":100751,"byte_end":100770,"line_start":595,"line_end":595,"column_start":5,"column_end":24}},{"value":"/ # type E = ();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":100775,"byte_end":100793,"line_start":596,"line_end":596,"column_start":5,"column_end":23}},{"value":"/ fn make_try_future() -> impl TryFuture<Ok = T, Error = E> { // ... }","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":100798,"byte_end":100870,"line_start":597,"line_end":597,"column_start":5,"column_end":77}},{"value":"/ # async { Ok::<i32, ()>(1) }","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":100875,"byte_end":100907,"line_start":598,"line_end":598,"column_start":5,"column_end":37}},{"value":"/ # }","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":100912,"byte_end":100919,"line_start":599,"line_end":599,"column_start":5,"column_end":12}},{"value":"/ fn take_future(future: impl Future<Output = Result<T, E>>) { /* ... */ }","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":100924,"byte_end":101000,"line_start":600,"line_end":600,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":101005,"byte_end":101008,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ take_future(make_try_future().into_future());","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":101013,"byte_end":101062,"line_start":602,"line_end":602,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":101067,"byte_end":101074,"line_start":603,"line_end":603,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":920},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":101352,"byte_end":101366,"line_start":613,"line_end":613,"column_start":8,"column_end":22},"name":"try_poll_unpin","qualname":"::future::try_future::TryFutureExt::try_poll_unpin","value":"pub fn try_poll_unpin(&mut Self, &mut Context)\n-> Poll<Result<Self::Ok, Self::Error>> where Self: Unpin","parent":{"krate":0,"index":888},"children":[],"decl_id":null,"docs":" A convenience method for calling [`TryFuture::try_poll`] on [`Unpin`]\n future types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`TryFuture::try_poll`] on [`Unpin`]","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":101249,"byte_end":101322,"line_start":611,"line_end":611,"column_start":5,"column_end":78}},{"value":"/ future types.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":101327,"byte_end":101344,"line_start":612,"line_end":612,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":10013},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":109535,"byte_end":109539,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Lazy","qualname":"::future::lazy::Lazy","value":"Lazy {  }","parent":null,"children":[{"krate":0,"index":10015}],"decl_id":null,"docs":" Future for the [`lazy`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`lazy`] function.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":109401,"byte_end":109438,"line_start":6,"line_end":6,"column_start":1,"column_end":38}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":109456,"byte_end":109523,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":990},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":110081,"byte_end":110085,"line_start":35,"line_end":35,"column_start":8,"column_end":12},"name":"lazy","qualname":"::future::lazy::lazy","value":"pub fn lazy<F, R>(F) -> Lazy<F> where F: FnOnce(&mut Context) -> R","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future that allows delayed execution of a closure.","sig":null,"attributes":[{"value":"/ Creates a new future that allows delayed execution of a closure.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":109644,"byte_end":109712,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":109713,"byte_end":109716,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The provided closure is only run once the future is polled.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":109717,"byte_end":109780,"line_start":18,"line_end":18,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":109781,"byte_end":109784,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":109785,"byte_end":109799,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":109800,"byte_end":109803,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":109804,"byte_end":109811,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":109812,"byte_end":109853,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":109854,"byte_end":109878,"line_start":24,"line_end":24,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":109879,"byte_end":109882,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let a = future::lazy(|_| 1);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":109883,"byte_end":109915,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(a.await, 1);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":109916,"byte_end":109943,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":109944,"byte_end":109947,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ let b = future::lazy(|_| -> i32 {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":109948,"byte_end":109985,"line_start":29,"line_end":29,"column_start":1,"column_end":38}},{"value":"/     panic!(\"oh no!\")","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":109986,"byte_end":110010,"line_start":30,"line_end":30,"column_start":1,"column_end":25}},{"value":"/ });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":110011,"byte_end":110018,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ drop(b); // closure is never run","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":110019,"byte_end":110055,"line_start":32,"line_end":32,"column_start":1,"column_end":37}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":110056,"byte_end":110065,"line_start":33,"line_end":33,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":110066,"byte_end":110073,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10019},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":110912,"byte_end":110919,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Pending","qualname":"::future::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":10021}],"decl_id":null,"docs":" Future for the [`pending()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`pending()`] function.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":110773,"byte_end":110815,"line_start":7,"line_end":7,"column_start":1,"column_end":43}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":110833,"byte_end":110900,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1036},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":111438,"byte_end":111445,"line_start":36,"line_end":36,"column_start":8,"column_end":15},"name":"pending","qualname":"::future::pending::pending","value":"pub fn pending<T>() -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which never resolves, representing a computation that never\n finishes.","sig":null,"attributes":[{"value":"/ Creates a future which never resolves, representing a computation that never","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":111060,"byte_end":111140,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ finishes.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":111141,"byte_end":111154,"line_start":21,"line_end":21,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":111155,"byte_end":111158,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ The returned future will forever return [`Poll::Pending`].","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":111159,"byte_end":111221,"line_start":23,"line_end":23,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":111222,"byte_end":111225,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":111226,"byte_end":111240,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":111241,"byte_end":111244,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":111245,"byte_end":111258,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":111259,"byte_end":111300,"line_start":28,"line_end":28,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":111301,"byte_end":111325,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":111326,"byte_end":111329,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let future = future::pending();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":111330,"byte_end":111365,"line_start":31,"line_end":31,"column_start":1,"column_end":36}},{"value":"/ let () = future.await;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":111366,"byte_end":111392,"line_start":32,"line_end":32,"column_start":1,"column_end":27}},{"value":"/ unreachable!();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":111393,"byte_end":111412,"line_start":33,"line_end":33,"column_start":1,"column_end":20}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":111413,"byte_end":111422,"line_start":34,"line_end":34,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":111423,"byte_end":111430,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10027},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":112217,"byte_end":112223,"line_start":16,"line_end":16,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::maybe_done::MaybeDone::Future","value":"MaybeDone::Future(Fut)","parent":{"krate":0,"index":10025},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":112182,"byte_end":112212,"line_start":15,"line_end":15,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10030},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":112290,"byte_end":112294,"line_start":18,"line_end":18,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::maybe_done::MaybeDone::Done","value":"MaybeDone::Done(Fut::Output)","parent":{"krate":0,"index":10025},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":112247,"byte_end":112285,"line_start":17,"line_end":17,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10033},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":112456,"byte_end":112460,"line_start":21,"line_end":21,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::maybe_done::MaybeDone::Gone","value":"MaybeDone::Gone","parent":{"krate":0,"index":10025},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`MaybeDone`] has been\n taken using the [`take_output`](MaybeDone::take_output) method.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`MaybeDone`] has been","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":112313,"byte_end":112379,"line_start":19,"line_end":19,"column_start":5,"column_end":71}},{"value":"/ taken using the [`take_output`](MaybeDone::take_output) method.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":112384,"byte_end":112451,"line_start":20,"line_end":20,"column_start":5,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":10025},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":112153,"byte_end":112162,"line_start":14,"line_end":14,"column_start":10,"column_end":19},"name":"MaybeDone","qualname":"::future::maybe_done::MaybeDone","value":"pub enum MaybeDone<Fut: Future> { Future(Fut), Done(Fut::Output), Gone, }","parent":null,"children":[{"krate":0,"index":10027},{"krate":0,"index":10030},{"krate":0,"index":10033}],"decl_id":null,"docs":" A future that may have completed.","sig":null,"attributes":[{"value":"/ A future that may have completed.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":112031,"byte_end":112068,"line_start":10,"line_end":10,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":112069,"byte_end":112072,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is created by the [`maybe_done()`] function.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":112073,"byte_end":112126,"line_start":12,"line_end":12,"column_start":1,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":1083},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":112981,"byte_end":112991,"line_start":43,"line_end":43,"column_start":8,"column_end":18},"name":"maybe_done","qualname":"::future::maybe_done::maybe_done","value":"pub fn maybe_done<Fut: Future>(Fut) -> MaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `MaybeDone`","sig":null,"attributes":[{"value":"/ Wraps a future into a `MaybeDone`","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":112520,"byte_end":112557,"line_start":26,"line_end":26,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":112558,"byte_end":112561,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":112562,"byte_end":112576,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":112577,"byte_end":112580,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":112581,"byte_end":112588,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":112589,"byte_end":112630,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":112631,"byte_end":112655,"line_start":32,"line_end":32,"column_start":1,"column_end":25}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":112656,"byte_end":112681,"line_start":33,"line_end":33,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":112682,"byte_end":112685,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let future = future::maybe_done(async { 5 });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":112686,"byte_end":112735,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ pin_mut!(future);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":112736,"byte_end":112757,"line_start":36,"line_end":36,"column_start":1,"column_end":22}},{"value":"/ assert_eq!(future.as_mut().take_output(), None);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":112758,"byte_end":112810,"line_start":37,"line_end":37,"column_start":1,"column_end":53}},{"value":"/ let () = future.as_mut().await;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":112811,"byte_end":112846,"line_start":38,"line_end":38,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(future.as_mut().take_output(), Some(5));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":112847,"byte_end":112902,"line_start":39,"line_end":39,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(future.as_mut().take_output(), None);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":112903,"byte_end":112955,"line_start":40,"line_end":40,"column_start":1,"column_end":53}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":112956,"byte_end":112965,"line_start":41,"line_end":41,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":112966,"byte_end":112973,"line_start":42,"line_end":42,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1087},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":113432,"byte_end":113442,"line_start":53,"line_end":53,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<MaybeDone<Fut>>::output_mut","value":"pub fn output_mut(Pin<&mut Self>) -> Option<&mut Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has been completed and [`take_output`](MaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":113134,"byte_end":113219,"line_start":48,"line_end":48,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":113224,"byte_end":113295,"line_start":49,"line_end":49,"column_start":5,"column_end":76}},{"value":"/ future has been completed and [`take_output`](MaybeDone::take_output)","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":113300,"byte_end":113373,"line_start":50,"line_end":50,"column_start":5,"column_end":78}},{"value":"/ has not yet been called.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":113378,"byte_end":113406,"line_start":51,"line_end":51,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":113411,"byte_end":113420,"line_start":52,"line_end":52,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1088},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":113790,"byte_end":113801,"line_start":65,"line_end":65,"column_start":12,"column_end":23},"name":"take_output","qualname":"<MaybeDone<Fut>>::take_output","value":"pub fn take_output(Pin<&mut Self>) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to take the output of a `MaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempt to take the output of a `MaybeDone` without driving it","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":113670,"byte_end":113736,"line_start":62,"line_end":62,"column_start":5,"column_end":71}},{"value":"/ towards completion.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":113741,"byte_end":113764,"line_start":63,"line_end":63,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":113769,"byte_end":113778,"line_start":64,"line_end":64,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10040},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":115426,"byte_end":115432,"line_start":16,"line_end":16,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::try_maybe_done::TryMaybeDone::Future","value":"TryMaybeDone::Future(Fut)","parent":{"krate":0,"index":10038},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":115391,"byte_end":115421,"line_start":15,"line_end":15,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10043},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":115499,"byte_end":115503,"line_start":18,"line_end":18,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::try_maybe_done::TryMaybeDone::Done","value":"TryMaybeDone::Done(Fut::Ok)","parent":{"krate":0,"index":10038},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":115456,"byte_end":115494,"line_start":17,"line_end":17,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10046},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":115711,"byte_end":115715,"line_start":22,"line_end":22,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::try_maybe_done::TryMaybeDone::Gone","value":"TryMaybeDone::Gone","parent":{"krate":0,"index":10038},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`TryMaybeDone`] has been\n taken using the [`take_output`](TryMaybeDone::take_output) method,\n or if the future returned an error.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`TryMaybeDone`] has been","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":115518,"byte_end":115587,"line_start":19,"line_end":19,"column_start":5,"column_end":74}},{"value":"/ taken using the [`take_output`](TryMaybeDone::take_output) method,","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":115592,"byte_end":115662,"line_start":20,"line_end":20,"column_start":5,"column_end":75}},{"value":"/ or if the future returned an error.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":115667,"byte_end":115706,"line_start":21,"line_end":21,"column_start":5,"column_end":44}}]},{"kind":"Enum","id":{"krate":0,"index":10038},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":115356,"byte_end":115368,"line_start":14,"line_end":14,"column_start":10,"column_end":22},"name":"TryMaybeDone","qualname":"::future::try_maybe_done::TryMaybeDone","value":"pub enum TryMaybeDone<Fut: TryFuture> { Future(Fut), Done(Fut::Ok), Gone, }","parent":null,"children":[{"krate":0,"index":10040},{"krate":0,"index":10043},{"krate":0,"index":10046}],"decl_id":null,"docs":" A future that may have completed with an error.","sig":null,"attributes":[{"value":"/ A future that may have completed with an error.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":115216,"byte_end":115267,"line_start":10,"line_end":10,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":115268,"byte_end":115271,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is created by the [`try_maybe_done()`] function.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":115272,"byte_end":115329,"line_start":12,"line_end":12,"column_start":1,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":1135},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":115829,"byte_end":115843,"line_start":28,"line_end":28,"column_start":8,"column_end":22},"name":"try_maybe_done","qualname":"::future::try_maybe_done::try_maybe_done","value":"pub fn try_maybe_done<Fut: TryFuture>(Fut) -> TryMaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `TryMaybeDone`\n","sig":null,"attributes":[{"value":"/ Wraps a future into a `TryMaybeDone`","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":115781,"byte_end":115821,"line_start":27,"line_end":27,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1139},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":116330,"byte_end":116340,"line_start":38,"line_end":38,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<TryMaybeDone<Fut>>::output_mut","value":"pub fn output_mut(Pin<&mut Self>) -> Option<&mut Fut::Ok>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has completed successfully and [`take_output`](TryMaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":116021,"byte_end":116106,"line_start":33,"line_end":33,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":116111,"byte_end":116182,"line_start":34,"line_end":34,"column_start":5,"column_end":76}},{"value":"/ future has completed successfully and [`take_output`](TryMaybeDone::take_output)","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":116187,"byte_end":116271,"line_start":35,"line_end":35,"column_start":5,"column_end":89}},{"value":"/ has not yet been called.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":116276,"byte_end":116304,"line_start":36,"line_end":36,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":116309,"byte_end":116318,"line_start":37,"line_end":37,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1140},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":116690,"byte_end":116701,"line_start":50,"line_end":50,"column_start":12,"column_end":23},"name":"take_output","qualname":"<TryMaybeDone<Fut>>::take_output","value":"pub fn take_output(Pin<&mut Self>) -> Option<Fut::Ok>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to take the output of a `TryMaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempt to take the output of a `TryMaybeDone` without driving it","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":116567,"byte_end":116636,"line_start":47,"line_end":47,"column_start":5,"column_end":74}},{"value":"/ towards completion.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":116641,"byte_end":116664,"line_start":48,"line_end":48,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":116669,"byte_end":116678,"line_start":49,"line_end":49,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":10051},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/option.rs","byte_start":118912,"byte_end":118924,"line_start":28,"line_end":28,"column_start":16,"column_end":28},"name":"OptionFuture","qualname":"::future::option::OptionFuture","value":"OptionFuture {  }","parent":null,"children":[{"krate":0,"index":10053}],"decl_id":null,"docs":" A future representing a value which may or may not be present.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":1212},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":120042,"byte_end":120048,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::future::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":1214}],"decl_id":null,"docs":" Future for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`poll_fn`] function.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":119922,"byte_end":119962,"line_start":9,"line_end":9,"column_start":1,"column_end":41}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":119963,"byte_end":120030,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1217},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":120635,"byte_end":120642,"line_start":36,"line_end":36,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::future::poll_fn::poll_fn","value":"pub fn poll_fn<T, F>(F) -> PollFn<F> where F: FnMut(&mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future wrapping around a function returning [`Poll`].","sig":null,"attributes":[{"value":"/ Creates a new future wrapping around a function returning [`Poll`].","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":120099,"byte_end":120170,"line_start":17,"line_end":17,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":120171,"byte_end":120174,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Polling the returned future delegates to the wrapped function.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":120175,"byte_end":120241,"line_start":19,"line_end":19,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":120242,"byte_end":120245,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":120246,"byte_end":120260,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":120261,"byte_end":120264,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":120265,"byte_end":120272,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":120273,"byte_end":120314,"line_start":24,"line_end":24,"column_start":1,"column_end":42}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":120315,"byte_end":120348,"line_start":25,"line_end":25,"column_start":1,"column_end":34}},{"value":"/ use futures::task::{Context, Poll};","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":120349,"byte_end":120388,"line_start":26,"line_end":26,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":120389,"byte_end":120392,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ fn read_line(_cx: &mut Context<'_>) -> Poll<String> {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":120393,"byte_end":120450,"line_start":28,"line_end":28,"column_start":1,"column_end":58}},{"value":"/     Poll::Ready(\"Hello, World!\".into())","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":120451,"byte_end":120494,"line_start":29,"line_end":29,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":120495,"byte_end":120500,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":120501,"byte_end":120504,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let read_future = poll_fn(read_line);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":120505,"byte_end":120546,"line_start":32,"line_end":32,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(read_future.await, \"Hello, World!\".to_owned());","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":120547,"byte_end":120609,"line_start":33,"line_end":33,"column_start":1,"column_end":63}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":120610,"byte_end":120619,"line_start":34,"line_end":34,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":120620,"byte_end":120627,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10090},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":121576,"byte_end":121589,"line_start":13,"line_end":13,"column_start":16,"column_end":29},"name":"PollImmediate","qualname":"::future::poll_immediate::PollImmediate","value":"PollImmediate {  }","parent":null,"children":[{"krate":0,"index":10092}],"decl_id":null,"docs":" Future for the [`poll_immediate`](poll_immediate()) function.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1276},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":124997,"byte_end":125011,"line_start":124,"line_end":124,"column_start":8,"column_end":22},"name":"poll_immediate","qualname":"::future::poll_immediate::poll_immediate","value":"pub fn poll_immediate<F: Future>(F) -> PollImmediate<F>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future that is immediately ready with an Option of a value.\n Specifically this means that [poll](core::future::Future::poll()) always returns [Poll::Ready](core::task::Poll::Ready).","sig":null,"attributes":[{"value":"/ Creates a future that is immediately ready with an Option of a value.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":123809,"byte_end":123882,"line_start":89,"line_end":89,"column_start":1,"column_end":74}},{"value":"/ Specifically this means that [poll](core::future::Future::poll()) always returns [Poll::Ready](core::task::Poll::Ready).","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":123883,"byte_end":124007,"line_start":90,"line_end":90,"column_start":1,"column_end":125}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":124008,"byte_end":124011,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ # Caution","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":124012,"byte_end":124025,"line_start":92,"line_end":92,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":124026,"byte_end":124029,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ When consuming the future by this function, note the following:","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":124030,"byte_end":124097,"line_start":94,"line_end":94,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":124098,"byte_end":124101,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ - This function does not guarantee that the future will run to completion, so it is generally incompatible with passing the non-cancellation-safe future by value.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":124102,"byte_end":124268,"line_start":96,"line_end":96,"column_start":1,"column_end":167}},{"value":"/ - Even if the future is cancellation-safe, creating and dropping new futures frequently may lead to performance problems.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":124269,"byte_end":124394,"line_start":97,"line_end":97,"column_start":1,"column_end":126}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":124395,"byte_end":124398,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":124399,"byte_end":124413,"line_start":99,"line_end":99,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":124414,"byte_end":124417,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":124418,"byte_end":124425,"line_start":101,"line_end":101,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":124426,"byte_end":124467,"line_start":102,"line_end":102,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":124468,"byte_end":124492,"line_start":103,"line_end":103,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":124493,"byte_end":124496,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ let r = future::poll_immediate(async { 1_u32 });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":124497,"byte_end":124549,"line_start":105,"line_end":105,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(r.await, Some(1));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":124550,"byte_end":124583,"line_start":106,"line_end":106,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":124584,"byte_end":124587,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ let p = future::poll_immediate(future::pending::<i32>());","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":124588,"byte_end":124649,"line_start":108,"line_end":108,"column_start":1,"column_end":62}},{"value":"/ assert_eq!(p.await, None);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":124650,"byte_end":124680,"line_start":109,"line_end":109,"column_start":1,"column_end":31}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":124681,"byte_end":124690,"line_start":110,"line_end":110,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":124691,"byte_end":124698,"line_start":111,"line_end":111,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":124699,"byte_end":124702,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ ### Reusing a future","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":124703,"byte_end":124727,"line_start":113,"line_end":113,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":124728,"byte_end":124731,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":124732,"byte_end":124739,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":124740,"byte_end":124781,"line_start":116,"line_end":116,"column_start":1,"column_end":42}},{"value":"/ use futures::{future, pin_mut};","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":124782,"byte_end":124817,"line_start":117,"line_end":117,"column_start":1,"column_end":36}},{"value":"/ let f = async {futures::pending!(); 42_u8};","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":124818,"byte_end":124865,"line_start":118,"line_end":118,"column_start":1,"column_end":48}},{"value":"/ pin_mut!(f);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":124866,"byte_end":124882,"line_start":119,"line_end":119,"column_start":1,"column_end":17}},{"value":"/ assert_eq!(None, future::poll_immediate(&mut f).await);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":124883,"byte_end":124942,"line_start":120,"line_end":120,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(42, f.await);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":124943,"byte_end":124971,"line_start":121,"line_end":121,"column_start":1,"column_end":29}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":124972,"byte_end":124981,"line_start":122,"line_end":122,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":124982,"byte_end":124989,"line_start":123,"line_end":123,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10129},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":125434,"byte_end":125439,"line_start":9,"line_end":9,"column_start":12,"column_end":17},"name":"Ready","qualname":"::future::ready::Ready","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`ready`](ready()) function.\n","sig":null,"attributes":[{"value":"/ Future for the [`ready`](ready()) function.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":125283,"byte_end":125330,"line_start":6,"line_end":6,"column_start":1,"column_end":48}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":125355,"byte_end":125422,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1308},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":125562,"byte_end":125572,"line_start":14,"line_end":14,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Ready<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the value from this immediately ready future.\n","sig":null,"attributes":[{"value":"/ Unwraps the value from this immediately ready future.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":125479,"byte_end":125536,"line_start":12,"line_end":12,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":125541,"byte_end":125550,"line_start":13,"line_end":13,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":1318},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":126238,"byte_end":126243,"line_start":48,"line_end":48,"column_start":8,"column_end":13},"name":"ready","qualname":"::future::ready::ready","value":"pub fn ready<T>(T) -> Ready<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future that is immediately ready with a value.","sig":null,"attributes":[{"value":"/ Creates a future that is immediately ready with a value.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":125992,"byte_end":126052,"line_start":36,"line_end":36,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":126053,"byte_end":126056,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":126057,"byte_end":126071,"line_start":38,"line_end":38,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":126072,"byte_end":126075,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":126076,"byte_end":126083,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":126084,"byte_end":126125,"line_start":41,"line_end":41,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":126126,"byte_end":126150,"line_start":42,"line_end":42,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":126151,"byte_end":126154,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(1);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":126155,"byte_end":126184,"line_start":44,"line_end":44,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(a.await, 1);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":126185,"byte_end":126212,"line_start":45,"line_end":45,"column_start":1,"column_end":28}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":126213,"byte_end":126222,"line_start":46,"line_end":46,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":126223,"byte_end":126230,"line_start":47,"line_end":47,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1320},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":126578,"byte_end":126580,"line_start":64,"line_end":64,"column_start":8,"column_end":10},"name":"ok","qualname":"::future::ready::ok","value":"pub fn ok<T, E>(T) -> Ready<Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a future that is immediately ready with a success value.","sig":null,"attributes":[{"value":"/ Create a future that is immediately ready with a success value.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":126312,"byte_end":126379,"line_start":52,"line_end":52,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":126380,"byte_end":126383,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":126384,"byte_end":126398,"line_start":54,"line_end":54,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":126399,"byte_end":126402,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":126403,"byte_end":126410,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":126411,"byte_end":126452,"line_start":57,"line_end":57,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":126453,"byte_end":126477,"line_start":58,"line_end":58,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":126478,"byte_end":126481,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ let a = future::ok::<i32, i32>(1);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":126482,"byte_end":126520,"line_start":60,"line_end":60,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(a.await, Ok(1));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":126521,"byte_end":126552,"line_start":61,"line_end":61,"column_start":1,"column_end":32}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":126553,"byte_end":126562,"line_start":62,"line_end":62,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":126563,"byte_end":126570,"line_start":63,"line_end":63,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1323},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":126911,"byte_end":126914,"line_start":80,"line_end":80,"column_start":8,"column_end":11},"name":"err","qualname":"::future::ready::err","value":"pub fn err<T, E>(E) -> Ready<Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a future that is immediately ready with an error value.","sig":null,"attributes":[{"value":"/ Create a future that is immediately ready with an error value.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":126644,"byte_end":126710,"line_start":68,"line_end":68,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":126711,"byte_end":126714,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":126715,"byte_end":126729,"line_start":70,"line_end":70,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":126730,"byte_end":126733,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":126734,"byte_end":126741,"line_start":72,"line_end":72,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":126742,"byte_end":126783,"line_start":73,"line_end":73,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":126784,"byte_end":126808,"line_start":74,"line_end":74,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":126809,"byte_end":126812,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ let a = future::err::<i32, i32>(1);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":126813,"byte_end":126852,"line_start":76,"line_end":76,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(a.await, Err(1));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":126853,"byte_end":126885,"line_start":77,"line_end":77,"column_start":1,"column_end":33}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":126886,"byte_end":126895,"line_start":78,"line_end":78,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":126896,"byte_end":126903,"line_start":79,"line_end":79,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10231},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":129200,"byte_end":129204,"line_start":78,"line_end":78,"column_start":6,"column_end":10},"name":"Join","qualname":"::future::join::Join","value":"Join {  }","parent":null,"children":[{"krate":0,"index":10234},{"krate":0,"index":10235}],"decl_id":null,"docs":" Future for the [`join`](join()) function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10276},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":129270,"byte_end":129275,"line_start":81,"line_end":81,"column_start":6,"column_end":11},"name":"Join3","qualname":"::future::join::Join3","value":"Join3 {  }","parent":null,"children":[{"krate":0,"index":10280},{"krate":0,"index":10281},{"krate":0,"index":10282}],"decl_id":null,"docs":" Future for the [`join3`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10333},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":129347,"byte_end":129352,"line_start":84,"line_end":84,"column_start":6,"column_end":11},"name":"Join4","qualname":"::future::join::Join4","value":"Join4 {  }","parent":null,"children":[{"krate":0,"index":10338},{"krate":0,"index":10339},{"krate":0,"index":10340},{"krate":0,"index":10341}],"decl_id":null,"docs":" Future for the [`join4`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10402},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":129430,"byte_end":129435,"line_start":87,"line_end":87,"column_start":6,"column_end":11},"name":"Join5","qualname":"::future::join::Join5","value":"Join5 {  }","parent":null,"children":[{"krate":0,"index":10408},{"krate":0,"index":10409},{"krate":0,"index":10410},{"krate":0,"index":10411},{"krate":0,"index":10412}],"decl_id":null,"docs":" Future for the [`join5`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1374},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":130050,"byte_end":130054,"line_start":111,"line_end":111,"column_start":8,"column_end":12},"name":"join","qualname":"::future::join::join","value":"pub fn join<Fut1, Fut2>(Fut1, Fut2) -> Join<Fut1, Fut2> where Fut1: Future,\nFut2: Future","parent":null,"children":[],"decl_id":null,"docs":" Joins the result of two futures, waiting for them both to complete.","sig":null,"attributes":[{"value":"/ Joins the result of two futures, waiting for them both to complete.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":129473,"byte_end":129544,"line_start":90,"line_end":90,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":129545,"byte_end":129548,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits both futures to","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":129549,"byte_end":129620,"line_start":92,"line_end":92,"column_start":1,"column_end":72}},{"value":"/ complete. The returned future will finish with a tuple of both results.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":129621,"byte_end":129696,"line_start":93,"line_end":93,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":129697,"byte_end":129700,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the passed futures and returns a","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":129701,"byte_end":129770,"line_start":95,"line_end":95,"column_start":1,"column_end":70}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":129771,"byte_end":129797,"line_start":96,"line_end":96,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":129798,"byte_end":129801,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":129802,"byte_end":129816,"line_start":98,"line_end":98,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":129817,"byte_end":129820,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":129821,"byte_end":129828,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":129829,"byte_end":129870,"line_start":101,"line_end":101,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":129871,"byte_end":129895,"line_start":102,"line_end":102,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":129896,"byte_end":129899,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":129900,"byte_end":129924,"line_start":104,"line_end":104,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":129925,"byte_end":129949,"line_start":105,"line_end":105,"column_start":1,"column_end":25}},{"value":"/ let pair = future::join(a, b);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":129950,"byte_end":129984,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":129985,"byte_end":129988,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, (1, 2));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":129989,"byte_end":130024,"line_start":108,"line_end":108,"column_start":1,"column_end":36}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":130025,"byte_end":130034,"line_start":109,"line_end":109,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":130035,"byte_end":130042,"line_start":110,"line_end":110,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1377},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":130600,"byte_end":130605,"line_start":136,"line_end":136,"column_start":8,"column_end":13},"name":"join3","qualname":"::future::join::join3","value":"pub fn join3<Fut1, Fut2, Fut3>(Fut1, Fut2, Fut3) -> Join3<Fut1, Fut2, Fut3>\nwhere Fut1: Future, Fut2: Future, Fut3: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":130261,"byte_end":130313,"line_start":120,"line_end":120,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":130314,"byte_end":130317,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":130318,"byte_end":130332,"line_start":122,"line_end":122,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":130333,"byte_end":130336,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":130337,"byte_end":130344,"line_start":124,"line_end":124,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":130345,"byte_end":130386,"line_start":125,"line_end":125,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":130387,"byte_end":130411,"line_start":126,"line_end":126,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":130412,"byte_end":130415,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":130416,"byte_end":130440,"line_start":128,"line_end":128,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":130441,"byte_end":130465,"line_start":129,"line_end":129,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":130466,"byte_end":130490,"line_start":130,"line_end":130,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join3(a, b, c);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":130491,"byte_end":130530,"line_start":131,"line_end":131,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":130531,"byte_end":130534,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":130535,"byte_end":130574,"line_start":133,"line_end":133,"column_start":1,"column_end":40}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":130575,"byte_end":130584,"line_start":134,"line_end":134,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":130585,"byte_end":130592,"line_start":135,"line_end":135,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1381},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":131267,"byte_end":131272,"line_start":167,"line_end":167,"column_start":8,"column_end":13},"name":"join4","qualname":"::future::join::join4","value":"pub fn join4<Fut1, Fut2, Fut3, Fut4>(Fut1, Fut2, Fut3, Fut4)\n-> Join4<Fut1, Fut2, Fut3, Fut4> where Fut1: Future, Fut2: Future,\nFut3: Future, Fut4: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":130897,"byte_end":130949,"line_start":150,"line_end":150,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":130950,"byte_end":130953,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":130954,"byte_end":130968,"line_start":152,"line_end":152,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":130969,"byte_end":130972,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":130973,"byte_end":130980,"line_start":154,"line_end":154,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":130981,"byte_end":131022,"line_start":155,"line_end":155,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":131023,"byte_end":131047,"line_start":156,"line_end":156,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":131048,"byte_end":131051,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":131052,"byte_end":131076,"line_start":158,"line_end":158,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":131077,"byte_end":131101,"line_start":159,"line_end":159,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":131102,"byte_end":131126,"line_start":160,"line_end":160,"column_start":1,"column_end":25}},{"value":"/ let d = async { 4 };","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":131127,"byte_end":131151,"line_start":161,"line_end":161,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join4(a, b, c, d);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":131152,"byte_end":131194,"line_start":162,"line_end":162,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":131195,"byte_end":131198,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3, 4));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":131199,"byte_end":131241,"line_start":164,"line_end":164,"column_start":1,"column_end":43}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":131242,"byte_end":131251,"line_start":165,"line_end":165,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":131252,"byte_end":131259,"line_start":166,"line_end":166,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1386},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":132037,"byte_end":132042,"line_start":201,"line_end":201,"column_start":8,"column_end":13},"name":"join5","qualname":"::future::join::join5","value":"pub fn join5<Fut1, Fut2, Fut3, Fut4, Fut5>(Fut1, Fut2, Fut3, Fut4, Fut5)\n-> Join5<Fut1, Fut2, Fut3, Fut4, Fut5> where Fut1: Future, Fut2: Future,\nFut3: Future, Fut4: Future, Fut5: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":131636,"byte_end":131688,"line_start":183,"line_end":183,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":131689,"byte_end":131692,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":131693,"byte_end":131707,"line_start":185,"line_end":185,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":131708,"byte_end":131711,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":131712,"byte_end":131719,"line_start":187,"line_end":187,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":131720,"byte_end":131761,"line_start":188,"line_end":188,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":131762,"byte_end":131786,"line_start":189,"line_end":189,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":131787,"byte_end":131790,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":131791,"byte_end":131815,"line_start":191,"line_end":191,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":131816,"byte_end":131840,"line_start":192,"line_end":192,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":131841,"byte_end":131865,"line_start":193,"line_end":193,"column_start":1,"column_end":25}},{"value":"/ let d = async { 4 };","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":131866,"byte_end":131890,"line_start":194,"line_end":194,"column_start":1,"column_end":25}},{"value":"/ let e = async { 5 };","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":131891,"byte_end":131915,"line_start":195,"line_end":195,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join5(a, b, c, d, e);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":131916,"byte_end":131961,"line_start":196,"line_end":196,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":131962,"byte_end":131965,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3, 4, 5));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":131966,"byte_end":132011,"line_start":198,"line_end":198,"column_start":1,"column_end":46}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":132012,"byte_end":132021,"line_start":199,"line_end":199,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":132022,"byte_end":132029,"line_start":200,"line_end":200,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1467},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":133402,"byte_end":133409,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"name":"JoinAll","qualname":"::future::join_all::JoinAll","value":"JoinAll {  }","parent":null,"children":[{"krate":0,"index":1469}],"decl_id":null,"docs":" Future for the [`join_all`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":133281,"byte_end":133348,"line_start":25,"line_end":25,"column_start":1,"column_end":68}},{"value":"/ Future for the [`join_all`] function.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":133349,"byte_end":133390,"line_start":26,"line_end":26,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":1480},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":135504,"byte_end":135512,"line_start":102,"line_end":102,"column_start":8,"column_end":16},"name":"join_all","qualname":"::future::join_all::join_all","value":"pub fn join_all<I>(I) -> JoinAll<I::Item> where I: IntoIterator,\nI::Item: Future","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which represents a collection of the outputs of the futures\n given.","sig":null,"attributes":[{"value":"/ Creates a future which represents a collection of the outputs of the futures","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":134218,"byte_end":134298,"line_start":66,"line_end":66,"column_start":1,"column_end":81}},{"value":"/ given.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":134299,"byte_end":134309,"line_start":67,"line_end":67,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":134310,"byte_end":134313,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ The returned future will drive execution for all of its underlying futures,","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":134314,"byte_end":134393,"line_start":69,"line_end":69,"column_start":1,"column_end":80}},{"value":"/ collecting the results into a destination `Vec<T>` in the same order as they","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":134394,"byte_end":134474,"line_start":70,"line_end":70,"column_start":1,"column_end":81}},{"value":"/ were provided.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":134475,"byte_end":134493,"line_start":71,"line_end":71,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":134494,"byte_end":134497,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":134498,"byte_end":134575,"line_start":73,"line_end":73,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":134576,"byte_end":134633,"line_start":74,"line_end":74,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":134634,"byte_end":134637,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ # See Also","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":134638,"byte_end":134652,"line_start":76,"line_end":76,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":134653,"byte_end":134656,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ `join_all` will switch to the more powerful [`FuturesOrdered`] for performance","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":134657,"byte_end":134739,"line_start":78,"line_end":78,"column_start":1,"column_end":83}},{"value":"/ reasons if the number of futures is large. You may want to look into using it or","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":134740,"byte_end":134824,"line_start":79,"line_end":79,"column_start":1,"column_end":85}},{"value":"/ it's counterpart [`FuturesUnordered`][crate::stream::FuturesUnordered] directly.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":134825,"byte_end":134909,"line_start":80,"line_end":80,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":134910,"byte_end":134913,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ Some examples for additional functionality provided by these are:","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":134914,"byte_end":134983,"line_start":82,"line_end":82,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":134984,"byte_end":134987,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/  * Adding new futures to the set even after it has been started.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":134988,"byte_end":135056,"line_start":84,"line_end":84,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":135057,"byte_end":135060,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/  * Only polling the specific futures that have been woken. In cases where","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":135061,"byte_end":135138,"line_start":86,"line_end":86,"column_start":1,"column_end":78}},{"value":"/    you have a lot of futures this will result in much more efficient polling.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":135139,"byte_end":135220,"line_start":87,"line_end":87,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":135221,"byte_end":135224,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":135225,"byte_end":135239,"line_start":89,"line_end":89,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":135240,"byte_end":135243,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":135244,"byte_end":135251,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":135252,"byte_end":135293,"line_start":92,"line_end":92,"column_start":1,"column_end":42}},{"value":"/ use futures::future::join_all;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":135294,"byte_end":135328,"line_start":93,"line_end":93,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":135329,"byte_end":135332,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ async fn foo(i: u32) -> u32 { i }","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":135333,"byte_end":135370,"line_start":95,"line_end":95,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":135371,"byte_end":135374,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ let futures = vec![foo(1), foo(2), foo(3)];","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":135375,"byte_end":135422,"line_start":97,"line_end":97,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":135423,"byte_end":135426,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(join_all(futures).await, [1, 2, 3]);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":135427,"byte_end":135478,"line_start":99,"line_end":99,"column_start":1,"column_end":52}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":135479,"byte_end":135488,"line_start":100,"line_end":100,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":135489,"byte_end":135496,"line_start":101,"line_end":101,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10483},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":137965,"byte_end":137971,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"Select","qualname":"::future::select::Select","value":"Select {  }","parent":null,"children":[{"krate":0,"index":10486}],"decl_id":null,"docs":" Future for the [`select()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select()`] function.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":137827,"byte_end":137868,"line_start":7,"line_end":7,"column_start":1,"column_end":42}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":137869,"byte_end":137936,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1529},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":140235,"byte_end":140241,"line_start":84,"line_end":84,"column_start":8,"column_end":14},"name":"select","qualname":"::future::select::select","value":"pub fn select<A, B>(A, B) -> Select<A, B> where A: Future + Unpin, B: Future +\nUnpin","parent":null,"children":[],"decl_id":null,"docs":" Waits for either one of two differently-typed futures to complete.","sig":null,"attributes":[{"value":"/ Waits for either one of two differently-typed futures to complete.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":138062,"byte_end":138132,"line_start":16,"line_end":16,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":138133,"byte_end":138136,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits for either one of both","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":138137,"byte_end":138215,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ futures to complete. The returned future will finish with both the value","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":138216,"byte_end":138292,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ resolved and a future representing the completion of the other work.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":138293,"byte_end":138365,"line_start":20,"line_end":20,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":138366,"byte_end":138369,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the receiving futures and returns a","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":138370,"byte_end":138442,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/ wrapped version of them.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":138443,"byte_end":138471,"line_start":23,"line_end":23,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":138472,"byte_end":138475,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Also note that if both this and the second future have the same","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":138476,"byte_end":138543,"line_start":25,"line_end":25,"column_start":1,"column_end":68}},{"value":"/ output type you can use the `Either::factor_first` method to","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":138544,"byte_end":138608,"line_start":26,"line_end":26,"column_start":1,"column_end":65}},{"value":"/ conveniently extract out the value at the end.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":138609,"byte_end":138659,"line_start":27,"line_end":27,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":138660,"byte_end":138663,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":138664,"byte_end":138678,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":138679,"byte_end":138682,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ A simple example","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":138683,"byte_end":138703,"line_start":31,"line_end":31,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":138704,"byte_end":138707,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":138708,"byte_end":138715,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":138716,"byte_end":138757,"line_start":34,"line_end":34,"column_start":1,"column_end":42}},{"value":"/ use futures::{","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":138758,"byte_end":138776,"line_start":35,"line_end":35,"column_start":1,"column_end":19}},{"value":"/     pin_mut,","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":138777,"byte_end":138793,"line_start":36,"line_end":36,"column_start":1,"column_end":17}},{"value":"/     future::Either,","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":138794,"byte_end":138817,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/     future::self,","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":138818,"byte_end":138839,"line_start":38,"line_end":38,"column_start":1,"column_end":22}},{"value":"/ };","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":138840,"byte_end":138846,"line_start":39,"line_end":39,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":138847,"byte_end":138850,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ // These two futures have different types even though their outputs have the same type.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":138851,"byte_end":138942,"line_start":41,"line_end":41,"column_start":1,"column_end":92}},{"value":"/ let future1 = async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":138943,"byte_end":138968,"line_start":42,"line_end":42,"column_start":1,"column_end":26}},{"value":"/     future::pending::<()>().await; // will never finish","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":138969,"byte_end":139028,"line_start":43,"line_end":43,"column_start":1,"column_end":60}},{"value":"/     1","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":139029,"byte_end":139038,"line_start":44,"line_end":44,"column_start":1,"column_end":10}},{"value":"/ };","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":139039,"byte_end":139045,"line_start":45,"line_end":45,"column_start":1,"column_end":7}},{"value":"/ let future2 = async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":139046,"byte_end":139071,"line_start":46,"line_end":46,"column_start":1,"column_end":26}},{"value":"/     future::ready(2).await","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":139072,"byte_end":139102,"line_start":47,"line_end":47,"column_start":1,"column_end":31}},{"value":"/ };","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":139103,"byte_end":139109,"line_start":48,"line_end":48,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":139110,"byte_end":139113,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ // 'select' requires Future + Unpin bounds","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":139114,"byte_end":139160,"line_start":50,"line_end":50,"column_start":1,"column_end":47}},{"value":"/ pin_mut!(future1);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":139161,"byte_end":139183,"line_start":51,"line_end":51,"column_start":1,"column_end":23}},{"value":"/ pin_mut!(future2);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":139184,"byte_end":139206,"line_start":52,"line_end":52,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":139207,"byte_end":139210,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ let value = match future::select(future1, future2).await {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":139211,"byte_end":139273,"line_start":54,"line_end":54,"column_start":1,"column_end":63}},{"value":"/     Either::Left((value1, _)) => value1,  // `value1` is resolved from `future1`","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":139274,"byte_end":139358,"line_start":55,"line_end":55,"column_start":1,"column_end":85}},{"value":"/                                           // `_` represents `future2`","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":139359,"byte_end":139432,"line_start":56,"line_end":56,"column_start":1,"column_end":74}},{"value":"/     Either::Right((value2, _)) => value2, // `value2` is resolved from `future2`","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":139433,"byte_end":139517,"line_start":57,"line_end":57,"column_start":1,"column_end":85}},{"value":"/                                           // `_` represents `future1`","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":139518,"byte_end":139591,"line_start":58,"line_end":58,"column_start":1,"column_end":74}},{"value":"/ };","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":139592,"byte_end":139598,"line_start":59,"line_end":59,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":139599,"byte_end":139602,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ assert!(value == 2);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":139603,"byte_end":139627,"line_start":61,"line_end":61,"column_start":1,"column_end":25}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":139628,"byte_end":139637,"line_start":62,"line_end":62,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":139638,"byte_end":139645,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":139646,"byte_end":139649,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ A more complex example","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":139650,"byte_end":139676,"line_start":65,"line_end":65,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":139677,"byte_end":139680,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":139681,"byte_end":139688,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/ use futures::future::{self, Either, Future, FutureExt};","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":139689,"byte_end":139748,"line_start":68,"line_end":68,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":139749,"byte_end":139752,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ // A poor-man's join implemented on top of select","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":139753,"byte_end":139806,"line_start":70,"line_end":70,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":139807,"byte_end":139810,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ fn join<A, B>(a: A, b: B) -> impl Future<Output=(A::Output, B::Output)>","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":139811,"byte_end":139886,"line_start":72,"line_end":72,"column_start":1,"column_end":76}},{"value":"/     where A: Future + Unpin,","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":139887,"byte_end":139919,"line_start":73,"line_end":73,"column_start":1,"column_end":33}},{"value":"/           B: Future + Unpin,","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":139920,"byte_end":139952,"line_start":74,"line_end":74,"column_start":1,"column_end":33}},{"value":"/ {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":139953,"byte_end":139958,"line_start":75,"line_end":75,"column_start":1,"column_end":6}},{"value":"/     future::select(a, b).then(|either| {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":139959,"byte_end":140003,"line_start":76,"line_end":76,"column_start":1,"column_end":45}},{"value":"/         match either {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":140004,"byte_end":140030,"line_start":77,"line_end":77,"column_start":1,"column_end":27}},{"value":"/             Either::Left((x, b)) => b.map(move |y| (x, y)).left_future(),","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":140031,"byte_end":140108,"line_start":78,"line_end":78,"column_start":1,"column_end":78}},{"value":"/             Either::Right((y, a)) => a.map(move |x| (x, y)).right_future(),","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":140109,"byte_end":140188,"line_start":79,"line_end":79,"column_start":1,"column_end":80}},{"value":"/         }","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":140189,"byte_end":140202,"line_start":80,"line_end":80,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":140203,"byte_end":140213,"line_start":81,"line_end":81,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":140214,"byte_end":140219,"line_start":82,"line_end":82,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":140220,"byte_end":140227,"line_start":83,"line_end":83,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10491},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_all.rs","byte_start":141698,"byte_end":141707,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"SelectAll","qualname":"::future::select_all::SelectAll","value":"SelectAll {  }","parent":null,"children":[{"krate":0,"index":10493}],"decl_id":null,"docs":" Future for the [`select_all`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_all`] function.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_all.rs","byte_start":141558,"byte_end":141601,"line_start":10,"line_end":10,"column_start":1,"column_end":44}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_all.rs","byte_start":141619,"byte_end":141686,"line_start":12,"line_end":12,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1579},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_all.rs","byte_start":142487,"byte_end":142497,"line_start":34,"line_end":34,"column_start":8,"column_end":18},"name":"select_all","qualname":"::future::select_all::select_all","value":"pub fn select_all<I>(I) -> SelectAll<I::Item> where I: IntoIterator,\nI::Item: Future + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future which will select over a list of futures.","sig":null,"attributes":[{"value":"/ Creates a new future which will select over a list of futures.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_all.rs","byte_start":141785,"byte_end":141851,"line_start":19,"line_end":19,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_all.rs","byte_start":141852,"byte_end":141855,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The returned future will wait for any future within `iter` to be ready. Upon","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_all.rs","byte_start":141856,"byte_end":141936,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ completion the item resolved will be returned, along with the index of the","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_all.rs","byte_start":141937,"byte_end":142015,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ future that was ready and the list of all the remaining futures.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_all.rs","byte_start":142016,"byte_end":142084,"line_start":23,"line_end":23,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_all.rs","byte_start":142085,"byte_end":142088,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ There are no guarantees provided on the order of the list with the remaining","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_all.rs","byte_start":142089,"byte_end":142169,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ futures. They might be swapped around, reversed, or completely random.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_all.rs","byte_start":142170,"byte_end":142244,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_all.rs","byte_start":142245,"byte_end":142248,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_all.rs","byte_start":142249,"byte_end":142326,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_all.rs","byte_start":142327,"byte_end":142384,"line_start":29,"line_end":29,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_all.rs","byte_start":142385,"byte_end":142388,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_all.rs","byte_start":142389,"byte_end":142401,"line_start":31,"line_end":31,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_all.rs","byte_start":142402,"byte_end":142405,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This function will panic if the iterator specified contains no items.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_all.rs","byte_start":142406,"byte_end":142479,"line_start":33,"line_end":33,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1583},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_all.rs","byte_start":142878,"byte_end":142888,"line_start":46,"line_end":46,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<SelectAll<Fut>>::into_inner","value":"pub fn into_inner(Self) -> Vec<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying futures.\n","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying futures.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_all.rs","byte_start":142803,"byte_end":142866,"line_start":45,"line_end":45,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":10567},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":146649,"byte_end":146656,"line_start":94,"line_end":94,"column_start":6,"column_end":13},"name":"TryJoin","qualname":"::future::try_join::TryJoin","value":"TryJoin {  }","parent":null,"children":[{"krate":0,"index":10570},{"krate":0,"index":10571}],"decl_id":null,"docs":" Future for the [`try_join`](try_join()) function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10612},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":146726,"byte_end":146734,"line_start":97,"line_end":97,"column_start":6,"column_end":14},"name":"TryJoin3","qualname":"::future::try_join::TryJoin3","value":"TryJoin3 {  }","parent":null,"children":[{"krate":0,"index":10616},{"krate":0,"index":10617},{"krate":0,"index":10618}],"decl_id":null,"docs":" Future for the [`try_join3`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10669},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":146810,"byte_end":146818,"line_start":100,"line_end":100,"column_start":6,"column_end":14},"name":"TryJoin4","qualname":"::future::try_join::TryJoin4","value":"TryJoin4 {  }","parent":null,"children":[{"krate":0,"index":10674},{"krate":0,"index":10675},{"krate":0,"index":10676},{"krate":0,"index":10677}],"decl_id":null,"docs":" Future for the [`try_join4`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10738},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":146900,"byte_end":146908,"line_start":103,"line_end":103,"column_start":6,"column_end":14},"name":"TryJoin5","qualname":"::future::try_join::TryJoin5","value":"TryJoin5 {  }","parent":null,"children":[{"krate":0,"index":10744},{"krate":0,"index":10745},{"krate":0,"index":10746},{"krate":0,"index":10747},{"krate":0,"index":10748}],"decl_id":null,"docs":" Future for the [`try_join5`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1635},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":148181,"byte_end":148189,"line_start":148,"line_end":148,"column_start":8,"column_end":16},"name":"try_join","qualname":"::future::try_join::try_join","value":"pub fn try_join<Fut1, Fut2>(Fut1, Fut2) -> TryJoin<Fut1, Fut2> where\nFut1: TryFuture, Fut2: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Joins the result of two futures, waiting for them both to complete or\n for one to produce an error.","sig":null,"attributes":[{"value":"/ Joins the result of two futures, waiting for them both to complete or","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":146946,"byte_end":147019,"line_start":106,"line_end":106,"column_start":1,"column_end":74}},{"value":"/ for one to produce an error.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":147020,"byte_end":147052,"line_start":107,"line_end":107,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":147053,"byte_end":147056,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits both futures to","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":147057,"byte_end":147128,"line_start":109,"line_end":109,"column_start":1,"column_end":72}},{"value":"/ complete. If successful, the returned future will finish with a tuple of","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":147129,"byte_end":147205,"line_start":110,"line_end":110,"column_start":1,"column_end":77}},{"value":"/ both results. If unsuccessful, it will complete with the first error","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":147206,"byte_end":147278,"line_start":111,"line_end":111,"column_start":1,"column_end":73}},{"value":"/ encountered.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":147279,"byte_end":147295,"line_start":112,"line_end":112,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":147296,"byte_end":147299,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the passed futures and returns a","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":147300,"byte_end":147369,"line_start":114,"line_end":114,"column_start":1,"column_end":70}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":147370,"byte_end":147396,"line_start":115,"line_end":115,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":147397,"byte_end":147400,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":147401,"byte_end":147415,"line_start":117,"line_end":117,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":147416,"byte_end":147419,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ When used on multiple futures that return [`Ok`], `try_join` will return","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":147420,"byte_end":147496,"line_start":119,"line_end":119,"column_start":1,"column_end":77}},{"value":"/ [`Ok`] of a tuple of the values:","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":147497,"byte_end":147533,"line_start":120,"line_end":120,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":147534,"byte_end":147537,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":147538,"byte_end":147545,"line_start":122,"line_end":122,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":147546,"byte_end":147587,"line_start":123,"line_end":123,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":147588,"byte_end":147612,"line_start":124,"line_end":124,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":147613,"byte_end":147616,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":147617,"byte_end":147662,"line_start":126,"line_end":126,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":147663,"byte_end":147708,"line_start":127,"line_end":127,"column_start":1,"column_end":46}},{"value":"/ let pair = future::try_join(a, b);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":147709,"byte_end":147747,"line_start":128,"line_end":128,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":147748,"byte_end":147751,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, Ok((1, 2)));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":147752,"byte_end":147791,"line_start":130,"line_end":130,"column_start":1,"column_end":40}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":147792,"byte_end":147801,"line_start":131,"line_end":131,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":147802,"byte_end":147809,"line_start":132,"line_end":132,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":147810,"byte_end":147813,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ If one of the futures resolves to an error, `try_join` will return","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":147814,"byte_end":147884,"line_start":134,"line_end":134,"column_start":1,"column_end":71}},{"value":"/ that error:","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":147885,"byte_end":147900,"line_start":135,"line_end":135,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":147901,"byte_end":147904,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":147905,"byte_end":147912,"line_start":137,"line_end":137,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":147913,"byte_end":147954,"line_start":138,"line_end":138,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":147955,"byte_end":147979,"line_start":139,"line_end":139,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":147980,"byte_end":147983,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":147984,"byte_end":148029,"line_start":141,"line_end":141,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Err::<i32, i32>(2));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":148030,"byte_end":148076,"line_start":142,"line_end":142,"column_start":1,"column_end":47}},{"value":"/ let pair = future::try_join(a, b);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":148077,"byte_end":148115,"line_start":143,"line_end":143,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":148116,"byte_end":148119,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, Err(2));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":148120,"byte_end":148155,"line_start":145,"line_end":145,"column_start":1,"column_end":36}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":148156,"byte_end":148165,"line_start":146,"line_end":146,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":148166,"byte_end":148173,"line_start":147,"line_end":147,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1638},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":148845,"byte_end":148854,"line_start":172,"line_end":172,"column_start":8,"column_end":17},"name":"try_join3","qualname":"::future::try_join::try_join3","value":"pub fn try_join3<Fut1, Fut2, Fut3>(Fut1, Fut2, Fut3)\n-> TryJoin3<Fut1, Fut2, Fut3> where Fut1: TryFuture, Fut2: TryFuture<Error =\nFut1::Error>, Fut3: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":148427,"byte_end":148487,"line_start":156,"line_end":156,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":148488,"byte_end":148491,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":148492,"byte_end":148506,"line_start":158,"line_end":158,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":148507,"byte_end":148510,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":148511,"byte_end":148518,"line_start":160,"line_end":160,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":148519,"byte_end":148560,"line_start":161,"line_end":161,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":148561,"byte_end":148585,"line_start":162,"line_end":162,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":148586,"byte_end":148589,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":148590,"byte_end":148635,"line_start":164,"line_end":164,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":148636,"byte_end":148681,"line_start":165,"line_end":165,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":148682,"byte_end":148727,"line_start":166,"line_end":166,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join3(a, b, c);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":148728,"byte_end":148771,"line_start":167,"line_end":167,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":148772,"byte_end":148775,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3)));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":148776,"byte_end":148819,"line_start":169,"line_end":169,"column_start":1,"column_end":44}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":148820,"byte_end":148829,"line_start":170,"line_end":170,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":148830,"byte_end":148837,"line_start":171,"line_end":171,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1642},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":149682,"byte_end":149691,"line_start":204,"line_end":204,"column_start":8,"column_end":17},"name":"try_join4","qualname":"::future::try_join::try_join4","value":"pub fn try_join4<Fut1, Fut2, Fut3, Fut4>(Fut1, Fut2, Fut3, Fut4)\n-> TryJoin4<Fut1, Fut2, Fut3, Fut4> where Fut1: TryFuture,\nFut2: TryFuture<Error = Fut1::Error>, Fut3: TryFuture<Error = Fut1::Error>,\nFut4: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":149212,"byte_end":149272,"line_start":187,"line_end":187,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":149273,"byte_end":149276,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":149277,"byte_end":149291,"line_start":189,"line_end":189,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":149292,"byte_end":149295,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":149296,"byte_end":149303,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":149304,"byte_end":149345,"line_start":192,"line_end":192,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":149346,"byte_end":149370,"line_start":193,"line_end":193,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":149371,"byte_end":149374,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":149375,"byte_end":149420,"line_start":195,"line_end":195,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":149421,"byte_end":149466,"line_start":196,"line_end":196,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":149467,"byte_end":149512,"line_start":197,"line_end":197,"column_start":1,"column_end":46}},{"value":"/ let d = future::ready(Ok::<i32, i32>(4));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":149513,"byte_end":149558,"line_start":198,"line_end":198,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join4(a, b, c, d);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":149559,"byte_end":149605,"line_start":199,"line_end":199,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":149606,"byte_end":149609,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3, 4)));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":149610,"byte_end":149656,"line_start":201,"line_end":201,"column_start":1,"column_end":47}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":149657,"byte_end":149666,"line_start":202,"line_end":202,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":149667,"byte_end":149674,"line_start":203,"line_end":203,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1647},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":150663,"byte_end":150672,"line_start":239,"line_end":239,"column_start":8,"column_end":17},"name":"try_join5","qualname":"::future::try_join::try_join5","value":"pub fn try_join5<Fut1, Fut2, Fut3, Fut4, Fut5>(Fut1, Fut2, Fut3, Fut4, Fut5)\n-> TryJoin5<Fut1, Fut2, Fut3, Fut4, Fut5> where Fut1: TryFuture,\nFut2: TryFuture<Error = Fut1::Error>, Fut3: TryFuture<Error = Fut1::Error>,\nFut4: TryFuture<Error = Fut1::Error>, Fut5: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":150141,"byte_end":150201,"line_start":221,"line_end":221,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":150202,"byte_end":150205,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":150206,"byte_end":150220,"line_start":223,"line_end":223,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":150221,"byte_end":150224,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":150225,"byte_end":150232,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":150233,"byte_end":150274,"line_start":226,"line_end":226,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":150275,"byte_end":150299,"line_start":227,"line_end":227,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":150300,"byte_end":150303,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":150304,"byte_end":150349,"line_start":229,"line_end":229,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":150350,"byte_end":150395,"line_start":230,"line_end":230,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":150396,"byte_end":150441,"line_start":231,"line_end":231,"column_start":1,"column_end":46}},{"value":"/ let d = future::ready(Ok::<i32, i32>(4));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":150442,"byte_end":150487,"line_start":232,"line_end":232,"column_start":1,"column_end":46}},{"value":"/ let e = future::ready(Ok::<i32, i32>(5));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":150488,"byte_end":150533,"line_start":233,"line_end":233,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join5(a, b, c, d, e);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":150534,"byte_end":150583,"line_start":234,"line_end":234,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":150584,"byte_end":150587,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3, 4, 5)));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":150588,"byte_end":150637,"line_start":236,"line_end":236,"column_start":1,"column_end":50}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":150638,"byte_end":150647,"line_start":237,"line_end":237,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":150648,"byte_end":150655,"line_start":238,"line_end":238,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1730},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":152164,"byte_end":152174,"line_start":30,"line_end":30,"column_start":12,"column_end":22},"name":"TryJoinAll","qualname":"::future::try_join_all::TryJoinAll","value":"TryJoinAll {  }","parent":null,"children":[{"krate":0,"index":1732}],"decl_id":null,"docs":" Future for the [`try_join_all`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_join_all`] function.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":152039,"byte_end":152084,"line_start":28,"line_end":28,"column_start":1,"column_end":46}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":152085,"byte_end":152152,"line_start":29,"line_end":29,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1736},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":153767,"byte_end":153779,"line_start":86,"line_end":86,"column_start":8,"column_end":20},"name":"try_join_all","qualname":"::future::try_join_all::try_join_all","value":"pub fn try_join_all<I>(I) -> TryJoinAll<I::Item> where I: IntoIterator,\nI::Item: TryFuture","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which represents either a collection of the results of the\n futures given or an error.","sig":null,"attributes":[{"value":"/ Creates a future which represents either a collection of the results of the","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":152518,"byte_end":152597,"line_start":48,"line_end":48,"column_start":1,"column_end":80}},{"value":"/ futures given or an error.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":152598,"byte_end":152628,"line_start":49,"line_end":49,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":152629,"byte_end":152632,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ The returned future will drive execution for all of its underlying futures,","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":152633,"byte_end":152712,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/ collecting the results into a destination `Vec<T>` in the same order as they","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":152713,"byte_end":152793,"line_start":52,"line_end":52,"column_start":1,"column_end":81}},{"value":"/ were provided.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":152794,"byte_end":152812,"line_start":53,"line_end":53,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":152813,"byte_end":152816,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ If any future returns an error then all other futures will be canceled and","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":152817,"byte_end":152895,"line_start":55,"line_end":55,"column_start":1,"column_end":79}},{"value":"/ an error will be returned immediately. If all futures complete successfully,","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":152896,"byte_end":152976,"line_start":56,"line_end":56,"column_start":1,"column_end":81}},{"value":"/ however, then the returned future will succeed with a `Vec` of all the","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":152977,"byte_end":153051,"line_start":57,"line_end":57,"column_start":1,"column_end":75}},{"value":"/ successful results.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":153052,"byte_end":153075,"line_start":58,"line_end":58,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":153076,"byte_end":153079,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":153080,"byte_end":153157,"line_start":60,"line_end":60,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":153158,"byte_end":153215,"line_start":61,"line_end":61,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":153216,"byte_end":153219,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":153220,"byte_end":153234,"line_start":63,"line_end":63,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":153235,"byte_end":153238,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":153239,"byte_end":153246,"line_start":65,"line_end":65,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":153247,"byte_end":153288,"line_start":66,"line_end":66,"column_start":1,"column_end":42}},{"value":"/ use futures::future::{self, try_join_all};","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":153289,"byte_end":153335,"line_start":67,"line_end":67,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":153336,"byte_end":153339,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ let futures = vec![","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":153340,"byte_end":153363,"line_start":69,"line_end":69,"column_start":1,"column_end":24}},{"value":"/     future::ok::<u32, u32>(1),","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":153364,"byte_end":153398,"line_start":70,"line_end":70,"column_start":1,"column_end":35}},{"value":"/     future::ok::<u32, u32>(2),","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":153399,"byte_end":153433,"line_start":71,"line_end":71,"column_start":1,"column_end":35}},{"value":"/     future::ok::<u32, u32>(3),","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":153434,"byte_end":153468,"line_start":72,"line_end":72,"column_start":1,"column_end":35}},{"value":"/ ];","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":153469,"byte_end":153475,"line_start":73,"line_end":73,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":153476,"byte_end":153479,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(try_join_all(futures).await, Ok(vec![1, 2, 3]));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":153480,"byte_end":153543,"line_start":75,"line_end":75,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":153544,"byte_end":153547,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ let futures = vec![","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":153548,"byte_end":153571,"line_start":77,"line_end":77,"column_start":1,"column_end":24}},{"value":"/     future::ok::<u32, u32>(1),","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":153572,"byte_end":153606,"line_start":78,"line_end":78,"column_start":1,"column_end":35}},{"value":"/     future::err::<u32, u32>(2),","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":153607,"byte_end":153642,"line_start":79,"line_end":79,"column_start":1,"column_end":36}},{"value":"/     future::ok::<u32, u32>(3),","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":153643,"byte_end":153677,"line_start":80,"line_end":80,"column_start":1,"column_end":35}},{"value":"/ ];","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":153678,"byte_end":153684,"line_start":81,"line_end":81,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":153685,"byte_end":153688,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(try_join_all(futures).await, Err(2));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":153689,"byte_end":153741,"line_start":83,"line_end":83,"column_start":1,"column_end":53}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":153742,"byte_end":153751,"line_start":84,"line_end":84,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":153752,"byte_end":153759,"line_start":85,"line_end":85,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10819},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":155677,"byte_end":155686,"line_start":9,"line_end":9,"column_start":12,"column_end":21},"name":"TrySelect","qualname":"::future::try_select::TrySelect","value":"TrySelect {  }","parent":null,"children":[{"krate":0,"index":10822}],"decl_id":null,"docs":" Future for the [`try_select()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_select()`] function.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":155535,"byte_end":155580,"line_start":6,"line_end":6,"column_start":1,"column_end":46}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":155581,"byte_end":155648,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1782},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":157271,"byte_end":157281,"line_start":50,"line_end":50,"column_start":8,"column_end":18},"name":"try_select","qualname":"::future::try_select::try_select","value":"pub fn try_select<A, B>(A, B) -> TrySelect<A, B> where A: TryFuture + Unpin,\nB: TryFuture + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Waits for either one of two differently-typed futures to complete.","sig":null,"attributes":[{"value":"/ Waits for either one of two differently-typed futures to complete.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":155780,"byte_end":155850,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":155851,"byte_end":155854,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits for either one of both","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":155855,"byte_end":155933,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ futures to complete. The returned future will finish with both the value","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":155934,"byte_end":156010,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ resolved and a future representing the completion of the other work.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":156011,"byte_end":156083,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":156084,"byte_end":156087,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the receiving futures and returns a","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":156088,"byte_end":156160,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ wrapped version of them.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":156161,"byte_end":156189,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":156190,"byte_end":156193,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Also note that if both this and the second future have the same","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":156194,"byte_end":156261,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ success/error type you can use the `Either::factor_first` method to","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":156262,"byte_end":156333,"line_start":25,"line_end":25,"column_start":1,"column_end":72}},{"value":"/ conveniently extract out the value at the end.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":156334,"byte_end":156384,"line_start":26,"line_end":26,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":156385,"byte_end":156388,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":156389,"byte_end":156403,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":156404,"byte_end":156407,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":156408,"byte_end":156415,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ use futures::future::{self, Either, Future, FutureExt, TryFuture, TryFutureExt};","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":156416,"byte_end":156500,"line_start":31,"line_end":31,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":156501,"byte_end":156504,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ // A poor-man's try_join implemented on top of select","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":156505,"byte_end":156562,"line_start":33,"line_end":33,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":156563,"byte_end":156566,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ fn try_join<A, B, E>(a: A, b: B) -> impl TryFuture<Ok=(A::Ok, B::Ok), Error=E>","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":156567,"byte_end":156649,"line_start":35,"line_end":35,"column_start":1,"column_end":83}},{"value":"/      where A: TryFuture<Error = E> + Unpin + 'static,","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":156650,"byte_end":156707,"line_start":36,"line_end":36,"column_start":1,"column_end":58}},{"value":"/            B: TryFuture<Error = E> + Unpin + 'static,","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":156708,"byte_end":156765,"line_start":37,"line_end":37,"column_start":1,"column_end":58}},{"value":"/            E: 'static,","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":156766,"byte_end":156792,"line_start":38,"line_end":38,"column_start":1,"column_end":27}},{"value":"/ {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":156793,"byte_end":156798,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/     future::try_select(a, b).then(|res| -> Box<dyn Future<Output = Result<_, _>> + Unpin> {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":156799,"byte_end":156894,"line_start":40,"line_end":40,"column_start":1,"column_end":96}},{"value":"/         match res {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":156895,"byte_end":156918,"line_start":41,"line_end":41,"column_start":1,"column_end":24}},{"value":"/             Ok(Either::Left((x, b))) => Box::new(b.map_ok(move |y| (x, y))),","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":156919,"byte_end":156999,"line_start":42,"line_end":42,"column_start":1,"column_end":81}},{"value":"/             Ok(Either::Right((y, a))) => Box::new(a.map_ok(move |x| (x, y))),","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":157000,"byte_end":157081,"line_start":43,"line_end":43,"column_start":1,"column_end":82}},{"value":"/             Err(Either::Left((e, _))) => Box::new(future::err(e)),","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":157082,"byte_end":157152,"line_start":44,"line_end":44,"column_start":1,"column_end":71}},{"value":"/             Err(Either::Right((e, _))) => Box::new(future::err(e)),","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":157153,"byte_end":157224,"line_start":45,"line_end":45,"column_start":1,"column_end":72}},{"value":"/         }","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":157225,"byte_end":157238,"line_start":46,"line_end":46,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":157239,"byte_end":157249,"line_start":47,"line_end":47,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":157250,"byte_end":157255,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":157256,"byte_end":157263,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10827},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_ok.rs","byte_start":158912,"byte_end":158920,"line_start":13,"line_end":13,"column_start":12,"column_end":20},"name":"SelectOk","qualname":"::future::select_ok::SelectOk","value":"SelectOk {  }","parent":null,"children":[{"krate":0,"index":10829}],"decl_id":null,"docs":" Future for the [`select_ok`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_ok`] function.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_ok.rs","byte_start":158773,"byte_end":158815,"line_start":10,"line_end":10,"column_start":1,"column_end":43}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_ok.rs","byte_start":158833,"byte_end":158900,"line_start":12,"line_end":12,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1832},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_ok.rs","byte_start":159642,"byte_end":159651,"line_start":32,"line_end":32,"column_start":8,"column_end":17},"name":"select_ok","qualname":"::future::select_ok::select_ok","value":"pub fn select_ok<I>(I) -> SelectOk<I::Item> where I: IntoIterator,\nI::Item: TryFuture + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future which will select the first successful future over a list of futures.","sig":null,"attributes":[{"value":"/ Creates a new future which will select the first successful future over a list of futures.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_ok.rs","byte_start":158997,"byte_end":159091,"line_start":19,"line_end":19,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_ok.rs","byte_start":159092,"byte_end":159095,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The returned future will wait for any future within `iter` to be ready and Ok. Unlike","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_ok.rs","byte_start":159096,"byte_end":159185,"line_start":21,"line_end":21,"column_start":1,"column_end":90}},{"value":"/ `select_all`, this will only return the first successful completion, or the last","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_ok.rs","byte_start":159186,"byte_end":159270,"line_start":22,"line_end":22,"column_start":1,"column_end":85}},{"value":"/ failure. This is useful in contexts where any success is desired and failures","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_ok.rs","byte_start":159271,"byte_end":159352,"line_start":23,"line_end":23,"column_start":1,"column_end":82}},{"value":"/ are ignored, unless all the futures fail.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_ok.rs","byte_start":159353,"byte_end":159398,"line_start":24,"line_end":24,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_ok.rs","byte_start":159399,"byte_end":159402,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/  This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_ok.rs","byte_start":159403,"byte_end":159481,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_ok.rs","byte_start":159482,"byte_end":159539,"line_start":27,"line_end":27,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_ok.rs","byte_start":159540,"byte_end":159543,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_ok.rs","byte_start":159544,"byte_end":159556,"line_start":29,"line_end":29,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_ok.rs","byte_start":159557,"byte_end":159560,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ This function will panic if the iterator specified contains no items.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_ok.rs","byte_start":159561,"byte_end":159634,"line_start":31,"line_end":31,"column_start":1,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10836},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":162394,"byte_end":162398,"line_start":30,"line_end":30,"column_start":5,"column_end":9},"name":"Left","qualname":"::future::either::Either::Left","value":"Either::Left(A)","parent":{"krate":0,"index":10833},"children":[],"decl_id":null,"docs":" First branch of the type\n","sig":null,"attributes":[{"value":"/ First branch of the type","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":162361,"byte_end":162389,"line_start":29,"line_end":29,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10839},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":162454,"byte_end":162459,"line_start":32,"line_end":32,"column_start":5,"column_end":10},"name":"Right","qualname":"::future::either::Either::Right","value":"Either::Right(B)","parent":{"krate":0,"index":10833},"children":[],"decl_id":null,"docs":" Second branch of the type\n","sig":null,"attributes":[{"value":"/ Second branch of the type","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":162420,"byte_end":162449,"line_start":31,"line_end":31,"column_start":5,"column_end":34}}]},{"kind":"Enum","id":{"krate":0,"index":10833},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":162342,"byte_end":162348,"line_start":28,"line_end":28,"column_start":10,"column_end":16},"name":"Either","qualname":"::future::either::Either","value":"pub enum Either<A, B> { Left(A), Right(B), }","parent":null,"children":[{"krate":0,"index":10836},{"krate":0,"index":10839}],"decl_id":null,"docs":" Combines two different futures, streams, or sinks having the same associated types into a single type.","sig":null,"attributes":[{"value":"/ Combines two different futures, streams, or sinks having the same associated types into a single type.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":161819,"byte_end":161925,"line_start":8,"line_end":8,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":161926,"byte_end":161929,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This is useful when conditionally choosing between two distinct future types:","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":161930,"byte_end":162011,"line_start":10,"line_end":10,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":162012,"byte_end":162015,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":162016,"byte_end":162027,"line_start":12,"line_end":12,"column_start":1,"column_end":12}},{"value":"/ use futures::future::Either;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":162028,"byte_end":162060,"line_start":13,"line_end":13,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":162061,"byte_end":162064,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":162065,"byte_end":162106,"line_start":15,"line_end":15,"column_start":1,"column_end":42}},{"value":"/ let cond = true;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":162107,"byte_end":162127,"line_start":16,"line_end":16,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":162128,"byte_end":162131,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ let fut = if cond {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":162132,"byte_end":162155,"line_start":18,"line_end":18,"column_start":1,"column_end":24}},{"value":"/     Either::Left(async move { 12 })","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":162156,"byte_end":162195,"line_start":19,"line_end":19,"column_start":1,"column_end":40}},{"value":"/ } else {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":162196,"byte_end":162208,"line_start":20,"line_end":20,"column_start":1,"column_end":13}},{"value":"/     Either::Right(async move { 44 })","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":162209,"byte_end":162249,"line_start":21,"line_end":21,"column_start":1,"column_end":41}},{"value":"/ };","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":162250,"byte_end":162256,"line_start":22,"line_end":22,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":162257,"byte_end":162260,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(fut.await, 12);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":162261,"byte_end":162291,"line_start":24,"line_end":24,"column_start":1,"column_end":31}},{"value":"/ # })","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":162292,"byte_end":162300,"line_start":25,"line_end":25,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":162301,"byte_end":162308,"line_start":26,"line_end":26,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1886},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":163013,"byte_end":163025,"line_start":50,"line_end":50,"column_start":12,"column_end":24},"name":"factor_first","qualname":"<Either<(T, A), (T, B)>>::factor_first","value":"pub fn factor_first(Self) -> (T, Either<A, B>)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":162865,"byte_end":162923,"line_start":47,"line_end":47,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":162928,"byte_end":162931,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the first element of the pairs.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":162936,"byte_end":163001,"line_start":49,"line_end":49,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1891},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":163405,"byte_end":163418,"line_start":62,"line_end":62,"column_start":12,"column_end":25},"name":"factor_second","qualname":"<Either<(A, T), (B, T)>>::factor_second","value":"pub fn factor_second(Self) -> (Either<A, B>, T)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":163256,"byte_end":163314,"line_start":59,"line_end":59,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":163319,"byte_end":163322,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the second element of the pairs.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":163327,"byte_end":163393,"line_start":61,"line_end":61,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1894},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":163706,"byte_end":163716,"line_start":72,"line_end":72,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Either<T, T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Extract the value of an either over two equivalent types.\n","sig":null,"attributes":[{"value":"/ Extract the value of an either over two equivalent types.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":163633,"byte_end":163694,"line_start":71,"line_end":71,"column_start":5,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":1943},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/abortable.rs","byte_start":170320,"byte_end":170329,"line_start":12,"line_end":12,"column_start":8,"column_end":17},"name":"abortable","qualname":"::future::abortable::abortable","value":"pub fn abortable<Fut>(Fut) -> (Abortable<Fut>, AbortHandle) where Fut: Future","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Abortable` future and an `AbortHandle` which can be used to stop it.","sig":null,"attributes":[{"value":"/ Creates a new `Abortable` future and an `AbortHandle` which can be used to stop it.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/abortable.rs","byte_start":169950,"byte_end":170037,"line_start":5,"line_end":5,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/abortable.rs","byte_start":170038,"byte_end":170041,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This function is a convenient (but less flexible) alternative to calling","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/abortable.rs","byte_start":170042,"byte_end":170118,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ `AbortHandle::new` and `Abortable::new` manually.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/abortable.rs","byte_start":170119,"byte_end":170172,"line_start":8,"line_end":8,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/abortable.rs","byte_start":170173,"byte_end":170176,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/abortable.rs","byte_start":170177,"byte_end":170254,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/abortable.rs","byte_start":170255,"byte_end":170312,"line_start":11,"line_end":11,"column_start":1,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":1977},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","parent":null,"children":[{"krate":0,"index":1978},{"krate":0,"index":1979},{"krate":0,"index":1982},{"krate":0,"index":1985},{"krate":0,"index":1986},{"krate":0,"index":1989},{"krate":0,"index":1992},{"krate":0,"index":1995},{"krate":0,"index":4229},{"krate":0,"index":4230},{"krate":0,"index":4233},{"krate":0,"index":4236},{"krate":0,"index":4239},{"krate":0,"index":4242},{"krate":0,"index":4245},{"krate":0,"index":4248},{"krate":0,"index":4251},{"krate":0,"index":4254},{"krate":0,"index":4257},{"krate":0,"index":4260},{"krate":0,"index":4263},{"krate":0,"index":4266},{"krate":0,"index":4269},{"krate":0,"index":4272},{"krate":0,"index":4275},{"krate":0,"index":4278},{"krate":0,"index":4281},{"krate":0,"index":4284},{"krate":0,"index":4287},{"krate":0,"index":4290},{"krate":0,"index":4293},{"krate":0,"index":4296},{"krate":0,"index":4299},{"krate":0,"index":4302},{"krate":0,"index":4305},{"krate":0,"index":4308},{"krate":0,"index":4311},{"krate":0,"index":4314},{"krate":0,"index":4317},{"krate":0,"index":4320},{"krate":0,"index":4323},{"krate":0,"index":4326},{"krate":0,"index":4329},{"krate":0,"index":4332},{"krate":0,"index":4335},{"krate":0,"index":4338},{"krate":0,"index":4339},{"krate":0,"index":4342},{"krate":0,"index":4345},{"krate":0,"index":4348},{"krate":0,"index":4349},{"krate":0,"index":4350},{"krate":0,"index":4352},{"krate":0,"index":4355},{"krate":0,"index":4358},{"krate":0,"index":5544},{"krate":0,"index":5545},{"krate":0,"index":5548},{"krate":0,"index":5551},{"krate":0,"index":5554},{"krate":0,"index":5557},{"krate":0,"index":5560},{"krate":0,"index":5563},{"krate":0,"index":5566},{"krate":0,"index":5569},{"krate":0,"index":5572},{"krate":0,"index":5575},{"krate":0,"index":5578},{"krate":0,"index":5581},{"krate":0,"index":5584},{"krate":0,"index":5587},{"krate":0,"index":5590},{"krate":0,"index":5593},{"krate":0,"index":5596},{"krate":0,"index":5599},{"krate":0,"index":5602},{"krate":0,"index":5605},{"krate":0,"index":5608},{"krate":0,"index":5609},{"krate":0,"index":5612},{"krate":0,"index":5615},{"krate":0,"index":5618},{"krate":0,"index":5619},{"krate":0,"index":5622},{"krate":0,"index":5623},{"krate":0,"index":5625},{"krate":0,"index":5651},{"krate":0,"index":5652},{"krate":0,"index":5655},{"krate":0,"index":5658},{"krate":0,"index":5691},{"krate":0,"index":5692},{"krate":0,"index":5695},{"krate":0,"index":5698},{"krate":0,"index":5735},{"krate":0,"index":5736},{"krate":0,"index":5739},{"krate":0,"index":5742},{"krate":0,"index":5781},{"krate":0,"index":5782},{"krate":0,"index":5785},{"krate":0,"index":5788},{"krate":0,"index":5831},{"krate":0,"index":5832},{"krate":0,"index":5835},{"krate":0,"index":5838},{"krate":0,"index":5877},{"krate":0,"index":5878},{"krate":0,"index":5881},{"krate":0,"index":5884},{"krate":0,"index":5920},{"krate":0,"index":5921},{"krate":0,"index":5924},{"krate":0,"index":5927},{"krate":0,"index":5955},{"krate":0,"index":5956},{"krate":0,"index":5959},{"krate":0,"index":5962},{"krate":0,"index":6016},{"krate":0,"index":6017},{"krate":0,"index":6020},{"krate":0,"index":6023},{"krate":0,"index":6098},{"krate":0,"index":6099},{"krate":0,"index":6102},{"krate":0,"index":6105},{"krate":0,"index":6108},{"krate":0,"index":6167},{"krate":0,"index":6168},{"krate":0,"index":6171},{"krate":0,"index":6174},{"krate":0,"index":6281},{"krate":0,"index":6284},{"krate":0,"index":6687},{"krate":0,"index":6690},{"krate":0,"index":6812},{"krate":0,"index":6813},{"krate":0,"index":6816},{"krate":0,"index":6819},{"krate":0,"index":6835},{"krate":0,"index":6836},{"krate":0,"index":6839},{"krate":0,"index":6842},{"krate":0,"index":6845},{"krate":0,"index":6846},{"krate":0,"index":6848},{"krate":0,"index":6851}],"decl_id":null,"docs":" Asynchronous streams.","sig":null,"attributes":[{"value":"/ Asynchronous streams.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":170581,"byte_end":170606,"line_start":1,"line_end":1,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":170607,"byte_end":170610,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":170611,"byte_end":170636,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":170637,"byte_end":170640,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - The [`Stream`] trait, for objects that can asynchronously produce a","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":170641,"byte_end":170714,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/   sequence of values.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":170715,"byte_end":170740,"line_start":6,"line_end":6,"column_start":1,"column_end":26}},{"value":"/ - The [`StreamExt`] and [`TryStreamExt`] trait, which provides adapters for","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":170741,"byte_end":170820,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/   chaining and composing streams.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":170821,"byte_end":170858,"line_start":8,"line_end":8,"column_start":1,"column_end":38}},{"value":"/ - Top-level stream constructors like [`iter`](iter()) which creates a","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":170859,"byte_end":170932,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"/   stream from an iterator.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":170933,"byte_end":170963,"line_start":10,"line_end":10,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":10850},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/chain.rs","byte_start":228434,"byte_end":228439,"line_start":11,"line_end":11,"column_start":16,"column_end":21},"name":"Chain","qualname":"::stream::stream::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":10853},{"krate":0,"index":10854}],"decl_id":null,"docs":" Stream for the [`chain`](super::StreamExt::chain) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10899},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/collect.rs","byte_start":230564,"byte_end":230571,"line_start":13,"line_end":13,"column_start":16,"column_end":23},"name":"Collect","qualname":"::stream::stream::collect::Collect","value":"Collect {  }","parent":null,"children":[{"krate":0,"index":10902},{"krate":0,"index":10903}],"decl_id":null,"docs":" Future for the [`collect`](super::StreamExt::collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10948},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/unzip.rs","byte_start":232005,"byte_end":232010,"line_start":13,"line_end":13,"column_start":16,"column_end":21},"name":"Unzip","qualname":"::stream::stream::unzip::Unzip","value":"Unzip {  }","parent":null,"children":[{"krate":0,"index":10952},{"krate":0,"index":10953},{"krate":0,"index":10954}],"decl_id":null,"docs":" Future for the [`unzip`](super::StreamExt::unzip) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11010},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/concat.rs","byte_start":233844,"byte_end":233850,"line_start":12,"line_end":12,"column_start":16,"column_end":22},"name":"Concat","qualname":"::stream::stream::concat::Concat","value":"Concat {  }","parent":null,"children":[{"krate":0,"index":11012},{"krate":0,"index":11013}],"decl_id":null,"docs":" Future for the [`concat`](super::StreamExt::concat) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11050},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/count.rs","byte_start":235522,"byte_end":235527,"line_start":12,"line_end":12,"column_start":16,"column_end":21},"name":"Count","qualname":"::stream::stream::count::Count","value":"Count {  }","parent":null,"children":[{"krate":0,"index":11052},{"krate":0,"index":11053}],"decl_id":null,"docs":" Future for the [`count`](super::StreamExt::count) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11087},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/cycle.rs","byte_start":236837,"byte_end":236842,"line_start":12,"line_end":12,"column_start":16,"column_end":21},"name":"Cycle","qualname":"::stream::stream::cycle::Cycle","value":"Cycle {  }","parent":null,"children":[{"krate":0,"index":11089},{"krate":0,"index":11090}],"decl_id":null,"docs":" Stream for the [`cycle`](super::StreamExt::cycle) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11127},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/enumerate.rs","byte_start":238489,"byte_end":238498,"line_start":13,"line_end":13,"column_start":16,"column_end":25},"name":"Enumerate","qualname":"::stream::stream::enumerate::Enumerate","value":"Enumerate {  }","parent":null,"children":[{"krate":0,"index":11129},{"krate":0,"index":11130}],"decl_id":null,"docs":" Stream for the [`enumerate`](super::StreamExt::enumerate) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11175},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/filter.rs","byte_start":240130,"byte_end":240136,"line_start":15,"line_end":15,"column_start":16,"column_end":22},"name":"Filter","qualname":"::stream::stream::filter::Filter","value":"Filter {  }","parent":null,"children":[{"krate":0,"index":11179},{"krate":0,"index":11180},{"krate":0,"index":11181},{"krate":0,"index":11182}],"decl_id":null,"docs":" Stream for the [`filter`](super::StreamExt::filter) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11244},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/filter_map.rs","byte_start":243530,"byte_end":243539,"line_start":15,"line_end":15,"column_start":16,"column_end":25},"name":"FilterMap","qualname":"::stream::stream::filter_map::FilterMap","value":"FilterMap {  }","parent":null,"children":[{"krate":0,"index":11248},{"krate":0,"index":11249},{"krate":0,"index":11250}],"decl_id":null,"docs":" Stream for the [`filter_map`](super::StreamExt::filter_map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11309},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/flatten.rs","byte_start":246545,"byte_end":246552,"line_start":13,"line_end":13,"column_start":16,"column_end":23},"name":"Flatten","qualname":"::stream::stream::flatten::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":11312},{"krate":0,"index":11313}],"decl_id":null,"docs":" Stream for the [`flatten`](super::StreamExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11368},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":176487,"byte_end":176494,"line_start":67,"line_end":67,"column_start":5,"column_end":12},"name":"Flatten","qualname":"::stream::stream::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":11370}],"decl_id":null,"docs":" Stream for the [`flatten`](StreamExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11429},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fold.rs","byte_start":248369,"byte_end":248373,"line_start":12,"line_end":12,"column_start":16,"column_end":20},"name":"Fold","qualname":"::stream::stream::fold::Fold","value":"Fold {  }","parent":null,"children":[{"krate":0,"index":11434},{"krate":0,"index":11435},{"krate":0,"index":11436},{"krate":0,"index":11437}],"decl_id":null,"docs":" Future for the [`fold`](super::StreamExt::fold) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11498},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/any.rs","byte_start":250830,"byte_end":250833,"line_start":12,"line_end":12,"column_start":16,"column_end":19},"name":"Any","qualname":"::stream::stream::any::Any","value":"Any {  }","parent":null,"children":[{"krate":0,"index":11502},{"krate":0,"index":11503},{"krate":0,"index":11504},{"krate":0,"index":11505}],"decl_id":null,"docs":" Future for the [`any`](super::StreamExt::any) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11559},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/all.rs","byte_start":253406,"byte_end":253409,"line_start":12,"line_end":12,"column_start":16,"column_end":19},"name":"All","qualname":"::stream::stream::all::All","value":"All {  }","parent":null,"children":[{"krate":0,"index":11563},{"krate":0,"index":11564},{"krate":0,"index":11565},{"krate":0,"index":11566}],"decl_id":null,"docs":" Future for the [`all`](super::StreamExt::all) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11620},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/forward.rs","byte_start":256075,"byte_end":256082,"line_start":15,"line_end":15,"column_start":16,"column_end":23},"name":"Forward","qualname":"::stream::stream::forward::Forward","value":"Forward {  }","parent":null,"children":[{"krate":0,"index":11624},{"krate":0,"index":11625},{"krate":0,"index":11626}],"decl_id":null,"docs":" Future for the [`forward`](super::StreamExt::forward) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11685},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":177208,"byte_end":177215,"line_start":92,"line_end":92,"column_start":5,"column_end":12},"name":"Forward","qualname":"::stream::stream::Forward","value":"Forward {  }","parent":null,"children":[{"krate":0,"index":11688}],"decl_id":null,"docs":" Future for the [`forward`](super::StreamExt::forward) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11743},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/for_each.rs","byte_start":258318,"byte_end":258325,"line_start":12,"line_end":12,"column_start":16,"column_end":23},"name":"ForEach","qualname":"::stream::stream::for_each::ForEach","value":"ForEach {  }","parent":null,"children":[{"krate":0,"index":11747},{"krate":0,"index":11748},{"krate":0,"index":11749}],"decl_id":null,"docs":" Future for the [`for_each`](super::StreamExt::for_each) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11800},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fuse.rs","byte_start":260282,"byte_end":260286,"line_start":13,"line_end":13,"column_start":16,"column_end":20},"name":"Fuse","qualname":"::stream::stream::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":11802},{"krate":0,"index":11803}],"decl_id":null,"docs":" Stream for the [`fuse`](super::StreamExt::fuse) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2868},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fuse.rs","byte_start":260738,"byte_end":260745,"line_start":30,"line_end":30,"column_start":12,"column_end":19},"name":"is_done","qualname":"<Fuse<St>>::is_done","value":"pub fn is_done(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the underlying stream has finished or not.","sig":null,"attributes":[{"value":"/ Returns whether the underlying stream has finished or not.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fuse.rs","byte_start":260469,"byte_end":260531,"line_start":25,"line_end":25,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fuse.rs","byte_start":260536,"byte_end":260539,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ If this method returns `true`, then all future calls to poll are","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fuse.rs","byte_start":260544,"byte_end":260612,"line_start":27,"line_end":27,"column_start":5,"column_end":73}},{"value":"/ guaranteed to return `None`. If this returns `false`, then the","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fuse.rs","byte_start":260617,"byte_end":260683,"line_start":28,"line_end":28,"column_start":5,"column_end":71}},{"value":"/ underlying stream is still in use.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fuse.rs","byte_start":260688,"byte_end":260726,"line_start":29,"line_end":29,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":11848},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":262104,"byte_end":262116,"line_start":11,"line_end":11,"column_start":12,"column_end":24},"name":"StreamFuture","qualname":"::stream::stream::into_future::StreamFuture","value":"StreamFuture {  }","parent":null,"children":[{"krate":0,"index":11850}],"decl_id":null,"docs":" Future for the [`into_future`](super::StreamExt::into_future) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`into_future`](super::StreamExt::into_future) method.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":261934,"byte_end":262007,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":262025,"byte_end":262092,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2914},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":262679,"byte_end":262686,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<StreamFuture<St>>::get_ref","value":"pub fn get_ref(&Self) -> Option<&St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":262287,"byte_end":262360,"line_start":20,"line_end":20,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":262365,"byte_end":262382,"line_start":21,"line_end":21,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":262387,"byte_end":262390,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":262395,"byte_end":262476,"line_start":23,"line_end":23,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":262481,"byte_end":262563,"line_start":24,"line_end":24,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":262568,"byte_end":262647,"line_start":25,"line_end":25,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":262652,"byte_end":262667,"line_start":26,"line_end":26,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2915},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":263297,"byte_end":263304,"line_start":41,"line_end":41,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<StreamFuture<St>>::get_mut","value":"pub fn get_mut(&mut Self) -> Option<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":262751,"byte_end":262818,"line_start":31,"line_end":31,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":262823,"byte_end":262854,"line_start":32,"line_end":32,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":262859,"byte_end":262862,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":262867,"byte_end":262940,"line_start":34,"line_end":34,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":262945,"byte_end":263000,"line_start":35,"line_end":35,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":263005,"byte_end":263008,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":263013,"byte_end":263094,"line_start":37,"line_end":37,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":263099,"byte_end":263181,"line_start":38,"line_end":38,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":263186,"byte_end":263265,"line_start":39,"line_end":39,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":263270,"byte_end":263285,"line_start":40,"line_end":40,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2916},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":263930,"byte_end":263941,"line_start":55,"line_end":55,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<StreamFuture<St>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Option<Pin<&mut St>>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":263377,"byte_end":263451,"line_start":45,"line_end":45,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":263456,"byte_end":263487,"line_start":46,"line_end":46,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":263492,"byte_end":263495,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":263500,"byte_end":263573,"line_start":48,"line_end":48,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":263578,"byte_end":263633,"line_start":49,"line_end":49,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":263638,"byte_end":263641,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":263646,"byte_end":263727,"line_start":51,"line_end":51,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":263732,"byte_end":263814,"line_start":52,"line_end":52,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":263819,"byte_end":263898,"line_start":53,"line_end":53,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":263903,"byte_end":263918,"line_start":54,"line_end":54,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2917},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":264574,"byte_end":264584,"line_start":68,"line_end":68,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<StreamFuture<St>>::into_inner","value":"pub fn into_inner(Self) -> Option<St>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":264054,"byte_end":264116,"line_start":59,"line_end":59,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":264121,"byte_end":264124,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":264129,"byte_end":264201,"line_start":61,"line_end":61,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":264206,"byte_end":264277,"line_start":62,"line_end":62,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":264282,"byte_end":264285,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":264290,"byte_end":264371,"line_start":64,"line_end":64,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":264376,"byte_end":264458,"line_start":65,"line_end":65,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":264463,"byte_end":264542,"line_start":66,"line_end":66,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":264547,"byte_end":264562,"line_start":67,"line_end":67,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11857},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":177834,"byte_end":177841,"line_start":112,"line_end":112,"column_start":5,"column_end":12},"name":"Inspect","qualname":"::stream::stream::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":11860}],"decl_id":null,"docs":" Stream for the [`inspect`](StreamExt::inspect) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11932},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/map.rs","byte_start":265608,"byte_end":265611,"line_start":15,"line_end":15,"column_start":16,"column_end":19},"name":"Map","qualname":"::stream::stream::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":11935},{"krate":0,"index":11936}],"decl_id":null,"docs":" Stream for the [`map`](super::StreamExt::map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11989},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":178202,"byte_end":178209,"line_start":123,"line_end":123,"column_start":5,"column_end":12},"name":"FlatMap","qualname":"::stream::stream::FlatMap","value":"FlatMap {  }","parent":null,"children":[{"krate":0,"index":11993}],"decl_id":null,"docs":" Stream for the [`flat_map`](StreamExt::flat_map) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12078},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/next.rs","byte_start":267271,"byte_end":267275,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Next","qualname":"::stream::stream::next::Next","value":"Next {  }","parent":null,"children":[{"krate":0,"index":12081}],"decl_id":null,"docs":" Future for the [`next`](super::StreamExt::next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`next`](super::StreamExt::next) method.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/next.rs","byte_start":267115,"byte_end":267174,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/next.rs","byte_start":267192,"byte_end":267259,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":12086},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/select_next_some.rs","byte_start":268283,"byte_end":268297,"line_start":12,"line_end":12,"column_start":12,"column_end":26},"name":"SelectNextSome","qualname":"::stream::stream::select_next_some::SelectNextSome","value":"SelectNextSome {  }","parent":null,"children":[{"krate":0,"index":12089}],"decl_id":null,"docs":" Future for the [`select_next_some`](super::StreamExt::select_next_some)\n method.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_next_some`](super::StreamExt::select_next_some)","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/select_next_some.rs","byte_start":268099,"byte_end":268174,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ method.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/select_next_some.rs","byte_start":268175,"byte_end":268186,"line_start":9,"line_end":9,"column_start":1,"column_end":12}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/select_next_some.rs","byte_start":268204,"byte_end":268271,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":12094},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":269888,"byte_end":269896,"line_start":22,"line_end":22,"column_start":16,"column_end":24},"name":"Peekable","qualname":"::stream::stream::peek::Peekable","value":"Peekable {  }","parent":null,"children":[{"krate":0,"index":12096},{"krate":0,"index":12097}],"decl_id":null,"docs":" A `Stream` that implements a `peek` method.","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3126},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":270329,"byte_end":270333,"line_start":38,"line_end":38,"column_start":12,"column_end":16},"name":"peek","qualname":"<Peekable<St>>::peek","value":"pub fn peek(Pin<&mut Self>) -> Peek<, St>","parent":null,"children":[],"decl_id":null,"docs":" Produces a future which retrieves a reference to the next item\n in the stream, or `None` if the underlying stream terminates.\n","sig":null,"attributes":[{"value":"/ Produces a future which retrieves a reference to the next item","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":270181,"byte_end":270247,"line_start":36,"line_end":36,"column_start":5,"column_end":71}},{"value":"/ in the stream, or `None` if the underlying stream terminates.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":270252,"byte_end":270317,"line_start":37,"line_end":37,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3127},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":270658,"byte_end":270667,"line_start":46,"line_end":46,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<Peekable<St>>::poll_peek","value":"pub fn poll_peek(Pin<&mut Self>, &mut Context) -> Poll<Option<&St::Item>>","parent":null,"children":[],"decl_id":null,"docs":" Peek retrieves a reference to the next item in the stream.","sig":null,"attributes":[{"value":"/ Peek retrieves a reference to the next item in the stream.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":270420,"byte_end":270482,"line_start":42,"line_end":42,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":270487,"byte_end":270490,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This method polls the underlying stream and return either a reference","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":270495,"byte_end":270568,"line_start":44,"line_end":44,"column_start":5,"column_end":78}},{"value":"/ to the next item if the stream is ready or passes through any errors.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":270573,"byte_end":270646,"line_start":45,"line_end":45,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":3128},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":271982,"byte_end":271990,"line_start":86,"line_end":86,"column_start":12,"column_end":20},"name":"peek_mut","qualname":"<Peekable<St>>::peek_mut","value":"pub fn peek_mut(Pin<&mut Self>) -> PeekMut<, St>","parent":null,"children":[],"decl_id":null,"docs":" Produces a future which retrieves a mutable reference to the next item\n in the stream, or `None` if the underlying stream terminates.","sig":null,"attributes":[{"value":"/ Produces a future which retrieves a mutable reference to the next item","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":271103,"byte_end":271177,"line_start":60,"line_end":60,"column_start":5,"column_end":79}},{"value":"/ in the stream, or `None` if the underlying stream terminates.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":271182,"byte_end":271247,"line_start":61,"line_end":61,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":271252,"byte_end":271255,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":271260,"byte_end":271274,"line_start":63,"line_end":63,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":271279,"byte_end":271282,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":271287,"byte_end":271294,"line_start":65,"line_end":65,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":271299,"byte_end":271340,"line_start":66,"line_end":66,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":271345,"byte_end":271388,"line_start":67,"line_end":67,"column_start":5,"column_end":48}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":271393,"byte_end":271418,"line_start":68,"line_end":68,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":271423,"byte_end":271426,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![1, 2, 3]).peekable();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":271431,"byte_end":271487,"line_start":70,"line_end":70,"column_start":5,"column_end":61}},{"value":"/ pin_mut!(stream);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":271492,"byte_end":271513,"line_start":71,"line_end":71,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":271518,"byte_end":271521,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.as_mut().peek_mut().await, Some(&mut 1));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":271526,"byte_end":271589,"line_start":73,"line_end":73,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(stream.as_mut().next().await, Some(1));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":271594,"byte_end":271648,"line_start":74,"line_end":74,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":271653,"byte_end":271656,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ // Peek into the stream and modify the value which will be returned next","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":271661,"byte_end":271737,"line_start":76,"line_end":76,"column_start":5,"column_end":81}},{"value":"/ if let Some(p) = stream.as_mut().peek_mut().await {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":271742,"byte_end":271797,"line_start":77,"line_end":77,"column_start":5,"column_end":60}},{"value":"/     if *p == 2 {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":271802,"byte_end":271822,"line_start":78,"line_end":78,"column_start":5,"column_end":25}},{"value":"/         *p = 5;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":271827,"byte_end":271846,"line_start":79,"line_end":79,"column_start":5,"column_end":24}},{"value":"/     }","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":271851,"byte_end":271860,"line_start":80,"line_end":80,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":271865,"byte_end":271870,"line_start":81,"line_end":81,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":271875,"byte_end":271878,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.collect::<Vec<_>>().await, vec![5, 3]);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":271883,"byte_end":271944,"line_start":83,"line_end":83,"column_start":5,"column_end":66}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":271949,"byte_end":271958,"line_start":84,"line_end":84,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":271963,"byte_end":271970,"line_start":85,"line_end":85,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3129},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":272165,"byte_end":272178,"line_start":91,"line_end":91,"column_start":12,"column_end":25},"name":"poll_peek_mut","qualname":"<Peekable<St>>::poll_peek_mut","value":"pub fn poll_peek_mut(Pin<&mut Self>, &mut Context)\n-> Poll<Option<&mut St::Item>>","parent":null,"children":[],"decl_id":null,"docs":" Peek retrieves a mutable reference to the next item in the stream.\n","sig":null,"attributes":[{"value":"/ Peek retrieves a mutable reference to the next item in the stream.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":272083,"byte_end":272153,"line_start":90,"line_end":90,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":3130},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":274169,"byte_end":274176,"line_start":149,"line_end":149,"column_start":12,"column_end":19},"name":"next_if","qualname":"<Peekable<St>>::next_if","value":"pub fn next_if<F>(Pin<&mut Self>, F) -> NextIf<, St, F> where\nF: FnOnce(&St::Item) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which will consume and return the next value of this\n stream if a condition is true.","sig":null,"attributes":[{"value":"/ Creates a future which will consume and return the next value of this","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":272641,"byte_end":272714,"line_start":108,"line_end":108,"column_start":5,"column_end":78}},{"value":"/ stream if a condition is true.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":272719,"byte_end":272753,"line_start":109,"line_end":109,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":272758,"byte_end":272761,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ If `func` returns `true` for the next value of this stream, consume and","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":272766,"byte_end":272841,"line_start":111,"line_end":111,"column_start":5,"column_end":80}},{"value":"/ return it. Otherwise, return `None`.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":272846,"byte_end":272886,"line_start":112,"line_end":112,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":272891,"byte_end":272894,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":272899,"byte_end":272913,"line_start":114,"line_end":114,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":272918,"byte_end":272921,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ Consume a number if it's equal to 0.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":272926,"byte_end":272966,"line_start":116,"line_end":116,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":272971,"byte_end":272974,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":272979,"byte_end":272986,"line_start":118,"line_end":118,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":272991,"byte_end":273032,"line_start":119,"line_end":119,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":273037,"byte_end":273080,"line_start":120,"line_end":120,"column_start":5,"column_end":48}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":273085,"byte_end":273110,"line_start":121,"line_end":121,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":273115,"byte_end":273118,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(0..5).peekable();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":273123,"byte_end":273170,"line_start":123,"line_end":123,"column_start":5,"column_end":52}},{"value":"/ pin_mut!(stream);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":273175,"byte_end":273196,"line_start":124,"line_end":124,"column_start":5,"column_end":26}},{"value":"/ // The first item of the stream is 0; consume it.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":273201,"byte_end":273254,"line_start":125,"line_end":125,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.as_mut().next_if(|&x| x == 0).await, Some(0));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":273259,"byte_end":273327,"line_start":126,"line_end":126,"column_start":5,"column_end":73}},{"value":"/ // The next item returned is now 1, so `consume` will return `false`.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":273332,"byte_end":273405,"line_start":127,"line_end":127,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(stream.as_mut().next_if(|&x| x == 0).await, None);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":273410,"byte_end":273475,"line_start":128,"line_end":128,"column_start":5,"column_end":70}},{"value":"/ // `next_if` saves the value of the next item if it was not equal to `expected`.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":273480,"byte_end":273564,"line_start":129,"line_end":129,"column_start":5,"column_end":89}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":273569,"byte_end":273614,"line_start":130,"line_end":130,"column_start":5,"column_end":50}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":273619,"byte_end":273628,"line_start":131,"line_end":131,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":273633,"byte_end":273640,"line_start":132,"line_end":132,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":273645,"byte_end":273648,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ Consume any number less than 10.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":273653,"byte_end":273689,"line_start":134,"line_end":134,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":273694,"byte_end":273697,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":273702,"byte_end":273709,"line_start":136,"line_end":136,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":273714,"byte_end":273755,"line_start":137,"line_end":137,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":273760,"byte_end":273803,"line_start":138,"line_end":138,"column_start":5,"column_end":48}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":273808,"byte_end":273833,"line_start":139,"line_end":139,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":273838,"byte_end":273841,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..20).peekable();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":273846,"byte_end":273894,"line_start":141,"line_end":141,"column_start":5,"column_end":53}},{"value":"/ pin_mut!(stream);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":273899,"byte_end":273920,"line_start":142,"line_end":142,"column_start":5,"column_end":26}},{"value":"/ // Consume all numbers less than 10","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":273925,"byte_end":273964,"line_start":143,"line_end":143,"column_start":5,"column_end":44}},{"value":"/ while stream.as_mut().next_if(|&x| x < 10).await.is_some() {}","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":273969,"byte_end":274034,"line_start":144,"line_end":144,"column_start":5,"column_end":70}},{"value":"/ // The next value returned will be 10","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":274039,"byte_end":274080,"line_start":145,"line_end":145,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(stream.next().await, Some(10));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":274085,"byte_end":274131,"line_start":146,"line_end":146,"column_start":5,"column_end":51}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":274136,"byte_end":274145,"line_start":147,"line_end":147,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":274150,"byte_end":274157,"line_start":148,"line_end":148,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3132},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":275200,"byte_end":275210,"line_start":178,"line_end":178,"column_start":12,"column_end":22},"name":"next_if_eq","qualname":"<Peekable<St>>::next_if_eq","value":"pub fn next_if_eq<'a, T>(Pin<&'a mut Self>, &'a T) -> NextIfEq where\nT: ?Sized, St::Item: PartialEq<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which will consume and return the next item if it is\n equal to `expected`.","sig":null,"attributes":[{"value":"/ Creates a future which will consume and return the next item if it is","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":274342,"byte_end":274415,"line_start":156,"line_end":156,"column_start":5,"column_end":78}},{"value":"/ equal to `expected`.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":274420,"byte_end":274444,"line_start":157,"line_end":157,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":274449,"byte_end":274452,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":274457,"byte_end":274470,"line_start":159,"line_end":159,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":274475,"byte_end":274478,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ Consume a number if it's equal to 0.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":274483,"byte_end":274523,"line_start":161,"line_end":161,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":274528,"byte_end":274531,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":274536,"byte_end":274543,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":274548,"byte_end":274589,"line_start":164,"line_end":164,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":274594,"byte_end":274637,"line_start":165,"line_end":165,"column_start":5,"column_end":48}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":274642,"byte_end":274667,"line_start":166,"line_end":166,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":274672,"byte_end":274675,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(0..5).peekable();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":274680,"byte_end":274727,"line_start":168,"line_end":168,"column_start":5,"column_end":52}},{"value":"/ pin_mut!(stream);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":274732,"byte_end":274753,"line_start":169,"line_end":169,"column_start":5,"column_end":26}},{"value":"/ // The first item of the stream is 0; consume it.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":274758,"byte_end":274811,"line_start":170,"line_end":170,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.as_mut().next_if_eq(&0).await, Some(0));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":274816,"byte_end":274878,"line_start":171,"line_end":171,"column_start":5,"column_end":67}},{"value":"/ // The next item returned is now 1, so `consume` will return `false`.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":274883,"byte_end":274956,"line_start":172,"line_end":172,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(stream.as_mut().next_if_eq(&0).await, None);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":274961,"byte_end":275020,"line_start":173,"line_end":173,"column_start":5,"column_end":64}},{"value":"/ // `next_if_eq` saves the value of the next item if it was not equal to `expected`.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":275025,"byte_end":275112,"line_start":174,"line_end":174,"column_start":5,"column_end":92}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":275117,"byte_end":275162,"line_start":175,"line_end":175,"column_start":5,"column_end":50}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":275167,"byte_end":275176,"line_start":176,"line_end":176,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":275181,"byte_end":275188,"line_start":177,"line_end":177,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":12142},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":276728,"byte_end":276732,"line_start":232,"line_end":232,"column_start":16,"column_end":20},"name":"Peek","qualname":"::stream::stream::peek::Peek","value":"Peek {  }","parent":null,"children":[{"krate":0,"index":12145}],"decl_id":null,"docs":" Future for the [`Peekable::peek`](self::Peekable::peek) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12183},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":277790,"byte_end":277797,"line_start":274,"line_end":274,"column_start":16,"column_end":23},"name":"PeekMut","qualname":"::stream::stream::peek::PeekMut","value":"PeekMut {  }","parent":null,"children":[{"krate":0,"index":12186}],"decl_id":null,"docs":" Future for the [`Peekable::peek_mut`](self::Peekable::peek_mut) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12224},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":278880,"byte_end":278886,"line_start":316,"line_end":316,"column_start":16,"column_end":22},"name":"NextIf","qualname":"::stream::stream::peek::NextIf","value":"NextIf {  }","parent":null,"children":[{"krate":0,"index":12228}],"decl_id":null,"docs":" Future for the [`Peekable::next_if`](self::Peekable::next_if) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12273},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":280750,"byte_end":280758,"line_start":375,"line_end":375,"column_start":16,"column_end":24},"name":"NextIfEq","qualname":"::stream::stream::peek::NextIfEq","value":"NextIfEq {  }","parent":null,"children":[{"krate":0,"index":12277}],"decl_id":null,"docs":" Future for the [`Peekable::next_if_eq`](self::Peekable::next_if_eq) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12322},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/skip.rs","byte_start":282375,"byte_end":282379,"line_start":13,"line_end":13,"column_start":16,"column_end":20},"name":"Skip","qualname":"::stream::stream::skip::Skip","value":"Skip {  }","parent":null,"children":[{"krate":0,"index":12324},{"krate":0,"index":12325}],"decl_id":null,"docs":" Stream for the [`skip`](super::StreamExt::skip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12370},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/skip_while.rs","byte_start":284142,"byte_end":284151,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"SkipWhile","qualname":"::stream::stream::skip_while::SkipWhile","value":"SkipWhile {  }","parent":null,"children":[{"krate":0,"index":12374},{"krate":0,"index":12375},{"krate":0,"index":12376},{"krate":0,"index":12377},{"krate":0,"index":12378}],"decl_id":null,"docs":" Stream for the [`skip_while`](super::StreamExt::skip_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12443},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take.rs","byte_start":287655,"byte_end":287659,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Take","qualname":"::stream::stream::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":12445},{"krate":0,"index":12446}],"decl_id":null,"docs":" Stream for the [`take`](super::StreamExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12491},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_while.rs","byte_start":289695,"byte_end":289704,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"TakeWhile","qualname":"::stream::stream::take_while::TakeWhile","value":"TakeWhile {  }","parent":null,"children":[{"krate":0,"index":12495},{"krate":0,"index":12496},{"krate":0,"index":12497},{"krate":0,"index":12498},{"krate":0,"index":12499}],"decl_id":null,"docs":" Stream for the [`take_while`](super::StreamExt::take_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12564},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":293184,"byte_end":293193,"line_start":16,"line_end":16,"column_start":16,"column_end":25},"name":"TakeUntil","qualname":"::stream::stream::take_until::TakeUntil","value":"TakeUntil {  }","parent":null,"children":[{"krate":0,"index":12567},{"krate":0,"index":12568},{"krate":0,"index":12569},{"krate":0,"index":12570}],"decl_id":null,"docs":" Stream for the [`take_until`](super::StreamExt::take_until) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3489},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":294477,"byte_end":294488,"line_start":56,"line_end":56,"column_start":12,"column_end":23},"name":"take_future","qualname":"<TakeUntil<St, Fut>>::take_future","value":"pub fn take_future(&mut Self) -> Option<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Extract the stopping future out of the combinator.\n The future is returned only if it isn't resolved yet, ie. if the stream isn't stopped yet.\n Taking out the future means the combinator will be yielding\n elements from the wrapped stream without ever stopping it.\n","sig":null,"attributes":[{"value":"/ Extract the stopping future out of the combinator.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":294177,"byte_end":294231,"line_start":52,"line_end":52,"column_start":5,"column_end":59}},{"value":"/ The future is returned only if it isn't resolved yet, ie. if the stream isn't stopped yet.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":294236,"byte_end":294330,"line_start":53,"line_end":53,"column_start":5,"column_end":99}},{"value":"/ Taking out the future means the combinator will be yielding","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":294335,"byte_end":294398,"line_start":54,"line_end":54,"column_start":5,"column_end":68}},{"value":"/ elements from the wrapped stream without ever stopping it.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":294403,"byte_end":294465,"line_start":55,"line_end":55,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3490},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":295772,"byte_end":295783,"line_start":100,"line_end":100,"column_start":12,"column_end":23},"name":"take_result","qualname":"<TakeUntil<St, Fut>>::take_result","value":"pub fn take_result(&mut Self) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Once the stopping future is resolved, this method can be used\n to extract the value returned by the stopping future.","sig":null,"attributes":[{"value":"/ Once the stopping future is resolved, this method can be used","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":294625,"byte_end":294690,"line_start":64,"line_end":64,"column_start":5,"column_end":70}},{"value":"/ to extract the value returned by the stopping future.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":294695,"byte_end":294752,"line_start":65,"line_end":65,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":294757,"byte_end":294760,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ This may be used to retrieve arbitrary data from the stopping","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":294765,"byte_end":294830,"line_start":67,"line_end":67,"column_start":5,"column_end":70}},{"value":"/ future, for example a reason why the stream was stopped.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":294835,"byte_end":294895,"line_start":68,"line_end":68,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":294900,"byte_end":294903,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ This method will return `None` if the future isn't resolved yet,","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":294908,"byte_end":294976,"line_start":70,"line_end":70,"column_start":5,"column_end":73}},{"value":"/ or if the result was already taken out.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":294981,"byte_end":295024,"line_start":71,"line_end":71,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":295029,"byte_end":295032,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":295037,"byte_end":295051,"line_start":73,"line_end":73,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":295056,"byte_end":295059,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":295064,"byte_end":295071,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":295076,"byte_end":295117,"line_start":76,"line_end":76,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":295122,"byte_end":295146,"line_start":77,"line_end":77,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":295151,"byte_end":295194,"line_start":78,"line_end":78,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":295199,"byte_end":295227,"line_start":79,"line_end":79,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":295232,"byte_end":295235,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":295240,"byte_end":295278,"line_start":81,"line_end":81,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":295283,"byte_end":295286,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ let mut i = 0;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":295291,"byte_end":295309,"line_start":83,"line_end":83,"column_start":5,"column_end":23}},{"value":"/ let stop_fut = future::poll_fn(|_cx| {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":295314,"byte_end":295356,"line_start":84,"line_end":84,"column_start":5,"column_end":47}},{"value":"/     i += 1;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":295361,"byte_end":295376,"line_start":85,"line_end":85,"column_start":5,"column_end":20}},{"value":"/     if i <= 5 {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":295381,"byte_end":295400,"line_start":86,"line_end":86,"column_start":5,"column_end":24}},{"value":"/         Poll::Pending","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":295405,"byte_end":295430,"line_start":87,"line_end":87,"column_start":5,"column_end":30}},{"value":"/     } else {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":295435,"byte_end":295451,"line_start":88,"line_end":88,"column_start":5,"column_end":21}},{"value":"/         Poll::Ready(\"reason\")","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":295456,"byte_end":295489,"line_start":89,"line_end":89,"column_start":5,"column_end":38}},{"value":"/     }","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":295494,"byte_end":295503,"line_start":90,"line_end":90,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":295508,"byte_end":295515,"line_start":91,"line_end":91,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":295520,"byte_end":295523,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream.take_until(stop_fut);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":295528,"byte_end":295577,"line_start":93,"line_end":93,"column_start":5,"column_end":54}},{"value":"/ let _ = stream.by_ref().collect::<Vec<_>>().await;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":295582,"byte_end":295636,"line_start":94,"line_end":94,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":295641,"byte_end":295644,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ let result = stream.take_result().unwrap();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":295649,"byte_end":295696,"line_start":96,"line_end":96,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(result, \"reason\");","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":295701,"byte_end":295734,"line_start":97,"line_end":97,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":295739,"byte_end":295748,"line_start":98,"line_end":98,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":295753,"byte_end":295760,"line_start":99,"line_end":99,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3491},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":295959,"byte_end":295969,"line_start":106,"line_end":106,"column_start":12,"column_end":22},"name":"is_stopped","qualname":"<TakeUntil<St, Fut>>::is_stopped","value":"pub fn is_stopped(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether the stream was stopped yet by the stopping future\n being resolved.\n","sig":null,"attributes":[{"value":"/ Whether the stream was stopped yet by the stopping future","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":295862,"byte_end":295923,"line_start":104,"line_end":104,"column_start":5,"column_end":66}},{"value":"/ being resolved.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":295928,"byte_end":295947,"line_start":105,"line_end":105,"column_start":5,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":12625},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/then.rs","byte_start":297901,"byte_end":297905,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Then","qualname":"::stream::stream::then::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":12629},{"krate":0,"index":12630},{"krate":0,"index":12631}],"decl_id":null,"docs":" Stream for the [`then`](super::StreamExt::then) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12690},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":300445,"byte_end":300448,"line_start":12,"line_end":12,"column_start":16,"column_end":19},"name":"Zip","qualname":"::stream::stream::zip::Zip","value":"Zip {  }","parent":null,"children":[{"krate":0,"index":12693},{"krate":0,"index":12694},{"krate":0,"index":12695},{"krate":0,"index":12696}],"decl_id":null,"docs":" Stream for the [`zip`](super::StreamExt::zip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3609},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":300966,"byte_end":300973,"line_start":29,"line_end":29,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Zip<St1, St2>>::get_ref","value":"pub fn get_ref(&Self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":300858,"byte_end":300932,"line_start":27,"line_end":27,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":300937,"byte_end":300954,"line_start":28,"line_end":28,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3610},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":301329,"byte_end":301336,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Zip<St1, St2>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":301067,"byte_end":301135,"line_start":33,"line_end":33,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":301140,"byte_end":301171,"line_start":34,"line_end":34,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":301176,"byte_end":301179,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":301184,"byte_end":301257,"line_start":36,"line_end":36,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":301262,"byte_end":301317,"line_start":37,"line_end":37,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3611},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":301711,"byte_end":301722,"line_start":47,"line_end":47,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Zip<St1, St2>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":301442,"byte_end":301517,"line_start":42,"line_end":42,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":301522,"byte_end":301553,"line_start":43,"line_end":43,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":301558,"byte_end":301561,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":301566,"byte_end":301639,"line_start":45,"line_end":45,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":301644,"byte_end":301699,"line_start":46,"line_end":46,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3612},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":302128,"byte_end":302138,"line_start":56,"line_end":56,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Zip<St1, St2>>::into_inner","value":"pub fn into_inner(Self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":301892,"byte_end":301955,"line_start":52,"line_end":52,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":301960,"byte_end":301963,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":301968,"byte_end":302040,"line_start":54,"line_end":54,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":302045,"byte_end":302116,"line_start":55,"line_end":55,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":12747},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/chunks.rs","byte_start":304967,"byte_end":304973,"line_start":16,"line_end":16,"column_start":16,"column_end":22},"name":"Chunks","qualname":"::stream::stream::chunks::Chunks","value":"Chunks {  }","parent":null,"children":[{"krate":0,"index":12749},{"krate":0,"index":12750},{"krate":0,"index":12751}],"decl_id":null,"docs":" Stream for the [`chunks`](super::StreamExt::chunks) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12799},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/ready_chunks.rs","byte_start":308076,"byte_end":308087,"line_start":15,"line_end":15,"column_start":16,"column_end":27},"name":"ReadyChunks","qualname":"::stream::stream::ready_chunks::ReadyChunks","value":"ReadyChunks {  }","parent":null,"children":[{"krate":0,"index":12801},{"krate":0,"index":12802},{"krate":0,"index":12803}],"decl_id":null,"docs":" Stream for the [`ready_chunks`](super::StreamExt::ready_chunks) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12851},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/scan.rs","byte_start":311633,"byte_end":311637,"line_start":19,"line_end":19,"column_start":16,"column_end":20},"name":"Scan","qualname":"::stream::stream::scan::Scan","value":"Scan {  }","parent":null,"children":[{"krate":0,"index":12856},{"krate":0,"index":12857},{"krate":0,"index":12858}],"decl_id":null,"docs":" Stream for the [`scan`](super::StreamExt::scan) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12924},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/buffer_unordered.rs","byte_start":315061,"byte_end":315076,"line_start":15,"line_end":15,"column_start":16,"column_end":31},"name":"BufferUnordered","qualname":"::stream::stream::buffer_unordered::BufferUnordered","value":"BufferUnordered {  }","parent":null,"children":[{"krate":0,"index":12926},{"krate":0,"index":12927},{"krate":0,"index":12928}],"decl_id":null,"docs":" Stream for the [`buffer_unordered`](super::StreamExt::buffer_unordered)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12973},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/buffered.rs","byte_start":318387,"byte_end":318395,"line_start":15,"line_end":15,"column_start":16,"column_end":24},"name":"Buffered","qualname":"::stream::stream::buffered::Buffered","value":"Buffered {  }","parent":null,"children":[{"krate":0,"index":12975},{"krate":0,"index":12976},{"krate":0,"index":12977}],"decl_id":null,"docs":" Stream for the [`buffered`](super::StreamExt::buffered) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13022},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/for_each_concurrent.rs","byte_start":321390,"byte_end":321407,"line_start":14,"line_end":14,"column_start":16,"column_end":33},"name":"ForEachConcurrent","qualname":"::stream::stream::for_each_concurrent::ForEachConcurrent","value":"ForEachConcurrent {  }","parent":null,"children":[{"krate":0,"index":13026},{"krate":0,"index":13027},{"krate":0,"index":13028},{"krate":0,"index":13029}],"decl_id":null,"docs":" Future for the [`for_each_concurrent`](super::StreamExt::for_each_concurrent)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13083},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/split.rs","byte_start":324852,"byte_end":324863,"line_start":14,"line_end":14,"column_start":12,"column_end":23},"name":"SplitStream","qualname":"::stream::stream::split::SplitStream","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `Stream` part of the split pair\n","sig":null,"attributes":[{"value":"/ A `Stream` part of the split pair","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/split.rs","byte_start":324689,"byte_end":324726,"line_start":10,"line_end":10,"column_start":1,"column_end":38}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/split.rs","byte_start":324744,"byte_end":324792,"line_start":12,"line_end":12,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":4026},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/split.rs","byte_start":325190,"byte_end":325197,"line_start":22,"line_end":22,"column_start":12,"column_end":19},"name":"reunite","qualname":"<SplitStream<S>>::reunite","value":"pub fn reunite<Item>(Self, SplitSink<S, Item>)\n-> Result<S, ReuniteError<S, Item>> where S: Sink<Item>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a split `Stream + Sink` back\n together. Succeeds only if the `SplitStream<S>` and `SplitSink<S>` are\n a matching pair originating from the same call to `StreamExt::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a split `Stream + Sink` back","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/split.rs","byte_start":324953,"byte_end":325021,"line_start":19,"line_end":19,"column_start":5,"column_end":73}},{"value":"/ together. Succeeds only if the `SplitStream<S>` and `SplitSink<S>` are","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/split.rs","byte_start":325026,"byte_end":325100,"line_start":20,"line_end":20,"column_start":5,"column_end":79}},{"value":"/ a matching pair originating from the same call to `StreamExt::split`.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/split.rs","byte_start":325105,"byte_end":325178,"line_start":21,"line_end":21,"column_start":5,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":13090},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/split.rs","byte_start":325872,"byte_end":325881,"line_start":47,"line_end":47,"column_start":12,"column_end":21},"name":"SplitSink","qualname":"::stream::stream::split::SplitSink","value":"SplitSink {  }","parent":null,"children":[{"krate":0,"index":13093},{"krate":0,"index":13094}],"decl_id":null,"docs":" A `Sink` part of the split pair\n","sig":null,"attributes":[{"value":"/ A `Sink` part of the split pair","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/split.rs","byte_start":325713,"byte_end":325748,"line_start":43,"line_end":43,"column_start":1,"column_end":36}},{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/split.rs","byte_start":325766,"byte_end":325812,"line_start":45,"line_end":45,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":4041},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/split.rs","byte_start":326284,"byte_end":326291,"line_start":58,"line_end":58,"column_start":12,"column_end":19},"name":"reunite","qualname":"<SplitSink<S, Item>>::reunite","value":"pub fn reunite(Self, SplitStream<S>) -> Result<S, ReuniteError<S, Item>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a split `Stream + Sink` back\n together. Succeeds only if the `SplitStream<S>` and `SplitSink<S>` are\n a matching pair originating from the same call to `StreamExt::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a split `Stream + Sink` back","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/split.rs","byte_start":326047,"byte_end":326115,"line_start":55,"line_end":55,"column_start":5,"column_end":73}},{"value":"/ together. Succeeds only if the `SplitStream<S>` and `SplitSink<S>` are","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/split.rs","byte_start":326120,"byte_end":326194,"line_start":56,"line_end":56,"column_start":5,"column_end":79}},{"value":"/ a matching pair originating from the same call to `StreamExt::split`.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/split.rs","byte_start":326199,"byte_end":326272,"line_start":57,"line_end":57,"column_start":5,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":4059},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/split.rs","byte_start":328745,"byte_end":328757,"line_start":129,"line_end":129,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::stream::stream::split::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating a `SplitSink<S>` and `SplitStream<S>` were not two halves\n of a `Stream + Split`, and thus could not be `reunite`d.\n","sig":null,"attributes":[{"value":"/ Error indicating a `SplitSink<S>` and `SplitStream<S>` were not two halves","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/split.rs","byte_start":328546,"byte_end":328624,"line_start":126,"line_end":126,"column_start":1,"column_end":79}},{"value":"/ of a `Stream + Split`, and thus could not be `reunite`d.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/split.rs","byte_start":328625,"byte_end":328685,"line_start":127,"line_end":127,"column_start":1,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":4063},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/split.rs","byte_start":328767,"byte_end":328789,"line_start":129,"line_end":129,"column_start":34,"column_end":56},"name":"0","qualname":"::stream::stream::split::ReuniteError::0","value":"stream::stream::split::SplitSink<T, Item>","parent":{"krate":0,"index":4059},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4064},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/split.rs","byte_start":328791,"byte_end":328809,"line_start":129,"line_end":129,"column_start":58,"column_end":76},"name":"1","qualname":"::stream::stream::split::ReuniteError::1","value":"stream::stream::split::SplitStream<T>","parent":{"krate":0,"index":4059},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13099},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/catch_unwind.rs","byte_start":329727,"byte_end":329738,"line_start":12,"line_end":12,"column_start":16,"column_end":27},"name":"CatchUnwind","qualname":"::stream::stream::catch_unwind::CatchUnwind","value":"CatchUnwind {  }","parent":null,"children":[{"krate":0,"index":13101},{"krate":0,"index":13102}],"decl_id":null,"docs":" Stream for the [`catch_unwind`](super::StreamExt::catch_unwind) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":4138},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":181674,"byte_end":181683,"line_start":230,"line_end":230,"column_start":11,"column_end":20},"name":"StreamExt","qualname":"::stream::stream::StreamExt","value":"StreamExt: Stream","parent":null,"children":[{"krate":0,"index":4139},{"krate":0,"index":4140},{"krate":0,"index":4141},{"krate":0,"index":4144},{"krate":0,"index":4145},{"krate":0,"index":4148},{"krate":0,"index":4152},{"krate":0,"index":4155},{"krate":0,"index":4157},{"krate":0,"index":4162},{"krate":0,"index":4163},{"krate":0,"index":4164},{"krate":0,"index":4165},{"krate":0,"index":4169},{"krate":0,"index":4172},{"krate":0,"index":4175},{"krate":0,"index":4176},{"krate":0,"index":4179},{"krate":0,"index":4184},{"krate":0,"index":4187},{"krate":0,"index":4190},{"krate":0,"index":4192},{"krate":0,"index":4195},{"krate":0,"index":4199},{"krate":0,"index":4200},{"krate":0,"index":4201},{"krate":0,"index":4202},{"krate":0,"index":4203},{"krate":0,"index":4204},{"krate":0,"index":4206},{"krate":0,"index":4208},{"krate":0,"index":4209},{"krate":0,"index":4210},{"krate":0,"index":4212},{"krate":0,"index":4214},{"krate":0,"index":4215},{"krate":0,"index":4216},{"krate":0,"index":4217},{"krate":0,"index":4219},{"krate":0,"index":4221},{"krate":0,"index":4223},{"krate":0,"index":4225},{"krate":0,"index":4227},{"krate":0,"index":4228}],"decl_id":null,"docs":" An extension trait for `Stream`s that provides a variety of convenient\n combinator functions.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Stream`s that provides a variety of convenient","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":181563,"byte_end":181637,"line_start":228,"line_end":228,"column_start":1,"column_end":75}},{"value":"/ combinator functions.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":181638,"byte_end":181663,"line_start":229,"line_end":229,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":4139},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":182593,"byte_end":182597,"line_start":254,"line_end":254,"column_start":8,"column_end":12},"name":"next","qualname":"::stream::stream::StreamExt::next","value":"pub fn next(&mut Self) -> Next<, Self> where Self: Unpin","parent":{"krate":0,"index":4138},"children":[],"decl_id":null,"docs":" Creates a future that resolves to the next item in the stream.","sig":null,"attributes":[{"value":"/ Creates a future that resolves to the next item in the stream.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":181698,"byte_end":181764,"line_start":231,"line_end":231,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":181769,"byte_end":181772,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ Note that because `next` doesn't take ownership over the stream,","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":181777,"byte_end":181845,"line_start":233,"line_end":233,"column_start":5,"column_end":73}},{"value":"/ the [`Stream`] type must be [`Unpin`]. If you want to use `next` with a","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":181850,"byte_end":181925,"line_start":234,"line_end":234,"column_start":5,"column_end":80}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":181930,"byte_end":182005,"line_start":235,"line_end":235,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":182010,"byte_end":182064,"line_start":236,"line_end":236,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":182069,"byte_end":182144,"line_start":237,"line_end":237,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":182149,"byte_end":182159,"line_start":238,"line_end":238,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":182164,"byte_end":182167,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":182172,"byte_end":182186,"line_start":240,"line_end":240,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":182191,"byte_end":182194,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":182199,"byte_end":182206,"line_start":242,"line_end":242,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":182211,"byte_end":182252,"line_start":243,"line_end":243,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":182257,"byte_end":182300,"line_start":244,"line_end":244,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":182305,"byte_end":182308,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=3);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":182313,"byte_end":182354,"line_start":246,"line_end":246,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":182359,"byte_end":182362,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":182367,"byte_end":182412,"line_start":248,"line_end":248,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(2));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":182417,"byte_end":182462,"line_start":249,"line_end":249,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(3));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":182467,"byte_end":182512,"line_start":250,"line_end":250,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":182517,"byte_end":182559,"line_start":251,"line_end":251,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":182564,"byte_end":182573,"line_start":252,"line_end":252,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":182578,"byte_end":182585,"line_start":253,"line_end":253,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4140},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":183836,"byte_end":183847,"line_start":289,"line_end":289,"column_start":8,"column_end":19},"name":"into_future","qualname":"::stream::stream::StreamExt::into_future","value":"pub fn into_future(Self) -> StreamFuture<Self> where Self: Sized + Unpin","parent":{"krate":0,"index":4138},"children":[],"decl_id":null,"docs":" Converts this stream into a future of `(next_item, tail_of_stream)`.\n If the stream terminates, then the next item is [`None`].","sig":null,"attributes":[{"value":"/ Converts this stream into a future of `(next_item, tail_of_stream)`.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":182739,"byte_end":182811,"line_start":261,"line_end":261,"column_start":5,"column_end":77}},{"value":"/ If the stream terminates, then the next item is [`None`].","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":182816,"byte_end":182877,"line_start":262,"line_end":262,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":182882,"byte_end":182885,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ The returned future can be used to compose streams and futures together","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":182890,"byte_end":182965,"line_start":264,"line_end":264,"column_start":5,"column_end":80}},{"value":"/ by placing everything into the \"world of futures\".","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":182970,"byte_end":183024,"line_start":265,"line_end":265,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":183029,"byte_end":183032,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ Note that because `into_future` moves the stream, the [`Stream`] type","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":183037,"byte_end":183110,"line_start":267,"line_end":267,"column_start":5,"column_end":78}},{"value":"/ must be [`Unpin`]. If you want to use `into_future` with a","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":183115,"byte_end":183177,"line_start":268,"line_end":268,"column_start":5,"column_end":67}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":183182,"byte_end":183257,"line_start":269,"line_end":269,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":183262,"byte_end":183316,"line_start":270,"line_end":270,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":183321,"byte_end":183396,"line_start":271,"line_end":271,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":183401,"byte_end":183411,"line_start":272,"line_end":272,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":183416,"byte_end":183419,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":183424,"byte_end":183438,"line_start":274,"line_end":274,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":183443,"byte_end":183446,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":183451,"byte_end":183458,"line_start":276,"line_end":276,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":183463,"byte_end":183504,"line_start":277,"line_end":277,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":183509,"byte_end":183552,"line_start":278,"line_end":278,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":183557,"byte_end":183560,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":183565,"byte_end":183602,"line_start":280,"line_end":280,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":183607,"byte_end":183610,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ let (item, stream) = stream.into_future().await;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":183615,"byte_end":183667,"line_start":282,"line_end":282,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(Some(1), item);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":183672,"byte_end":183702,"line_start":283,"line_end":283,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":183707,"byte_end":183710,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ let (item, stream) = stream.into_future().await;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":183715,"byte_end":183767,"line_start":285,"line_end":285,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(Some(2), item);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":183772,"byte_end":183802,"line_start":286,"line_end":286,"column_start":5,"column_end":35}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":183807,"byte_end":183816,"line_start":287,"line_end":287,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":183821,"byte_end":183828,"line_start":288,"line_end":288,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4141},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":184848,"byte_end":184851,"line_start":319,"line_end":319,"column_start":8,"column_end":11},"name":"map","qualname":"::stream::stream::StreamExt::map","value":"pub fn map<T, F>(Self, F) -> Map<Self, F> where F: FnMut(Self::Item) -> T,\nSelf: Sized","parent":{"krate":0,"index":4138},"children":[],"decl_id":null,"docs":" Maps this stream's items to a different type, returning a new stream of\n the resulting type.","sig":null,"attributes":[{"value":"/ Maps this stream's items to a different type, returning a new stream of","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":184012,"byte_end":184087,"line_start":296,"line_end":296,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":184092,"byte_end":184115,"line_start":297,"line_end":297,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":184120,"byte_end":184123,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ The provided closure is executed over all elements of this stream as","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":184128,"byte_end":184200,"line_start":299,"line_end":299,"column_start":5,"column_end":77}},{"value":"/ they are made available. It is executed inline with calls to","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":184205,"byte_end":184269,"line_start":300,"line_end":300,"column_start":5,"column_end":69}},{"value":"/ [`poll_next`](Stream::poll_next).","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":184274,"byte_end":184311,"line_start":301,"line_end":301,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":184316,"byte_end":184319,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":184324,"byte_end":184400,"line_start":303,"line_end":303,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":184405,"byte_end":184476,"line_start":304,"line_end":304,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":184481,"byte_end":184502,"line_start":305,"line_end":305,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":184507,"byte_end":184510,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":184515,"byte_end":184529,"line_start":307,"line_end":307,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":184534,"byte_end":184537,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":184542,"byte_end":184549,"line_start":309,"line_end":309,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":184554,"byte_end":184595,"line_start":310,"line_end":310,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":184600,"byte_end":184643,"line_start":311,"line_end":311,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":184648,"byte_end":184651,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":184656,"byte_end":184693,"line_start":313,"line_end":313,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.map(|x| x + 3);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":184698,"byte_end":184737,"line_start":314,"line_end":314,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":184742,"byte_end":184745,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":184750,"byte_end":184814,"line_start":316,"line_end":316,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":184819,"byte_end":184828,"line_start":317,"line_end":317,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":184833,"byte_end":184840,"line_start":318,"line_end":318,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4144},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":186411,"byte_end":186420,"line_start":365,"line_end":365,"column_start":8,"column_end":17},"name":"enumerate","qualname":"::stream::stream::StreamExt::enumerate","value":"pub fn enumerate(Self) -> Enumerate<Self> where Self: Sized","parent":{"krate":0,"index":4138},"children":[],"decl_id":null,"docs":" Creates a stream which gives the current iteration count as well as\n the next value.","sig":null,"attributes":[{"value":"/ Creates a stream which gives the current iteration count as well as","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":185018,"byte_end":185089,"line_start":327,"line_end":327,"column_start":5,"column_end":76}},{"value":"/ the next value.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":185094,"byte_end":185113,"line_start":328,"line_end":328,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":185118,"byte_end":185121,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ The stream returned yields pairs `(i, val)`, where `i` is the","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":185126,"byte_end":185191,"line_start":330,"line_end":330,"column_start":5,"column_end":70}},{"value":"/ current index of iteration and `val` is the value returned by the","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":185196,"byte_end":185265,"line_start":331,"line_end":331,"column_start":5,"column_end":74}},{"value":"/ stream.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":185270,"byte_end":185281,"line_start":332,"line_end":332,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":185286,"byte_end":185289,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ `enumerate()` keeps its count as a [`usize`]. If you want to count by a","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":185294,"byte_end":185369,"line_start":334,"line_end":334,"column_start":5,"column_end":80}},{"value":"/ different sized integer, the [`zip`](StreamExt::zip) function provides similar","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":185374,"byte_end":185456,"line_start":335,"line_end":335,"column_start":5,"column_end":87}},{"value":"/ functionality.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":185461,"byte_end":185479,"line_start":336,"line_end":336,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":185484,"byte_end":185487,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ # Overflow Behavior","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":185492,"byte_end":185515,"line_start":338,"line_end":338,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":185520,"byte_end":185523,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ The method does no guarding against overflows, so enumerating more than","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":185528,"byte_end":185603,"line_start":340,"line_end":340,"column_start":5,"column_end":80}},{"value":"/ [`prim@usize::max_value()`] elements either produces the wrong result or panics. If","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":185608,"byte_end":185695,"line_start":341,"line_end":341,"column_start":5,"column_end":92}},{"value":"/ debug assertions are enabled, a panic is guaranteed.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":185700,"byte_end":185756,"line_start":342,"line_end":342,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":185761,"byte_end":185764,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":185769,"byte_end":185781,"line_start":344,"line_end":344,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":185786,"byte_end":185789,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ The returned stream might panic if the to-be-returned index would","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":185794,"byte_end":185863,"line_start":346,"line_end":346,"column_start":5,"column_end":74}},{"value":"/ overflow a [`usize`].","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":185868,"byte_end":185893,"line_start":347,"line_end":347,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":185898,"byte_end":185901,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":185906,"byte_end":185920,"line_start":349,"line_end":349,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":185925,"byte_end":185928,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":185933,"byte_end":185940,"line_start":351,"line_end":351,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":185945,"byte_end":185986,"line_start":352,"line_end":352,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":185991,"byte_end":186034,"line_start":353,"line_end":353,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":186039,"byte_end":186042,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec!['a', 'b', 'c']);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":186047,"byte_end":186098,"line_start":355,"line_end":355,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":186103,"byte_end":186106,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream.enumerate();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":186111,"byte_end":186151,"line_start":357,"line_end":357,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":186156,"byte_end":186159,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some((0, 'a')));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":186164,"byte_end":186216,"line_start":359,"line_end":359,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, Some((1, 'b')));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":186221,"byte_end":186273,"line_start":360,"line_end":360,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, Some((2, 'c')));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":186278,"byte_end":186330,"line_start":361,"line_end":361,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":186335,"byte_end":186377,"line_start":362,"line_end":362,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":186382,"byte_end":186391,"line_start":363,"line_end":363,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":186396,"byte_end":186403,"line_start":364,"line_end":364,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4145},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":187649,"byte_end":187655,"line_start":398,"line_end":398,"column_start":8,"column_end":14},"name":"filter","qualname":"::stream::stream::StreamExt::filter","value":"pub fn filter<Fut, F>(Self, F) -> Filter<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":4138},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream according to the provided\n asynchronous predicate.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream according to the provided","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":186564,"byte_end":186636,"line_start":372,"line_end":372,"column_start":5,"column_end":77}},{"value":"/ asynchronous predicate.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":186641,"byte_end":186668,"line_start":373,"line_end":373,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":186673,"byte_end":186676,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":186681,"byte_end":186756,"line_start":375,"line_end":375,"column_start":5,"column_end":80}},{"value":"/ will be run against them. If the predicate returns a `Future` which","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":186761,"byte_end":186832,"line_start":376,"line_end":376,"column_start":5,"column_end":76}},{"value":"/ resolves to `true`, then the stream will yield the value, but if the","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":186837,"byte_end":186909,"line_start":377,"line_end":377,"column_start":5,"column_end":77}},{"value":"/ predicate returns a `Future` which resolves to `false`, then the value","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":186914,"byte_end":186988,"line_start":378,"line_end":378,"column_start":5,"column_end":79}},{"value":"/ will be discarded and the next value will be produced.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":186993,"byte_end":187051,"line_start":379,"line_end":379,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":187056,"byte_end":187059,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":187064,"byte_end":187140,"line_start":381,"line_end":381,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter` methods in the","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":187145,"byte_end":187219,"line_start":382,"line_end":382,"column_start":5,"column_end":79}},{"value":"/ standard library.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":187224,"byte_end":187245,"line_start":383,"line_end":383,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":187250,"byte_end":187253,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":187258,"byte_end":187272,"line_start":385,"line_end":385,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":187277,"byte_end":187280,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":187285,"byte_end":187292,"line_start":387,"line_end":387,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":187297,"byte_end":187338,"line_start":388,"line_end":388,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":187343,"byte_end":187367,"line_start":389,"line_end":389,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":187372,"byte_end":187415,"line_start":390,"line_end":390,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":187420,"byte_end":187423,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":187428,"byte_end":187466,"line_start":392,"line_end":392,"column_start":5,"column_end":43}},{"value":"/ let evens = stream.filter(|x| future::ready(x % 2 == 0));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":187471,"byte_end":187532,"line_start":393,"line_end":393,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":187537,"byte_end":187540,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![2, 4, 6, 8, 10], evens.collect::<Vec<_>>().await);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":187545,"byte_end":187615,"line_start":395,"line_end":395,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":187620,"byte_end":187629,"line_start":396,"line_end":396,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":187634,"byte_end":187641,"line_start":397,"line_end":397,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4148},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":188980,"byte_end":188990,"line_start":432,"line_end":432,"column_start":8,"column_end":18},"name":"filter_map","qualname":"::stream::stream::StreamExt::filter_map","value":"pub fn filter_map<Fut, T, F>(Self, F) -> FilterMap<Self, Fut, F> where\nF: FnMut(Self::Item) -> Fut, Fut: Future<Output = Option<T>>, Self: Sized","parent":{"krate":0,"index":4138},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream while simultaneously mapping\n them to a different type according to the provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream while simultaneously mapping","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":187883,"byte_end":187958,"line_start":407,"line_end":407,"column_start":5,"column_end":80}},{"value":"/ them to a different type according to the provided asynchronous closure.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":187963,"byte_end":188039,"line_start":408,"line_end":408,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":188044,"byte_end":188047,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":188052,"byte_end":188127,"line_start":410,"line_end":410,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the future returned by the predicate `f` resolves to","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":188132,"byte_end":188207,"line_start":411,"line_end":411,"column_start":5,"column_end":80}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":188212,"byte_end":188288,"line_start":412,"line_end":412,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`] then the next value will be produced.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":188293,"byte_end":188358,"line_start":413,"line_end":413,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":188363,"byte_end":188366,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":188371,"byte_end":188447,"line_start":415,"line_end":415,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter_map` methods in","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":188452,"byte_end":188526,"line_start":416,"line_end":416,"column_start":5,"column_end":79}},{"value":"/ the standard library.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":188531,"byte_end":188556,"line_start":417,"line_end":417,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":188561,"byte_end":188564,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":188569,"byte_end":188583,"line_start":419,"line_end":419,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":188588,"byte_end":188595,"line_start":420,"line_end":420,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":188600,"byte_end":188641,"line_start":421,"line_end":421,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":188646,"byte_end":188689,"line_start":422,"line_end":422,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":188694,"byte_end":188697,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":188702,"byte_end":188740,"line_start":424,"line_end":424,"column_start":5,"column_end":43}},{"value":"/ let evens = stream.filter_map(|x| async move {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":188745,"byte_end":188795,"line_start":425,"line_end":425,"column_start":5,"column_end":55}},{"value":"/     if x % 2 == 0 { Some(x + 1) } else { None }","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":188800,"byte_end":188851,"line_start":426,"line_end":426,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":188856,"byte_end":188863,"line_start":427,"line_end":427,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":188868,"byte_end":188871,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![3, 5, 7, 9, 11], evens.collect::<Vec<_>>().await);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":188876,"byte_end":188946,"line_start":429,"line_end":429,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":188951,"byte_end":188960,"line_start":430,"line_end":430,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":188965,"byte_end":188972,"line_start":431,"line_end":431,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4152},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":190019,"byte_end":190023,"line_start":463,"line_end":463,"column_start":8,"column_end":12},"name":"then","qualname":"::stream::stream::StreamExt::then","value":"pub fn then<Fut, F>(Self, F) -> Then<Self, Fut, F> where F: FnMut(Self::Item)\n-> Fut, Fut: Future, Self: Sized","parent":{"krate":0,"index":4138},"children":[],"decl_id":null,"docs":" Computes from this stream's items new items of a different type using\n an asynchronous closure.","sig":null,"attributes":[{"value":"/ Computes from this stream's items new items of a different type using","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":189222,"byte_end":189295,"line_start":441,"line_end":441,"column_start":5,"column_end":78}},{"value":"/ an asynchronous closure.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":189300,"byte_end":189328,"line_start":442,"line_end":442,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":189333,"byte_end":189336,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will be called with an `Item` once a value is","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":189341,"byte_end":189415,"line_start":444,"line_end":444,"column_start":5,"column_end":79}},{"value":"/ ready, it returns a future which will then be run to completion","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":189420,"byte_end":189487,"line_start":445,"line_end":445,"column_start":5,"column_end":72}},{"value":"/ to produce the next value on this stream.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":189492,"byte_end":189537,"line_start":446,"line_end":446,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":189542,"byte_end":189545,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":189550,"byte_end":189626,"line_start":448,"line_end":448,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":189631,"byte_end":189657,"line_start":449,"line_end":449,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":189662,"byte_end":189665,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":189670,"byte_end":189684,"line_start":451,"line_end":451,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":189689,"byte_end":189692,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":189697,"byte_end":189704,"line_start":453,"line_end":453,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":189709,"byte_end":189750,"line_start":454,"line_end":454,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":189755,"byte_end":189798,"line_start":455,"line_end":455,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":189803,"byte_end":189806,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":189811,"byte_end":189848,"line_start":457,"line_end":457,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.then(|x| async move { x + 3 });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":189853,"byte_end":189908,"line_start":458,"line_end":458,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":189913,"byte_end":189916,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":189921,"byte_end":189985,"line_start":460,"line_end":460,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":189990,"byte_end":189999,"line_start":461,"line_end":461,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":190004,"byte_end":190011,"line_start":462,"line_end":462,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4155},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":190957,"byte_end":190964,"line_start":497,"line_end":497,"column_start":8,"column_end":15},"name":"collect","qualname":"::stream::stream::StreamExt::collect","value":"pub fn collect<C: Default + Extend<Self::Item>>(Self) -> Collect<Self, C>\nwhere Self: Sized","parent":{"krate":0,"index":4138},"children":[],"decl_id":null,"docs":" Transforms a stream into a collection, returning a\n future representing the result of that computation.","sig":null,"attributes":[{"value":"/ Transforms a stream into a collection, returning a","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":190232,"byte_end":190286,"line_start":472,"line_end":472,"column_start":5,"column_end":59}},{"value":"/ future representing the result of that computation.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":190291,"byte_end":190346,"line_start":473,"line_end":473,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":190351,"byte_end":190354,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":190359,"byte_end":190427,"line_start":475,"line_end":475,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":190432,"byte_end":190435,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":190440,"byte_end":190454,"line_start":477,"line_end":477,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":190459,"byte_end":190462,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":190467,"byte_end":190474,"line_start":479,"line_end":479,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":190479,"byte_end":190520,"line_start":480,"line_end":480,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":190525,"byte_end":190556,"line_start":481,"line_end":481,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":190561,"byte_end":190596,"line_start":482,"line_end":482,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":190601,"byte_end":190621,"line_start":483,"line_end":483,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":190626,"byte_end":190629,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":190634,"byte_end":190671,"line_start":485,"line_end":485,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":190676,"byte_end":190679,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":190684,"byte_end":190711,"line_start":487,"line_end":487,"column_start":5,"column_end":32}},{"value":"/     for i in 1..=5 {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":190716,"byte_end":190740,"line_start":488,"line_end":488,"column_start":5,"column_end":29}},{"value":"/         tx.unbounded_send(i).unwrap();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":190745,"byte_end":190787,"line_start":489,"line_end":489,"column_start":5,"column_end":47}},{"value":"/     }","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":190792,"byte_end":190801,"line_start":490,"line_end":490,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":190806,"byte_end":190813,"line_start":491,"line_end":491,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":190818,"byte_end":190821,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ let output = rx.collect::<Vec<i32>>().await;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":190826,"byte_end":190874,"line_start":493,"line_end":493,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4, 5]);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":190879,"byte_end":190923,"line_start":494,"line_end":494,"column_start":5,"column_end":49}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":190928,"byte_end":190937,"line_start":495,"line_end":495,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":190942,"byte_end":190949,"line_start":496,"line_end":496,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4157},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":192083,"byte_end":192088,"line_start":534,"line_end":534,"column_start":8,"column_end":13},"name":"unzip","qualname":"::stream::stream::StreamExt::unzip","value":"pub fn unzip<A, B, FromA, FromB>(Self) -> Unzip<Self, FromA, FromB> where\nFromA: Default + Extend<A>, FromB: Default + Extend<B>, Self: Sized +\nStream<Item = (A, B)>","parent":{"krate":0,"index":4138},"children":[],"decl_id":null,"docs":" Converts a stream of pairs into a future, which\n resolves to pair of containers.","sig":null,"attributes":[{"value":"/ Converts a stream of pairs into a future, which","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":191122,"byte_end":191173,"line_start":504,"line_end":504,"column_start":5,"column_end":56}},{"value":"/ resolves to pair of containers.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":191178,"byte_end":191213,"line_start":505,"line_end":505,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":191218,"byte_end":191221,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ `unzip()` produces a future, which resolves to two","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":191226,"byte_end":191280,"line_start":507,"line_end":507,"column_start":5,"column_end":59}},{"value":"/ collections: one from the left elements of the pairs,","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":191285,"byte_end":191342,"line_start":508,"line_end":508,"column_start":5,"column_end":62}},{"value":"/ and one from the right elements.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":191347,"byte_end":191383,"line_start":509,"line_end":509,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":191388,"byte_end":191391,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":191396,"byte_end":191464,"line_start":511,"line_end":511,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":191469,"byte_end":191472,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":191477,"byte_end":191491,"line_start":513,"line_end":513,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":191496,"byte_end":191499,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":191504,"byte_end":191511,"line_start":515,"line_end":515,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":191516,"byte_end":191557,"line_start":516,"line_end":516,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":191562,"byte_end":191593,"line_start":517,"line_end":517,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":191598,"byte_end":191633,"line_start":518,"line_end":518,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":191638,"byte_end":191658,"line_start":519,"line_end":519,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":191663,"byte_end":191666,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":191671,"byte_end":191708,"line_start":521,"line_end":521,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":191713,"byte_end":191716,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":191721,"byte_end":191748,"line_start":523,"line_end":523,"column_start":5,"column_end":32}},{"value":"/     tx.unbounded_send((1, 2)).unwrap();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":191753,"byte_end":191796,"line_start":524,"line_end":524,"column_start":5,"column_end":48}},{"value":"/     tx.unbounded_send((3, 4)).unwrap();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":191801,"byte_end":191844,"line_start":525,"line_end":525,"column_start":5,"column_end":48}},{"value":"/     tx.unbounded_send((5, 6)).unwrap();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":191849,"byte_end":191892,"line_start":526,"line_end":526,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":191897,"byte_end":191904,"line_start":527,"line_end":527,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":191909,"byte_end":191912,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ let (o1, o2): (Vec<_>, Vec<_>) = rx.unzip().await;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":191917,"byte_end":191971,"line_start":529,"line_end":529,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(o1, vec![1, 3, 5]);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":191976,"byte_end":192010,"line_start":530,"line_end":530,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(o2, vec![2, 4, 6]);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":192015,"byte_end":192049,"line_start":531,"line_end":531,"column_start":5,"column_end":39}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":192054,"byte_end":192063,"line_start":532,"line_end":532,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":192068,"byte_end":192075,"line_start":533,"line_end":533,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4162},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":193384,"byte_end":193390,"line_start":575,"line_end":575,"column_start":8,"column_end":14},"name":"concat","qualname":"::stream::stream::StreamExt::concat","value":"pub fn concat(Self) -> Concat<Self> where Self: Sized,\nSelf::Item: Extend<<<Self as Stream>::Item as IntoIterator>::Item> +\nIntoIterator + Default","parent":{"krate":0,"index":4138},"children":[],"decl_id":null,"docs":" Concatenate all items of a stream into a single extendable\n destination, returning a future representing the end result.","sig":null,"attributes":[{"value":"/ Concatenate all items of a stream into a single extendable","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":192349,"byte_end":192411,"line_start":543,"line_end":543,"column_start":5,"column_end":67}},{"value":"/ destination, returning a future representing the end result.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":192416,"byte_end":192480,"line_start":544,"line_end":544,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":192485,"byte_end":192488,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with the contents","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":192493,"byte_end":192557,"line_start":546,"line_end":546,"column_start":5,"column_end":69}},{"value":"/ of all the subsequent results of the stream. If the stream is","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":192562,"byte_end":192627,"line_start":547,"line_end":547,"column_start":5,"column_end":70}},{"value":"/ empty, the default value will be returned.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":192632,"byte_end":192678,"line_start":548,"line_end":548,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":192683,"byte_end":192686,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ Works with all collections that implement the","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":192691,"byte_end":192740,"line_start":550,"line_end":550,"column_start":5,"column_end":54}},{"value":"/ [`Extend`](std::iter::Extend) trait.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":192745,"byte_end":192785,"line_start":551,"line_end":551,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":192790,"byte_end":192793,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":192798,"byte_end":192812,"line_start":553,"line_end":553,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":192817,"byte_end":192820,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":192825,"byte_end":192832,"line_start":555,"line_end":555,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":192837,"byte_end":192878,"line_start":556,"line_end":556,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":192883,"byte_end":192914,"line_start":557,"line_end":557,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":192919,"byte_end":192954,"line_start":558,"line_end":558,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":192959,"byte_end":192979,"line_start":559,"line_end":559,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":192984,"byte_end":192987,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":192992,"byte_end":193029,"line_start":561,"line_end":561,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":193034,"byte_end":193037,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":193042,"byte_end":193069,"line_start":563,"line_end":563,"column_start":5,"column_end":32}},{"value":"/     for i in (0..3).rev() {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":193074,"byte_end":193105,"line_start":564,"line_end":564,"column_start":5,"column_end":36}},{"value":"/         let n = i * 3;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":193110,"byte_end":193136,"line_start":565,"line_end":565,"column_start":5,"column_end":31}},{"value":"/         tx.unbounded_send(vec![n + 1, n + 2, n + 3]).unwrap();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":193141,"byte_end":193207,"line_start":566,"line_end":566,"column_start":5,"column_end":71}},{"value":"/     }","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":193212,"byte_end":193221,"line_start":567,"line_end":567,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":193226,"byte_end":193233,"line_start":568,"line_end":568,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":193238,"byte_end":193241,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ let result = rx.concat().await;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":193246,"byte_end":193281,"line_start":570,"line_end":570,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":193286,"byte_end":193289,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, vec![7, 8, 9, 4, 5, 6, 1, 2, 3]);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":193294,"byte_end":193350,"line_start":572,"line_end":572,"column_start":5,"column_end":61}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":193355,"byte_end":193364,"line_start":573,"line_end":573,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":193369,"byte_end":193376,"line_start":574,"line_end":574,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4163},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":194410,"byte_end":194415,"line_start":608,"line_end":608,"column_start":8,"column_end":13},"name":"count","qualname":"::stream::stream::StreamExt::count","value":"pub fn count(Self) -> Count<Self> where Self: Sized","parent":{"krate":0,"index":4138},"children":[],"decl_id":null,"docs":" Drives the stream to completion, counting the number of items.","sig":null,"attributes":[{"value":"/ Drives the stream to completion, counting the number of items.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":193620,"byte_end":193686,"line_start":583,"line_end":583,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":193691,"byte_end":193694,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ # Overflow Behavior","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":193699,"byte_end":193722,"line_start":585,"line_end":585,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":193727,"byte_end":193730,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ The method does no guarding against overflows, so counting elements of a","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":193735,"byte_end":193811,"line_start":587,"line_end":587,"column_start":5,"column_end":81}},{"value":"/ stream with more than [`usize::MAX`] elements either produces the wrong","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":193816,"byte_end":193891,"line_start":588,"line_end":588,"column_start":5,"column_end":80}},{"value":"/ result or panics. If debug assertions are enabled, a panic is guaranteed.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":193896,"byte_end":193973,"line_start":589,"line_end":589,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":193978,"byte_end":193981,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":193986,"byte_end":193998,"line_start":591,"line_end":591,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":194003,"byte_end":194006,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ This function might panic if the iterator has more than [`usize::MAX`]","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":194011,"byte_end":194085,"line_start":593,"line_end":593,"column_start":5,"column_end":79}},{"value":"/ elements.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":194090,"byte_end":194103,"line_start":594,"line_end":594,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":194108,"byte_end":194111,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":194116,"byte_end":194130,"line_start":596,"line_end":596,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":194135,"byte_end":194138,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":194143,"byte_end":194150,"line_start":598,"line_end":598,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":194155,"byte_end":194196,"line_start":599,"line_end":599,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":194201,"byte_end":194244,"line_start":600,"line_end":600,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":194249,"byte_end":194252,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":194257,"byte_end":194295,"line_start":602,"line_end":602,"column_start":5,"column_end":43}},{"value":"/ let count = stream.count().await;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":194300,"byte_end":194337,"line_start":603,"line_end":603,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":194342,"byte_end":194345,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(count, 10);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":194350,"byte_end":194376,"line_start":605,"line_end":605,"column_start":5,"column_end":31}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":194381,"byte_end":194390,"line_start":606,"line_end":606,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":194395,"byte_end":194402,"line_start":607,"line_end":607,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4164},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":195371,"byte_end":195376,"line_start":638,"line_end":638,"column_start":8,"column_end":13},"name":"cycle","qualname":"::stream::stream::StreamExt::cycle","value":"pub fn cycle(Self) -> Cycle<Self> where Self: Sized + Clone","parent":{"krate":0,"index":4138},"children":[],"decl_id":null,"docs":" Repeats a stream endlessly.","sig":null,"attributes":[{"value":"/ Repeats a stream endlessly.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":194537,"byte_end":194568,"line_start":615,"line_end":615,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":194573,"byte_end":194576,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ The stream never terminates. Note that you likely want to avoid","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":194581,"byte_end":194648,"line_start":617,"line_end":617,"column_start":5,"column_end":72}},{"value":"/ usage of `collect` or such on the returned stream as it will exhaust","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":194653,"byte_end":194725,"line_start":618,"line_end":618,"column_start":5,"column_end":77}},{"value":"/ available memory as it tries to just fill up all RAM.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":194730,"byte_end":194787,"line_start":619,"line_end":619,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":194792,"byte_end":194795,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":194800,"byte_end":194814,"line_start":621,"line_end":621,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":194819,"byte_end":194822,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":194827,"byte_end":194834,"line_start":623,"line_end":623,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":194839,"byte_end":194880,"line_start":624,"line_end":624,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":194885,"byte_end":194928,"line_start":625,"line_end":625,"column_start":5,"column_end":48}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":194933,"byte_end":194955,"line_start":626,"line_end":626,"column_start":5,"column_end":27}},{"value":"/ let mut s = stream::iter(a.iter()).cycle();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":194960,"byte_end":195007,"line_start":627,"line_end":627,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":195012,"byte_end":195015,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(s.next().await, Some(&1));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":195020,"byte_end":195061,"line_start":629,"line_end":629,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&2));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":195066,"byte_end":195107,"line_start":630,"line_end":630,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&3));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":195112,"byte_end":195153,"line_start":631,"line_end":631,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&1));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":195158,"byte_end":195199,"line_start":632,"line_end":632,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&2));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":195204,"byte_end":195245,"line_start":633,"line_end":633,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&3));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":195250,"byte_end":195291,"line_start":634,"line_end":634,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&1));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":195296,"byte_end":195337,"line_start":635,"line_end":635,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":195342,"byte_end":195351,"line_start":636,"line_end":636,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":195356,"byte_end":195363,"line_start":637,"line_end":637,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4165},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":196326,"byte_end":196330,"line_start":665,"line_end":665,"column_start":8,"column_end":12},"name":"fold","qualname":"::stream::stream::StreamExt::fold","value":"pub fn fold<T, Fut, F>(Self, T, F) -> Fold<Self, Fut, T, F> where\nF: FnMut(T, Self::Item) -> Fut, Fut: Future<Output = T>, Self: Sized","parent":{"krate":0,"index":4138},"children":[],"decl_id":null,"docs":" Execute an accumulating asynchronous computation over a stream,\n collecting all the values into one final result.","sig":null,"attributes":[{"value":"/ Execute an accumulating asynchronous computation over a stream,","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":195511,"byte_end":195578,"line_start":645,"line_end":645,"column_start":5,"column_end":72}},{"value":"/ collecting all the values into one final result.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":195583,"byte_end":195635,"line_start":646,"line_end":646,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":195640,"byte_end":195643,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ This combinator will accumulate all values returned by this stream","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":195648,"byte_end":195718,"line_start":648,"line_end":648,"column_start":5,"column_end":75}},{"value":"/ according to the closure provided. The initial state is also provided to","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":195723,"byte_end":195799,"line_start":649,"line_end":649,"column_start":5,"column_end":81}},{"value":"/ this method and then is returned again by each execution of the closure.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":195804,"byte_end":195880,"line_start":650,"line_end":650,"column_start":5,"column_end":81}},{"value":"/ Once the entire stream has been exhausted the returned future will","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":195885,"byte_end":195955,"line_start":651,"line_end":651,"column_start":5,"column_end":75}},{"value":"/ resolve to this value.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":195960,"byte_end":195986,"line_start":652,"line_end":652,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":195991,"byte_end":195994,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":195999,"byte_end":196013,"line_start":654,"line_end":654,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":196018,"byte_end":196021,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":196026,"byte_end":196033,"line_start":656,"line_end":656,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":196038,"byte_end":196079,"line_start":657,"line_end":657,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":196084,"byte_end":196127,"line_start":658,"line_end":658,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":196132,"byte_end":196135,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(0..6);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":196140,"byte_end":196183,"line_start":660,"line_end":660,"column_start":5,"column_end":48}},{"value":"/ let sum = number_stream.fold(0, |acc, x| async move { acc + x });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":196188,"byte_end":196257,"line_start":661,"line_end":661,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(sum.await, 15);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":196262,"byte_end":196292,"line_start":662,"line_end":662,"column_start":5,"column_end":35}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":196297,"byte_end":196306,"line_start":663,"line_end":663,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":196311,"byte_end":196318,"line_start":664,"line_end":664,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4169},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":197031,"byte_end":197034,"line_start":687,"line_end":687,"column_start":8,"column_end":11},"name":"any","qualname":"::stream::stream::StreamExt::any","value":"pub fn any<Fut, F>(Self, F) -> Any<Self, Fut, F> where F: FnMut(Self::Item) ->\nFut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":4138},"children":[],"decl_id":null,"docs":" Execute predicate over asynchronous stream, and return `true` if any element in stream satisfied a predicate.","sig":null,"attributes":[{"value":"/ Execute predicate over asynchronous stream, and return `true` if any element in stream satisfied a predicate.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":196565,"byte_end":196678,"line_start":674,"line_end":674,"column_start":5,"column_end":118}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":196683,"byte_end":196686,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":196691,"byte_end":196705,"line_start":676,"line_end":676,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":196710,"byte_end":196713,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":196718,"byte_end":196725,"line_start":678,"line_end":678,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":196730,"byte_end":196771,"line_start":679,"line_end":679,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":196776,"byte_end":196819,"line_start":680,"line_end":680,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":196824,"byte_end":196827,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(0..10);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":196832,"byte_end":196876,"line_start":682,"line_end":682,"column_start":5,"column_end":49}},{"value":"/ let contain_three = number_stream.any(|i| async move { i == 3 });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":196881,"byte_end":196950,"line_start":683,"line_end":683,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(contain_three.await, true);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":196955,"byte_end":196997,"line_start":684,"line_end":684,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":197002,"byte_end":197011,"line_start":685,"line_end":685,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":197016,"byte_end":197023,"line_start":686,"line_end":686,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4172},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":197721,"byte_end":197724,"line_start":709,"line_end":709,"column_start":8,"column_end":11},"name":"all","qualname":"::stream::stream::StreamExt::all","value":"pub fn all<Fut, F>(Self, F) -> All<Self, Fut, F> where F: FnMut(Self::Item) ->\nFut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":4138},"children":[],"decl_id":null,"docs":" Execute predicate over asynchronous stream, and return `true` if all element in stream satisfied a predicate.","sig":null,"attributes":[{"value":"/ Execute predicate over asynchronous stream, and return `true` if all element in stream satisfied a predicate.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":197249,"byte_end":197362,"line_start":696,"line_end":696,"column_start":5,"column_end":118}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":197367,"byte_end":197370,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":197375,"byte_end":197389,"line_start":698,"line_end":698,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":197394,"byte_end":197397,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":197402,"byte_end":197409,"line_start":700,"line_end":700,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":197414,"byte_end":197455,"line_start":701,"line_end":701,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":197460,"byte_end":197503,"line_start":702,"line_end":702,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":197508,"byte_end":197511,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(0..10);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":197516,"byte_end":197560,"line_start":704,"line_end":704,"column_start":5,"column_end":49}},{"value":"/ let less_then_twenty = number_stream.all(|i| async move { i < 20 });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":197565,"byte_end":197637,"line_start":705,"line_end":705,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(less_then_twenty.await, true);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":197642,"byte_end":197687,"line_start":706,"line_end":706,"column_start":5,"column_end":50}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":197692,"byte_end":197701,"line_start":707,"line_end":707,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":197706,"byte_end":197713,"line_start":708,"line_end":708,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4175},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":198898,"byte_end":198905,"line_start":749,"line_end":749,"column_start":8,"column_end":15},"name":"flatten","qualname":"::stream::stream::StreamExt::flatten","value":"pub fn flatten(Self) -> Flatten<Self> where Self::Item: Stream, Self: Sized","parent":{"krate":0,"index":4138},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":197939,"byte_end":198004,"line_start":718,"line_end":718,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":198009,"byte_end":198012,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":198017,"byte_end":198031,"line_start":720,"line_end":720,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":198036,"byte_end":198039,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":198044,"byte_end":198051,"line_start":722,"line_end":722,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":198056,"byte_end":198097,"line_start":723,"line_end":723,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":198102,"byte_end":198133,"line_start":724,"line_end":724,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":198138,"byte_end":198173,"line_start":725,"line_end":725,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":198178,"byte_end":198198,"line_start":726,"line_end":726,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":198203,"byte_end":198206,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":198211,"byte_end":198250,"line_start":728,"line_end":728,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":198255,"byte_end":198294,"line_start":729,"line_end":729,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":198299,"byte_end":198338,"line_start":730,"line_end":730,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":198343,"byte_end":198346,"line_start":731,"line_end":731,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":198351,"byte_end":198378,"line_start":732,"line_end":732,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(1).unwrap();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":198383,"byte_end":198422,"line_start":733,"line_end":733,"column_start":5,"column_end":44}},{"value":"/     tx1.unbounded_send(2).unwrap();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":198427,"byte_end":198466,"line_start":734,"line_end":734,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":198471,"byte_end":198478,"line_start":735,"line_end":735,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":198483,"byte_end":198510,"line_start":736,"line_end":736,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(3).unwrap();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":198515,"byte_end":198554,"line_start":737,"line_end":737,"column_start":5,"column_end":44}},{"value":"/     tx2.unbounded_send(4).unwrap();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":198559,"byte_end":198598,"line_start":738,"line_end":738,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":198603,"byte_end":198610,"line_start":739,"line_end":739,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":198615,"byte_end":198642,"line_start":740,"line_end":740,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(rx1).unwrap();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":198647,"byte_end":198688,"line_start":741,"line_end":741,"column_start":5,"column_end":46}},{"value":"/     tx3.unbounded_send(rx2).unwrap();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":198693,"byte_end":198734,"line_start":742,"line_end":742,"column_start":5,"column_end":46}},{"value":"/ });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":198739,"byte_end":198746,"line_start":743,"line_end":743,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":198751,"byte_end":198754,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ let output = rx3.flatten().collect::<Vec<i32>>().await;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":198759,"byte_end":198818,"line_start":745,"line_end":745,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4]);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":198823,"byte_end":198864,"line_start":746,"line_end":746,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":198869,"byte_end":198878,"line_start":747,"line_end":747,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":198883,"byte_end":198890,"line_start":748,"line_end":748,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4176},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":200167,"byte_end":200175,"line_start":782,"line_end":782,"column_start":8,"column_end":16},"name":"flat_map","qualname":"::stream::stream::StreamExt::flat_map","value":"pub fn flat_map<U, F>(Self, F) -> FlatMap<Self, U, F> where\nF: FnMut(Self::Item) -> U, U: Stream, Self: Sized","parent":{"krate":0,"index":4138},"children":[],"decl_id":null,"docs":" Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s.","sig":null,"attributes":[{"value":"/ Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":199082,"byte_end":199154,"line_start":757,"line_end":757,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":199159,"byte_end":199162,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ [`StreamExt::map`] is very useful, but if it produces a `Stream` instead,","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":199167,"byte_end":199244,"line_start":759,"line_end":759,"column_start":5,"column_end":82}},{"value":"/ you would have to chain combinators like `.map(f).flatten()` while this","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":199249,"byte_end":199324,"line_start":760,"line_end":760,"column_start":5,"column_end":80}},{"value":"/ combinator provides ability to write `.flat_map(f)` instead of chaining.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":199329,"byte_end":199405,"line_start":761,"line_end":761,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":199410,"byte_end":199413,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ The provided closure which produce inner streams is executed over all elements","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":199418,"byte_end":199500,"line_start":763,"line_end":763,"column_start":5,"column_end":87}},{"value":"/ of stream as last inner stream is terminated and next stream item is available.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":199505,"byte_end":199588,"line_start":764,"line_end":764,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":199593,"byte_end":199596,"line_start":765,"line_end":765,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":199601,"byte_end":199677,"line_start":766,"line_end":766,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `flat_map` methods in the","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":199682,"byte_end":199758,"line_start":767,"line_end":767,"column_start":5,"column_end":81}},{"value":"/ standard library.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":199763,"byte_end":199784,"line_start":768,"line_end":768,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":199789,"byte_end":199792,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":199797,"byte_end":199811,"line_start":770,"line_end":770,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":199816,"byte_end":199819,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":199824,"byte_end":199831,"line_start":772,"line_end":772,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":199836,"byte_end":199877,"line_start":773,"line_end":773,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":199882,"byte_end":199925,"line_start":774,"line_end":774,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":199930,"byte_end":199933,"line_start":775,"line_end":775,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":199938,"byte_end":199975,"line_start":776,"line_end":776,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.flat_map(|x| stream::iter(vec![x + 3; x]));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":199980,"byte_end":200047,"line_start":777,"line_end":777,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":200052,"byte_end":200055,"line_start":778,"line_end":778,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 5, 6, 6, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":200060,"byte_end":200133,"line_start":779,"line_end":779,"column_start":5,"column_end":78}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":200138,"byte_end":200147,"line_start":780,"line_end":780,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":200152,"byte_end":200159,"line_start":781,"line_end":781,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4179},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":201187,"byte_end":201191,"line_start":815,"line_end":815,"column_start":8,"column_end":12},"name":"scan","qualname":"::stream::stream::StreamExt::scan","value":"pub fn scan<S, B, Fut, F>(Self, S, F) -> Scan<Self, S, Fut, F> where\nF: FnMut(&mut S, Self::Item) -> Fut, Fut: Future<Output = Option<B>>,\nSelf: Sized","parent":{"krate":0,"index":4138},"children":[],"decl_id":null,"docs":" Combinator similar to [`StreamExt::fold`] that holds internal state\n and produces a new stream.","sig":null,"attributes":[{"value":"/ Combinator similar to [`StreamExt::fold`] that holds internal state","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":200378,"byte_end":200449,"line_start":791,"line_end":791,"column_start":5,"column_end":76}},{"value":"/ and produces a new stream.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":200454,"byte_end":200484,"line_start":792,"line_end":792,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":200489,"byte_end":200492,"line_start":793,"line_end":793,"column_start":5,"column_end":8}},{"value":"/ Accepts initial state and closure which will be applied to each element","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":200497,"byte_end":200572,"line_start":794,"line_end":794,"column_start":5,"column_end":80}},{"value":"/ of the stream until provided closure returns `None`. Once `None` is","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":200577,"byte_end":200648,"line_start":795,"line_end":795,"column_start":5,"column_end":76}},{"value":"/ returned, stream will be terminated.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":200653,"byte_end":200693,"line_start":796,"line_end":796,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":200698,"byte_end":200701,"line_start":797,"line_end":797,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":200706,"byte_end":200720,"line_start":798,"line_end":798,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":200725,"byte_end":200728,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":200733,"byte_end":200740,"line_start":800,"line_end":800,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":200745,"byte_end":200786,"line_start":801,"line_end":801,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":200791,"byte_end":200815,"line_start":802,"line_end":802,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":200820,"byte_end":200863,"line_start":803,"line_end":803,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":200868,"byte_end":200871,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":200876,"byte_end":200914,"line_start":805,"line_end":805,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":200919,"byte_end":200922,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.scan(0, |state, x| {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":200927,"byte_end":200971,"line_start":807,"line_end":807,"column_start":5,"column_end":49}},{"value":"/     *state += x;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":200976,"byte_end":200996,"line_start":808,"line_end":808,"column_start":5,"column_end":25}},{"value":"/     future::ready(if *state < 10 { Some(x) } else { None })","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":201001,"byte_end":201064,"line_start":809,"line_end":809,"column_start":5,"column_end":68}},{"value":"/ });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":201069,"byte_end":201076,"line_start":810,"line_end":810,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":201081,"byte_end":201084,"line_start":811,"line_end":811,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":201089,"byte_end":201153,"line_start":812,"line_end":812,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":201158,"byte_end":201167,"line_start":813,"line_end":813,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":201172,"byte_end":201179,"line_start":814,"line_end":814,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4184},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":202238,"byte_end":202248,"line_start":846,"line_end":846,"column_start":8,"column_end":18},"name":"skip_while","qualname":"::stream::stream::StreamExt::skip_while","value":"pub fn skip_while<Fut, F>(Self, F) -> SkipWhile<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":4138},"children":[],"decl_id":null,"docs":" Skip elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements on this stream while the provided asynchronous predicate","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":201460,"byte_end":201534,"line_start":824,"line_end":824,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":201539,"byte_end":201562,"line_start":825,"line_end":825,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":201567,"byte_end":201570,"line_start":826,"line_end":826,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::skip_while`, will skip elements on the","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":201575,"byte_end":201648,"line_start":827,"line_end":827,"column_start":5,"column_end":78}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":201653,"byte_end":201725,"line_start":828,"line_end":828,"column_start":5,"column_end":77}},{"value":"/ returns `false`, all future elements will be returned from the underlying","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":201730,"byte_end":201807,"line_start":829,"line_end":829,"column_start":5,"column_end":82}},{"value":"/ stream.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":201812,"byte_end":201823,"line_start":830,"line_end":830,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":201828,"byte_end":201831,"line_start":831,"line_end":831,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":201836,"byte_end":201850,"line_start":832,"line_end":832,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":201855,"byte_end":201858,"line_start":833,"line_end":833,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":201863,"byte_end":201870,"line_start":834,"line_end":834,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":201875,"byte_end":201916,"line_start":835,"line_end":835,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":201921,"byte_end":201945,"line_start":836,"line_end":836,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":201950,"byte_end":201993,"line_start":837,"line_end":837,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":201998,"byte_end":202001,"line_start":838,"line_end":838,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":202006,"byte_end":202044,"line_start":839,"line_end":839,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":202049,"byte_end":202052,"line_start":840,"line_end":840,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.skip_while(|x| future::ready(*x <= 5));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":202057,"byte_end":202120,"line_start":841,"line_end":841,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":202125,"byte_end":202128,"line_start":842,"line_end":842,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![6, 7, 8, 9, 10], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":202133,"byte_end":202204,"line_start":843,"line_end":843,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":202209,"byte_end":202218,"line_start":844,"line_end":844,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":202223,"byte_end":202230,"line_start":845,"line_end":845,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4187},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":203237,"byte_end":203247,"line_start":876,"line_end":876,"column_start":8,"column_end":18},"name":"take_while","qualname":"::stream::stream::StreamExt::take_while","value":"pub fn take_while<Fut, F>(Self, F) -> TakeWhile<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":4138},"children":[],"decl_id":null,"docs":" Take elements from this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements from this stream while the provided asynchronous predicate","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":202482,"byte_end":202558,"line_start":855,"line_end":855,"column_start":5,"column_end":81}},{"value":"/ resolves to `true`.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":202563,"byte_end":202586,"line_start":856,"line_end":856,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":202591,"byte_end":202594,"line_start":857,"line_end":857,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::take_while`, will take elements from the","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":202599,"byte_end":202674,"line_start":858,"line_end":858,"column_start":5,"column_end":80}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":202679,"byte_end":202751,"line_start":859,"line_end":859,"column_start":5,"column_end":77}},{"value":"/ returns `false`, it will always return that the stream is done.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":202756,"byte_end":202823,"line_start":860,"line_end":860,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":202828,"byte_end":202831,"line_start":861,"line_end":861,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":202836,"byte_end":202850,"line_start":862,"line_end":862,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":202855,"byte_end":202858,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":202863,"byte_end":202870,"line_start":864,"line_end":864,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":202875,"byte_end":202916,"line_start":865,"line_end":865,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":202921,"byte_end":202945,"line_start":866,"line_end":866,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":202950,"byte_end":202993,"line_start":867,"line_end":867,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":202998,"byte_end":203001,"line_start":868,"line_end":868,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":203006,"byte_end":203044,"line_start":869,"line_end":869,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":203049,"byte_end":203052,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.take_while(|x| future::ready(*x <= 5));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":203057,"byte_end":203120,"line_start":871,"line_end":871,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":203125,"byte_end":203128,"line_start":872,"line_end":872,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3, 4, 5], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":203133,"byte_end":203203,"line_start":873,"line_end":873,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":203208,"byte_end":203217,"line_start":874,"line_end":874,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":203222,"byte_end":203229,"line_start":875,"line_end":875,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4190},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":204763,"byte_end":204773,"line_start":921,"line_end":921,"column_start":8,"column_end":18},"name":"take_until","qualname":"::stream::stream::StreamExt::take_until","value":"pub fn take_until<Fut>(Self, Fut) -> TakeUntil<Self, Fut> where Fut: Future,\nSelf: Sized","parent":{"krate":0,"index":4138},"children":[],"decl_id":null,"docs":" Take elements from this stream until the provided future resolves.","sig":null,"attributes":[{"value":"/ Take elements from this stream until the provided future resolves.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":203481,"byte_end":203551,"line_start":885,"line_end":885,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":203556,"byte_end":203559,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ This function will take elements from the stream until the provided","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":203564,"byte_end":203635,"line_start":887,"line_end":887,"column_start":5,"column_end":76}},{"value":"/ stopping future `fut` resolves. Once the `fut` future becomes ready,","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":203640,"byte_end":203712,"line_start":888,"line_end":888,"column_start":5,"column_end":77}},{"value":"/ this stream combinator will always return that the stream is done.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":203717,"byte_end":203787,"line_start":889,"line_end":889,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":203792,"byte_end":203795,"line_start":890,"line_end":890,"column_start":5,"column_end":8}},{"value":"/ The stopping future may return any type. Once the stream is stopped","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":203800,"byte_end":203871,"line_start":891,"line_end":891,"column_start":5,"column_end":76}},{"value":"/ the result of the stopping future may be accessed with `TakeUntil::take_result()`.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":203876,"byte_end":203962,"line_start":892,"line_end":892,"column_start":5,"column_end":91}},{"value":"/ The stream may also be resumed with `TakeUntil::take_future()`.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":203967,"byte_end":204034,"line_start":893,"line_end":893,"column_start":5,"column_end":72}},{"value":"/ See the documentation of [`TakeUntil`] for more information.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":204039,"byte_end":204103,"line_start":894,"line_end":894,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":204108,"byte_end":204111,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":204116,"byte_end":204130,"line_start":896,"line_end":896,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":204135,"byte_end":204138,"line_start":897,"line_end":897,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":204143,"byte_end":204150,"line_start":898,"line_end":898,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":204155,"byte_end":204196,"line_start":899,"line_end":899,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":204201,"byte_end":204225,"line_start":900,"line_end":900,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":204230,"byte_end":204273,"line_start":901,"line_end":901,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":204278,"byte_end":204306,"line_start":902,"line_end":902,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":204311,"byte_end":204314,"line_start":903,"line_end":903,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":204319,"byte_end":204357,"line_start":904,"line_end":904,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":204362,"byte_end":204365,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ let mut i = 0;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":204370,"byte_end":204388,"line_start":906,"line_end":906,"column_start":5,"column_end":23}},{"value":"/ let stop_fut = future::poll_fn(|_cx| {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":204393,"byte_end":204435,"line_start":907,"line_end":907,"column_start":5,"column_end":47}},{"value":"/     i += 1;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":204440,"byte_end":204455,"line_start":908,"line_end":908,"column_start":5,"column_end":20}},{"value":"/     if i <= 5 {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":204460,"byte_end":204479,"line_start":909,"line_end":909,"column_start":5,"column_end":24}},{"value":"/         Poll::Pending","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":204484,"byte_end":204509,"line_start":910,"line_end":910,"column_start":5,"column_end":30}},{"value":"/     } else {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":204514,"byte_end":204530,"line_start":911,"line_end":911,"column_start":5,"column_end":21}},{"value":"/         Poll::Ready(())","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":204535,"byte_end":204562,"line_start":912,"line_end":912,"column_start":5,"column_end":32}},{"value":"/     }","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":204567,"byte_end":204576,"line_start":913,"line_end":913,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":204581,"byte_end":204588,"line_start":914,"line_end":914,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":204593,"byte_end":204596,"line_start":915,"line_end":915,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.take_until(stop_fut);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":204601,"byte_end":204646,"line_start":916,"line_end":916,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":204651,"byte_end":204654,"line_start":917,"line_end":917,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3, 4, 5], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":204659,"byte_end":204729,"line_start":918,"line_end":918,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":204734,"byte_end":204743,"line_start":919,"line_end":919,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":204748,"byte_end":204755,"line_start":920,"line_end":920,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4192},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":206012,"byte_end":206020,"line_start":962,"line_end":962,"column_start":8,"column_end":16},"name":"for_each","qualname":"::stream::stream::StreamExt::for_each","value":"pub fn for_each<Fut, F>(Self, F) -> ForEach<Self, Fut, F> where\nF: FnMut(Self::Item) -> Fut, Fut: Future<Output = ()>, Self: Sized","parent":{"krate":0,"index":4138},"children":[],"decl_id":null,"docs":" Runs this stream to completion, executing the provided asynchronous\n closure for each element on the stream.","sig":null,"attributes":[{"value":"/ Runs this stream to completion, executing the provided asynchronous","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":204954,"byte_end":205025,"line_start":929,"line_end":929,"column_start":5,"column_end":76}},{"value":"/ closure for each element on the stream.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":205030,"byte_end":205073,"line_start":930,"line_end":930,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":205078,"byte_end":205081,"line_start":931,"line_end":931,"column_start":5,"column_end":8}},{"value":"/ The closure provided will be called for each item this stream produces,","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":205086,"byte_end":205161,"line_start":932,"line_end":932,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":205166,"byte_end":205236,"line_start":933,"line_end":933,"column_start":5,"column_end":75}},{"value":"/ before moving on to the next item.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":205241,"byte_end":205279,"line_start":934,"line_end":934,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":205284,"byte_end":205287,"line_start":935,"line_end":935,"column_start":5,"column_end":8}},{"value":"/ The returned value is a `Future` where the `Output` type is `()`; it is","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":205292,"byte_end":205367,"line_start":936,"line_end":936,"column_start":5,"column_end":80}},{"value":"/ executed entirely for its side effects.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":205372,"byte_end":205415,"line_start":937,"line_end":937,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":205420,"byte_end":205423,"line_start":938,"line_end":938,"column_start":5,"column_end":8}},{"value":"/ To process each item in the stream and produce another stream instead","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":205428,"byte_end":205501,"line_start":939,"line_end":939,"column_start":5,"column_end":78}},{"value":"/ of a single future, use `then` instead.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":205506,"byte_end":205549,"line_start":940,"line_end":940,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":205554,"byte_end":205557,"line_start":941,"line_end":941,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":205562,"byte_end":205576,"line_start":942,"line_end":942,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":205581,"byte_end":205584,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":205589,"byte_end":205596,"line_start":944,"line_end":944,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":205601,"byte_end":205642,"line_start":945,"line_end":945,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":205647,"byte_end":205671,"line_start":946,"line_end":946,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":205676,"byte_end":205719,"line_start":947,"line_end":947,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":205724,"byte_end":205727,"line_start":948,"line_end":948,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":205732,"byte_end":205750,"line_start":949,"line_end":949,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":205755,"byte_end":205758,"line_start":950,"line_end":950,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":205763,"byte_end":205768,"line_start":951,"line_end":951,"column_start":5,"column_end":10}},{"value":"/     let fut = stream::repeat(1).take(3).for_each(|item| {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":205773,"byte_end":205834,"line_start":952,"line_end":952,"column_start":5,"column_end":66}},{"value":"/         x += item;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":205839,"byte_end":205861,"line_start":953,"line_end":953,"column_start":5,"column_end":27}},{"value":"/         future::ready(())","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":205866,"byte_end":205895,"line_start":954,"line_end":954,"column_start":5,"column_end":34}},{"value":"/     });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":205900,"byte_end":205911,"line_start":955,"line_end":955,"column_start":5,"column_end":16}},{"value":"/     fut.await;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":205916,"byte_end":205934,"line_start":956,"line_end":956,"column_start":5,"column_end":23}},{"value":"/ }","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":205939,"byte_end":205944,"line_start":957,"line_end":957,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":205949,"byte_end":205952,"line_start":958,"line_end":958,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, 3);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":205957,"byte_end":205978,"line_start":959,"line_end":959,"column_start":5,"column_end":26}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":205983,"byte_end":205992,"line_start":960,"line_end":960,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":205997,"byte_end":206004,"line_start":961,"line_end":961,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4195},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":208182,"byte_end":208201,"line_start":1018,"line_end":1018,"column_start":8,"column_end":27},"name":"for_each_concurrent","qualname":"::stream::stream::StreamExt::for_each_concurrent","value":"pub fn for_each_concurrent<Fut, F,\n                           impl Into<Option<usize>>: Into<Option<usize>>>(Self,\n                                                                          impl Into<Option<usize>>,\n                                                                          F)\n-> ForEachConcurrent<Self, Fut, F> where F: FnMut(Self::Item) -> Fut,\nFut: Future<Output = ()>, Self: Sized","parent":{"krate":0,"index":4138},"children":[],"decl_id":null,"docs":" Runs this stream to completion, executing the provided asynchronous\n closure for each element on the stream concurrently as elements become\n available.","sig":null,"attributes":[{"value":"/ Runs this stream to completion, executing the provided asynchronous","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":206239,"byte_end":206310,"line_start":971,"line_end":971,"column_start":5,"column_end":76}},{"value":"/ closure for each element on the stream concurrently as elements become","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":206315,"byte_end":206389,"line_start":972,"line_end":972,"column_start":5,"column_end":79}},{"value":"/ available.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":206394,"byte_end":206408,"line_start":973,"line_end":973,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":206413,"byte_end":206416,"line_start":974,"line_end":974,"column_start":5,"column_end":8}},{"value":"/ This is similar to [`StreamExt::for_each`], but the futures","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":206421,"byte_end":206484,"line_start":975,"line_end":975,"column_start":5,"column_end":68}},{"value":"/ produced by the closure are run concurrently (but not in parallel--","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":206489,"byte_end":206560,"line_start":976,"line_end":976,"column_start":5,"column_end":76}},{"value":"/ this combinator does not introduce any threads).","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":206565,"byte_end":206617,"line_start":977,"line_end":977,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":206622,"byte_end":206625,"line_start":978,"line_end":978,"column_start":5,"column_end":8}},{"value":"/ The closure provided will be called for each item this stream produces,","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":206630,"byte_end":206705,"line_start":979,"line_end":979,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":206710,"byte_end":206780,"line_start":980,"line_end":980,"column_start":5,"column_end":75}},{"value":"/ concurrently with the other futures produced by the closure.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":206785,"byte_end":206849,"line_start":981,"line_end":981,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":206854,"byte_end":206857,"line_start":982,"line_end":982,"column_start":5,"column_end":8}},{"value":"/ The first argument is an optional limit on the number of concurrent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":206862,"byte_end":206933,"line_start":983,"line_end":983,"column_start":5,"column_end":76}},{"value":"/ futures. If this limit is not `None`, no more than `limit` futures","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":206938,"byte_end":207008,"line_start":984,"line_end":984,"column_start":5,"column_end":75}},{"value":"/ will be run concurrently. The `limit` argument is of type","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":207013,"byte_end":207074,"line_start":985,"line_end":985,"column_start":5,"column_end":66}},{"value":"/ `Into<Option<usize>>`, and so can be provided as either `None`,","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":207079,"byte_end":207146,"line_start":986,"line_end":986,"column_start":5,"column_end":72}},{"value":"/ `Some(10)`, or just `10`. Note: a limit of zero is interpreted as","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":207151,"byte_end":207220,"line_start":987,"line_end":987,"column_start":5,"column_end":74}},{"value":"/ no limit at all, and will have the same result as passing in `None`.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":207225,"byte_end":207297,"line_start":988,"line_end":988,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":207302,"byte_end":207305,"line_start":989,"line_end":989,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":207310,"byte_end":207385,"line_start":990,"line_end":990,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":207390,"byte_end":207447,"line_start":991,"line_end":991,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":207452,"byte_end":207455,"line_start":992,"line_end":992,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":207460,"byte_end":207474,"line_start":993,"line_end":993,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":207479,"byte_end":207482,"line_start":994,"line_end":994,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":207487,"byte_end":207494,"line_start":995,"line_end":995,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":207499,"byte_end":207540,"line_start":996,"line_end":996,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":207545,"byte_end":207579,"line_start":997,"line_end":997,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":207584,"byte_end":207627,"line_start":998,"line_end":998,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":207632,"byte_end":207635,"line_start":999,"line_end":999,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = oneshot::channel();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":207640,"byte_end":207680,"line_start":1000,"line_end":1000,"column_start":5,"column_end":45}},{"value":"/ let (tx2, rx2) = oneshot::channel();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":207685,"byte_end":207725,"line_start":1001,"line_end":1001,"column_start":5,"column_end":45}},{"value":"/ let (tx3, rx3) = oneshot::channel();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":207730,"byte_end":207770,"line_start":1002,"line_end":1002,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":207775,"byte_end":207778,"line_start":1003,"line_end":1003,"column_start":5,"column_end":8}},{"value":"/ let fut = stream::iter(vec![rx1, rx2, rx3]).for_each_concurrent(","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":207783,"byte_end":207851,"line_start":1004,"line_end":1004,"column_start":5,"column_end":73}},{"value":"/     /* limit */ 2,","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":207856,"byte_end":207878,"line_start":1005,"line_end":1005,"column_start":5,"column_end":27}},{"value":"/     |rx| async move {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":207883,"byte_end":207908,"line_start":1006,"line_end":1006,"column_start":5,"column_end":30}},{"value":"/         rx.await.unwrap();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":207913,"byte_end":207943,"line_start":1007,"line_end":1007,"column_start":5,"column_end":35}},{"value":"/     }","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":207948,"byte_end":207957,"line_start":1008,"line_end":1008,"column_start":5,"column_end":14}},{"value":"/ );","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":207962,"byte_end":207968,"line_start":1009,"line_end":1009,"column_start":5,"column_end":11}},{"value":"/ tx1.send(()).unwrap();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":207973,"byte_end":207999,"line_start":1010,"line_end":1010,"column_start":5,"column_end":31}},{"value":"/ tx2.send(()).unwrap();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":208004,"byte_end":208030,"line_start":1011,"line_end":1011,"column_start":5,"column_end":31}},{"value":"/ tx3.send(()).unwrap();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":208035,"byte_end":208061,"line_start":1012,"line_end":1012,"column_start":5,"column_end":31}},{"value":"/ fut.await;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":208066,"byte_end":208080,"line_start":1013,"line_end":1013,"column_start":5,"column_end":19}},{"value":"/ # })","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":208085,"byte_end":208093,"line_start":1014,"line_end":1014,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":208098,"byte_end":208105,"line_start":1015,"line_end":1015,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":208110,"byte_end":208144,"line_start":1016,"line_end":1016,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":208149,"byte_end":208174,"line_start":1017,"line_end":1017,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4199},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":209026,"byte_end":209030,"line_start":1047,"line_end":1047,"column_start":8,"column_end":12},"name":"take","qualname":"::stream::stream::StreamExt::take","value":"pub fn take(Self, usize) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":4138},"children":[],"decl_id":null,"docs":" Creates a new stream of at most `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream of at most `n` items of the underlying stream.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":208518,"byte_end":208589,"line_start":1031,"line_end":1031,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":208594,"byte_end":208597,"line_start":1032,"line_end":1032,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been yielded from this stream then it will always","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":208602,"byte_end":208675,"line_start":1033,"line_end":1033,"column_start":5,"column_end":78}},{"value":"/ return that the stream is done.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":208680,"byte_end":208715,"line_start":1034,"line_end":1034,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":208720,"byte_end":208723,"line_start":1035,"line_end":1035,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":208728,"byte_end":208742,"line_start":1036,"line_end":1036,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":208747,"byte_end":208750,"line_start":1037,"line_end":1037,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":208755,"byte_end":208762,"line_start":1038,"line_end":1038,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":208767,"byte_end":208808,"line_start":1039,"line_end":1039,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":208813,"byte_end":208856,"line_start":1040,"line_end":1040,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":208861,"byte_end":208864,"line_start":1041,"line_end":1041,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10).take(3);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":208869,"byte_end":208915,"line_start":1042,"line_end":1042,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":208920,"byte_end":208923,"line_start":1043,"line_end":1043,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":208928,"byte_end":208992,"line_start":1044,"line_end":1044,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":208997,"byte_end":209006,"line_start":1045,"line_end":1045,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":209011,"byte_end":209018,"line_start":1046,"line_end":1046,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4200},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":209695,"byte_end":209699,"line_start":1070,"line_end":1070,"column_start":8,"column_end":12},"name":"skip","qualname":"::stream::stream::StreamExt::skip","value":"pub fn skip(Self, usize) -> Skip<Self> where Self: Sized","parent":{"krate":0,"index":4138},"children":[],"decl_id":null,"docs":" Creates a new stream which skips `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream which skips `n` items of the underlying stream.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":209168,"byte_end":209240,"line_start":1054,"line_end":1054,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":209245,"byte_end":209248,"line_start":1055,"line_end":1055,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been skipped from this stream then it will always","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":209253,"byte_end":209326,"line_start":1056,"line_end":1056,"column_start":5,"column_end":78}},{"value":"/ return the remaining items on this stream.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":209331,"byte_end":209377,"line_start":1057,"line_end":1057,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":209382,"byte_end":209385,"line_start":1058,"line_end":1058,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":209390,"byte_end":209404,"line_start":1059,"line_end":1059,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":209409,"byte_end":209412,"line_start":1060,"line_end":1060,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":209417,"byte_end":209424,"line_start":1061,"line_end":1061,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":209429,"byte_end":209470,"line_start":1062,"line_end":1062,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":209475,"byte_end":209518,"line_start":1063,"line_end":1063,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":209523,"byte_end":209526,"line_start":1064,"line_end":1064,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10).skip(5);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":209531,"byte_end":209577,"line_start":1065,"line_end":1065,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":209582,"byte_end":209585,"line_start":1066,"line_end":1066,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![6, 7, 8, 9, 10], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":209590,"byte_end":209661,"line_start":1067,"line_end":1067,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":209666,"byte_end":209675,"line_start":1068,"line_end":1068,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":209680,"byte_end":209687,"line_start":1069,"line_end":1069,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4201},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":211320,"byte_end":211324,"line_start":1116,"line_end":1116,"column_start":8,"column_end":12},"name":"fuse","qualname":"::stream::stream::StreamExt::fuse","value":"pub fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":4138},"children":[],"decl_id":null,"docs":" Fuse a stream such that [`poll_next`](Stream::poll_next) will never\n again be called once it has finished. This method can be used to turn\n any `Stream` into a `FusedStream`.","sig":null,"attributes":[{"value":"/ Fuse a stream such that [`poll_next`](Stream::poll_next) will never","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":209837,"byte_end":209908,"line_start":1077,"line_end":1077,"column_start":5,"column_end":76}},{"value":"/ again be called once it has finished. This method can be used to turn","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":209913,"byte_end":209986,"line_start":1078,"line_end":1078,"column_start":5,"column_end":78}},{"value":"/ any `Stream` into a `FusedStream`.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":209991,"byte_end":210029,"line_start":1079,"line_end":1079,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":210034,"byte_end":210037,"line_start":1080,"line_end":1080,"column_start":5,"column_end":8}},{"value":"/ Normally, once a stream has returned [`None`] from","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":210042,"byte_end":210096,"line_start":1081,"line_end":1081,"column_start":5,"column_end":59}},{"value":"/ [`poll_next`](Stream::poll_next) any further calls could exhibit bad","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":210101,"byte_end":210173,"line_start":1082,"line_end":1082,"column_start":5,"column_end":77}},{"value":"/ behavior such as block forever, panic, never return, etc. If it is known","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":210178,"byte_end":210254,"line_start":1083,"line_end":1083,"column_start":5,"column_end":81}},{"value":"/ that [`poll_next`](Stream::poll_next) may be called after stream","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":210259,"byte_end":210327,"line_start":1084,"line_end":1084,"column_start":5,"column_end":73}},{"value":"/ has already finished, then this method can be used to ensure that it has","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":210332,"byte_end":210408,"line_start":1085,"line_end":1085,"column_start":5,"column_end":81}},{"value":"/ defined semantics.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":210413,"byte_end":210435,"line_start":1086,"line_end":1086,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":210440,"byte_end":210443,"line_start":1087,"line_end":1087,"column_start":5,"column_end":8}},{"value":"/ The [`poll_next`](Stream::poll_next) method of a `fuse`d stream","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":210448,"byte_end":210515,"line_start":1088,"line_end":1088,"column_start":5,"column_end":72}},{"value":"/ is guaranteed to return [`None`] after the underlying stream has","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":210520,"byte_end":210588,"line_start":1089,"line_end":1089,"column_start":5,"column_end":73}},{"value":"/ finished.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":210593,"byte_end":210606,"line_start":1090,"line_end":1090,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":210611,"byte_end":210614,"line_start":1091,"line_end":1091,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":210619,"byte_end":210633,"line_start":1092,"line_end":1092,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":210638,"byte_end":210641,"line_start":1093,"line_end":1093,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":210646,"byte_end":210653,"line_start":1094,"line_end":1094,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::block_on_stream;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":210658,"byte_end":210701,"line_start":1095,"line_end":1095,"column_start":5,"column_end":48}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":210706,"byte_end":210749,"line_start":1096,"line_end":1096,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":210754,"byte_end":210782,"line_start":1097,"line_end":1097,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":210787,"byte_end":210790,"line_start":1098,"line_end":1098,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":210795,"byte_end":210813,"line_start":1099,"line_end":1099,"column_start":5,"column_end":23}},{"value":"/ let stream = stream::poll_fn(|_| {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":210818,"byte_end":210856,"line_start":1100,"line_end":1100,"column_start":5,"column_end":43}},{"value":"/     x += 1;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":210861,"byte_end":210876,"line_start":1101,"line_end":1101,"column_start":5,"column_end":20}},{"value":"/     match x {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":210881,"byte_end":210898,"line_start":1102,"line_end":1102,"column_start":5,"column_end":22}},{"value":"/         0..=2 => Poll::Ready(Some(x)),","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":210903,"byte_end":210945,"line_start":1103,"line_end":1103,"column_start":5,"column_end":47}},{"value":"/         3 => Poll::Ready(None),","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":210950,"byte_end":210985,"line_start":1104,"line_end":1104,"column_start":5,"column_end":40}},{"value":"/         _ => panic!(\"should not happen\")","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":210990,"byte_end":211034,"line_start":1105,"line_end":1105,"column_start":5,"column_end":49}},{"value":"/     }","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":211039,"byte_end":211048,"line_start":1106,"line_end":1106,"column_start":5,"column_end":14}},{"value":"/ }).fuse();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":211053,"byte_end":211067,"line_start":1107,"line_end":1107,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":211072,"byte_end":211075,"line_start":1108,"line_end":1108,"column_start":5,"column_end":8}},{"value":"/ let mut iter = block_on_stream(stream);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":211080,"byte_end":211123,"line_start":1109,"line_end":1109,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(Some(1), iter.next());","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":211128,"byte_end":211165,"line_start":1110,"line_end":1110,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(Some(2), iter.next());","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":211170,"byte_end":211207,"line_start":1111,"line_end":1111,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(None, iter.next());","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":211212,"byte_end":211246,"line_start":1112,"line_end":1112,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(None, iter.next());","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":211251,"byte_end":211285,"line_start":1113,"line_end":1113,"column_start":5,"column_end":39}},{"value":"/ // ...","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":211290,"byte_end":211300,"line_start":1114,"line_end":1114,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":211305,"byte_end":211312,"line_start":1115,"line_end":1115,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4202},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":212253,"byte_end":212259,"line_start":1149,"line_end":1149,"column_start":8,"column_end":14},"name":"by_ref","qualname":"::stream::stream::StreamExt::by_ref","value":"pub fn by_ref(&mut Self) -> &mut Self","parent":{"krate":0,"index":4138},"children":[],"decl_id":null,"docs":" Borrows a stream, rather than consuming it.","sig":null,"attributes":[{"value":"/ Borrows a stream, rather than consuming it.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":211449,"byte_end":211496,"line_start":1123,"line_end":1123,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":211501,"byte_end":211504,"line_start":1124,"line_end":1124,"column_start":5,"column_end":8}},{"value":"/ This is useful to allow applying stream adaptors while still retaining","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":211509,"byte_end":211583,"line_start":1125,"line_end":1125,"column_start":5,"column_end":79}},{"value":"/ ownership of the original stream.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":211588,"byte_end":211625,"line_start":1126,"line_end":1126,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":211630,"byte_end":211633,"line_start":1127,"line_end":1127,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":211638,"byte_end":211652,"line_start":1128,"line_end":1128,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":211657,"byte_end":211660,"line_start":1129,"line_end":1129,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":211665,"byte_end":211672,"line_start":1130,"line_end":1130,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":211677,"byte_end":211718,"line_start":1131,"line_end":1131,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":211723,"byte_end":211766,"line_start":1132,"line_end":1132,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":211771,"byte_end":211774,"line_start":1133,"line_end":1133,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..5);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":211779,"byte_end":211819,"line_start":1134,"line_end":1134,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":211824,"byte_end":211827,"line_start":1135,"line_end":1135,"column_start":5,"column_end":8}},{"value":"/ let sum = stream.by_ref()","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":211832,"byte_end":211861,"line_start":1136,"line_end":1136,"column_start":5,"column_end":34}},{"value":"/                 .take(2)","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":211866,"byte_end":211894,"line_start":1137,"line_end":1137,"column_start":5,"column_end":33}},{"value":"/                 .fold(0, |a, b| async move { a + b })","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":211899,"byte_end":211956,"line_start":1138,"line_end":1138,"column_start":5,"column_end":62}},{"value":"/                 .await;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":211961,"byte_end":211988,"line_start":1139,"line_end":1139,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(sum, 3);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":211993,"byte_end":212016,"line_start":1140,"line_end":1140,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":212021,"byte_end":212024,"line_start":1141,"line_end":1141,"column_start":5,"column_end":8}},{"value":"/ // You can use the stream again","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":212029,"byte_end":212064,"line_start":1142,"line_end":1142,"column_start":5,"column_end":40}},{"value":"/ let sum = stream.take(2)","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":212069,"byte_end":212097,"line_start":1143,"line_end":1143,"column_start":5,"column_end":33}},{"value":"/                 .fold(0, |a, b| async move { a + b })","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":212102,"byte_end":212159,"line_start":1144,"line_end":1144,"column_start":5,"column_end":62}},{"value":"/                 .await;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":212164,"byte_end":212191,"line_start":1145,"line_end":1145,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(sum, 7);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":212196,"byte_end":212219,"line_start":1146,"line_end":1146,"column_start":5,"column_end":28}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":212224,"byte_end":212233,"line_start":1147,"line_end":1147,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":212238,"byte_end":212245,"line_start":1148,"line_end":1148,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4203},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":214018,"byte_end":214030,"line_start":1194,"line_end":1194,"column_start":8,"column_end":20},"name":"catch_unwind","qualname":"::stream::stream::StreamExt::catch_unwind","value":"pub fn catch_unwind(Self) -> CatchUnwind<Self> where Self: Sized +\nstd::panic::UnwindSafe","parent":{"krate":0,"index":4138},"children":[],"decl_id":null,"docs":" Catches unwinding panics while polling the stream.","sig":null,"attributes":[{"value":"/ Catches unwinding panics while polling the stream.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":212310,"byte_end":212364,"line_start":1153,"line_end":1153,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":212369,"byte_end":212372,"line_start":1154,"line_end":1154,"column_start":5,"column_end":8}},{"value":"/ Caught panic (if any) will be the last element of the resulting stream.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":212377,"byte_end":212452,"line_start":1155,"line_end":1155,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":212457,"byte_end":212460,"line_start":1156,"line_end":1156,"column_start":5,"column_end":8}},{"value":"/ In general, panics within a stream can propagate all the way out to the","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":212465,"byte_end":212540,"line_start":1157,"line_end":1157,"column_start":5,"column_end":80}},{"value":"/ task level. This combinator makes it possible to halt unwinding within","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":212545,"byte_end":212619,"line_start":1158,"line_end":1158,"column_start":5,"column_end":79}},{"value":"/ the stream itself. It's most commonly used within task executors. This","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":212624,"byte_end":212698,"line_start":1159,"line_end":1159,"column_start":5,"column_end":79}},{"value":"/ method should not be used for error handling.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":212703,"byte_end":212752,"line_start":1160,"line_end":1160,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":212757,"byte_end":212760,"line_start":1161,"line_end":1161,"column_start":5,"column_end":8}},{"value":"/ Note that this method requires the `UnwindSafe` bound from the standard","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":212765,"byte_end":212840,"line_start":1162,"line_end":1162,"column_start":5,"column_end":80}},{"value":"/ library. This isn't always applied automatically, and the standard","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":212845,"byte_end":212915,"line_start":1163,"line_end":1163,"column_start":5,"column_end":75}},{"value":"/ library provides an `AssertUnwindSafe` wrapper type to apply it","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":212920,"byte_end":212987,"line_start":1164,"line_end":1164,"column_start":5,"column_end":72}},{"value":"/ after-the fact. To assist using this method, the [`Stream`] trait is","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":212992,"byte_end":213064,"line_start":1165,"line_end":1165,"column_start":5,"column_end":77}},{"value":"/ also implemented for `AssertUnwindSafe<St>` where `St` implements","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":213069,"byte_end":213138,"line_start":1166,"line_end":1166,"column_start":5,"column_end":74}},{"value":"/ [`Stream`].","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":213143,"byte_end":213158,"line_start":1167,"line_end":1167,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":213163,"byte_end":213166,"line_start":1168,"line_end":1168,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":213171,"byte_end":213235,"line_start":1169,"line_end":1169,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":213240,"byte_end":213297,"line_start":1170,"line_end":1170,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":213302,"byte_end":213305,"line_start":1171,"line_end":1171,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":213310,"byte_end":213324,"line_start":1172,"line_end":1172,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":213329,"byte_end":213332,"line_start":1173,"line_end":1173,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":213337,"byte_end":213344,"line_start":1174,"line_end":1174,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":213349,"byte_end":213390,"line_start":1175,"line_end":1175,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":213395,"byte_end":213438,"line_start":1176,"line_end":1176,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":213443,"byte_end":213446,"line_start":1177,"line_end":1177,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Some(10), None, Some(11)]);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":213451,"byte_end":213513,"line_start":1178,"line_end":1178,"column_start":5,"column_end":67}},{"value":"/ // Panic on second element","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":213518,"byte_end":213548,"line_start":1179,"line_end":1179,"column_start":5,"column_end":35}},{"value":"/ let stream_panicking = stream.map(|o| o.unwrap());","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":213553,"byte_end":213607,"line_start":1180,"line_end":1180,"column_start":5,"column_end":59}},{"value":"/ // Collect all the results","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":213612,"byte_end":213642,"line_start":1181,"line_end":1181,"column_start":5,"column_end":35}},{"value":"/ let stream = stream_panicking.catch_unwind();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":213647,"byte_end":213696,"line_start":1182,"line_end":1182,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":213701,"byte_end":213704,"line_start":1183,"line_end":1183,"column_start":5,"column_end":8}},{"value":"/ let results: Vec<Result<i32, _>> = stream.collect().await;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":213709,"byte_end":213771,"line_start":1184,"line_end":1184,"column_start":5,"column_end":67}},{"value":"/ match results[0] {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":213776,"byte_end":213798,"line_start":1185,"line_end":1185,"column_start":5,"column_end":27}},{"value":"/     Ok(10) => {}","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":213803,"byte_end":213823,"line_start":1186,"line_end":1186,"column_start":5,"column_end":25}},{"value":"/     _ => panic!(\"unexpected result!\"),","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":213828,"byte_end":213870,"line_start":1187,"line_end":1187,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":213875,"byte_end":213880,"line_start":1188,"line_end":1188,"column_start":5,"column_end":10}},{"value":"/ assert!(results[1].is_err());","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":213885,"byte_end":213918,"line_start":1189,"line_end":1189,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(results.len(), 2);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":213923,"byte_end":213956,"line_start":1190,"line_end":1190,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":213961,"byte_end":213970,"line_start":1191,"line_end":1191,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":213975,"byte_end":213982,"line_start":1192,"line_end":1192,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":213987,"byte_end":214010,"line_start":1193,"line_end":1193,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":4204},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":214406,"byte_end":214411,"line_start":1206,"line_end":1206,"column_start":8,"column_end":13},"name":"boxed","qualname":"::stream::stream::StreamExt::boxed","value":"pub fn boxed<'a>(Self) -> BoxStream where Self: Sized + Send + 'a","parent":{"krate":0,"index":4138},"children":[],"decl_id":null,"docs":" Wrap the stream in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the stream in a Box, pinning it.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":214177,"byte_end":214218,"line_start":1201,"line_end":1201,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":214223,"byte_end":214226,"line_start":1202,"line_end":1202,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":214231,"byte_end":214306,"line_start":1203,"line_end":1203,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":214311,"byte_end":214368,"line_start":1204,"line_end":1204,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":214373,"byte_end":214398,"line_start":1205,"line_end":1205,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4206},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":214867,"byte_end":214878,"line_start":1220,"line_end":1220,"column_start":8,"column_end":19},"name":"boxed_local","qualname":"::stream::stream::StreamExt::boxed_local","value":"pub fn boxed_local<'a>(Self) -> LocalBoxStream where Self: Sized + 'a","parent":{"krate":0,"index":4138},"children":[],"decl_id":null,"docs":" Wrap the stream in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the stream in a Box, pinning it.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":214566,"byte_end":214607,"line_start":1213,"line_end":1213,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":214612,"byte_end":214615,"line_start":1214,"line_end":1214,"column_start":5,"column_end":8}},{"value":"/ Similar to `boxed`, but without the `Send` requirement.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":214620,"byte_end":214679,"line_start":1215,"line_end":1215,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":214684,"byte_end":214687,"line_start":1216,"line_end":1216,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":214692,"byte_end":214767,"line_start":1217,"line_end":1217,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":214772,"byte_end":214829,"line_start":1218,"line_end":1218,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":214834,"byte_end":214859,"line_start":1219,"line_end":1219,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4208},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":215771,"byte_end":215779,"line_start":1241,"line_end":1241,"column_start":8,"column_end":16},"name":"buffered","qualname":"::stream::stream::StreamExt::buffered","value":"pub fn buffered(Self, usize) -> Buffered<Self> where Self::Item: Future,\nSelf: Sized","parent":{"krate":0,"index":4138},"children":[],"decl_id":null,"docs":" An adaptor for creating a buffered list of pending futures.","sig":null,"attributes":[{"value":"/ An adaptor for creating a buffered list of pending futures.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":215031,"byte_end":215094,"line_start":1227,"line_end":1227,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":215099,"byte_end":215102,"line_start":1228,"line_end":1228,"column_start":5,"column_end":8}},{"value":"/ If this stream's item can be converted into a future, then this adaptor","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":215107,"byte_end":215182,"line_start":1229,"line_end":1229,"column_start":5,"column_end":80}},{"value":"/ will buffer up to at most `n` futures and then return the outputs in the","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":215187,"byte_end":215263,"line_start":1230,"line_end":1230,"column_start":5,"column_end":81}},{"value":"/ same order as the underlying stream. No more than `n` futures will be","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":215268,"byte_end":215341,"line_start":1231,"line_end":1231,"column_start":5,"column_end":78}},{"value":"/ buffered at any point in time, and less than `n` may also be buffered","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":215346,"byte_end":215419,"line_start":1232,"line_end":1232,"column_start":5,"column_end":78}},{"value":"/ depending on the state of each future.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":215424,"byte_end":215466,"line_start":1233,"line_end":1233,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":215471,"byte_end":215474,"line_start":1234,"line_end":1234,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of each future's output.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":215479,"byte_end":215544,"line_start":1235,"line_end":1235,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":215549,"byte_end":215552,"line_start":1236,"line_end":1236,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":215557,"byte_end":215632,"line_start":1237,"line_end":1237,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":215637,"byte_end":215694,"line_start":1238,"line_end":1238,"column_start":5,"column_end":62}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":215699,"byte_end":215733,"line_start":1239,"line_end":1239,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":215738,"byte_end":215763,"line_start":1240,"line_end":1240,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4209},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":217459,"byte_end":217475,"line_start":1286,"line_end":1286,"column_start":8,"column_end":24},"name":"buffer_unordered","qualname":"::stream::stream::StreamExt::buffer_unordered","value":"pub fn buffer_unordered(Self, usize) -> BufferUnordered<Self> where\nSelf::Item: Future, Self: Sized","parent":{"krate":0,"index":4138},"children":[],"decl_id":null,"docs":" An adaptor for creating a buffered list of pending futures (unordered).","sig":null,"attributes":[{"value":"/ An adaptor for creating a buffered list of pending futures (unordered).","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":215973,"byte_end":216048,"line_start":1249,"line_end":1249,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":216053,"byte_end":216056,"line_start":1250,"line_end":1250,"column_start":5,"column_end":8}},{"value":"/ If this stream's item can be converted into a future, then this adaptor","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":216061,"byte_end":216136,"line_start":1251,"line_end":1251,"column_start":5,"column_end":80}},{"value":"/ will buffer up to `n` futures and then return the outputs in the order","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":216141,"byte_end":216215,"line_start":1252,"line_end":1252,"column_start":5,"column_end":79}},{"value":"/ in which they complete. No more than `n` futures will be buffered at","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":216220,"byte_end":216292,"line_start":1253,"line_end":1253,"column_start":5,"column_end":77}},{"value":"/ any point in time, and less than `n` may also be buffered depending on","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":216297,"byte_end":216371,"line_start":1254,"line_end":1254,"column_start":5,"column_end":79}},{"value":"/ the state of each future.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":216376,"byte_end":216405,"line_start":1255,"line_end":1255,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":216410,"byte_end":216413,"line_start":1256,"line_end":1256,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of each future's output.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":216418,"byte_end":216483,"line_start":1257,"line_end":1257,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":216488,"byte_end":216491,"line_start":1258,"line_end":1258,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":216496,"byte_end":216571,"line_start":1259,"line_end":1259,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":216576,"byte_end":216633,"line_start":1260,"line_end":1260,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":216638,"byte_end":216641,"line_start":1261,"line_end":1261,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":216646,"byte_end":216660,"line_start":1262,"line_end":1262,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":216665,"byte_end":216668,"line_start":1263,"line_end":1263,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":216673,"byte_end":216680,"line_start":1264,"line_end":1264,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":216685,"byte_end":216726,"line_start":1265,"line_end":1265,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":216731,"byte_end":216765,"line_start":1266,"line_end":1266,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":216770,"byte_end":216813,"line_start":1267,"line_end":1267,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":216818,"byte_end":216821,"line_start":1268,"line_end":1268,"column_start":5,"column_end":8}},{"value":"/ let (send_one, recv_one) = oneshot::channel();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":216826,"byte_end":216876,"line_start":1269,"line_end":1269,"column_start":5,"column_end":55}},{"value":"/ let (send_two, recv_two) = oneshot::channel();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":216881,"byte_end":216931,"line_start":1270,"line_end":1270,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":216936,"byte_end":216939,"line_start":1271,"line_end":1271,"column_start":5,"column_end":8}},{"value":"/ let stream_of_futures = stream::iter(vec![recv_one, recv_two]);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":216944,"byte_end":217011,"line_start":1272,"line_end":1272,"column_start":5,"column_end":72}},{"value":"/ let mut buffered = stream_of_futures.buffer_unordered(10);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":217016,"byte_end":217078,"line_start":1273,"line_end":1273,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":217083,"byte_end":217086,"line_start":1274,"line_end":1274,"column_start":5,"column_end":8}},{"value":"/ send_two.send(2i32)?;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":217091,"byte_end":217116,"line_start":1275,"line_end":1275,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(2i32)));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":217121,"byte_end":217175,"line_start":1276,"line_end":1276,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":217180,"byte_end":217183,"line_start":1277,"line_end":1277,"column_start":5,"column_end":8}},{"value":"/ send_one.send(1i32)?;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":217188,"byte_end":217213,"line_start":1278,"line_end":1278,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(1i32)));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":217218,"byte_end":217272,"line_start":1279,"line_end":1279,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":217277,"byte_end":217280,"line_start":1280,"line_end":1280,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffered.next().await, None);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":217285,"byte_end":217329,"line_start":1281,"line_end":1281,"column_start":5,"column_end":49}},{"value":"/ # Ok::<(), i32>(()) }).unwrap();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":217334,"byte_end":217370,"line_start":1282,"line_end":1282,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":217375,"byte_end":217382,"line_start":1283,"line_end":1283,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":217387,"byte_end":217421,"line_start":1284,"line_end":1284,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":217426,"byte_end":217451,"line_start":1285,"line_end":1285,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4210},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":218371,"byte_end":218374,"line_start":1316,"line_end":1316,"column_start":8,"column_end":11},"name":"zip","qualname":"::stream::stream::StreamExt::zip","value":"pub fn zip<St>(Self, St) -> Zip<Self, St> where St: Stream, Self: Sized","parent":{"krate":0,"index":4138},"children":[],"decl_id":null,"docs":" An adapter for zipping two streams together.","sig":null,"attributes":[{"value":"/ An adapter for zipping two streams together.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":217683,"byte_end":217731,"line_start":1294,"line_end":1294,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":217736,"byte_end":217739,"line_start":1295,"line_end":1295,"column_start":5,"column_end":8}},{"value":"/ The zipped stream waits for both streams to produce an item, and then","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":217744,"byte_end":217817,"line_start":1296,"line_end":1296,"column_start":5,"column_end":78}},{"value":"/ returns that pair. If either stream ends then the zipped stream will","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":217822,"byte_end":217894,"line_start":1297,"line_end":1297,"column_start":5,"column_end":77}},{"value":"/ also end.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":217899,"byte_end":217912,"line_start":1298,"line_end":1298,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":217917,"byte_end":217920,"line_start":1299,"line_end":1299,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":217925,"byte_end":217939,"line_start":1300,"line_end":1300,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":217944,"byte_end":217947,"line_start":1301,"line_end":1301,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":217952,"byte_end":217959,"line_start":1302,"line_end":1302,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":217964,"byte_end":218005,"line_start":1303,"line_end":1303,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":218010,"byte_end":218053,"line_start":1304,"line_end":1304,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":218058,"byte_end":218061,"line_start":1305,"line_end":1305,"column_start":5,"column_end":8}},{"value":"/ let stream1 = stream::iter(1..=3);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":218066,"byte_end":218104,"line_start":1306,"line_end":1306,"column_start":5,"column_end":43}},{"value":"/ let stream2 = stream::iter(5..=10);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":218109,"byte_end":218148,"line_start":1307,"line_end":1307,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":218153,"byte_end":218156,"line_start":1308,"line_end":1308,"column_start":5,"column_end":8}},{"value":"/ let vec = stream1.zip(stream2)","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":218161,"byte_end":218195,"line_start":1309,"line_end":1309,"column_start":5,"column_end":39}},{"value":"/                  .collect::<Vec<_>>()","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":218200,"byte_end":218241,"line_start":1310,"line_end":1310,"column_start":5,"column_end":46}},{"value":"/                  .await;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":218246,"byte_end":218274,"line_start":1311,"line_end":1311,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(vec![(1, 5), (2, 6), (3, 7)], vec);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":218279,"byte_end":218329,"line_start":1312,"line_end":1312,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":218334,"byte_end":218343,"line_start":1313,"line_end":1313,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":218348,"byte_end":218355,"line_start":1314,"line_end":1314,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":218360,"byte_end":218363,"line_start":1315,"line_end":1315,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4212},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":219282,"byte_end":219287,"line_start":1347,"line_end":1347,"column_start":8,"column_end":13},"name":"chain","qualname":"::stream::stream::StreamExt::chain","value":"pub fn chain<St>(Self, St) -> Chain<Self, St> where St: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":4138},"children":[],"decl_id":null,"docs":" Adapter for chaining two streams.","sig":null,"attributes":[{"value":"/ Adapter for chaining two streams.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":218555,"byte_end":218592,"line_start":1324,"line_end":1324,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":218597,"byte_end":218600,"line_start":1325,"line_end":1325,"column_start":5,"column_end":8}},{"value":"/ The resulting stream emits elements from the first stream, and when","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":218605,"byte_end":218676,"line_start":1326,"line_end":1326,"column_start":5,"column_end":76}},{"value":"/ first stream reaches the end, emits the elements from the second stream.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":218681,"byte_end":218757,"line_start":1327,"line_end":1327,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":218762,"byte_end":218765,"line_start":1328,"line_end":1328,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":218770,"byte_end":218777,"line_start":1329,"line_end":1329,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":218782,"byte_end":218823,"line_start":1330,"line_end":1330,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":218828,"byte_end":218871,"line_start":1331,"line_end":1331,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":218876,"byte_end":218879,"line_start":1332,"line_end":1332,"column_start":5,"column_end":8}},{"value":"/ let stream1 = stream::iter(vec![Ok(10), Err(false)]);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":218884,"byte_end":218941,"line_start":1333,"line_end":1333,"column_start":5,"column_end":62}},{"value":"/ let stream2 = stream::iter(vec![Err(true), Ok(20)]);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":218946,"byte_end":219002,"line_start":1334,"line_end":1334,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":219007,"byte_end":219010,"line_start":1335,"line_end":1335,"column_start":5,"column_end":8}},{"value":"/ let stream = stream1.chain(stream2);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":219015,"byte_end":219055,"line_start":1336,"line_end":1336,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":219060,"byte_end":219063,"line_start":1337,"line_end":1337,"column_start":5,"column_end":8}},{"value":"/ let result: Vec<_> = stream.collect().await;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":219068,"byte_end":219116,"line_start":1338,"line_end":1338,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(result, vec![","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":219121,"byte_end":219149,"line_start":1339,"line_end":1339,"column_start":5,"column_end":33}},{"value":"/     Ok(10),","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":219154,"byte_end":219169,"line_start":1340,"line_end":1340,"column_start":5,"column_end":20}},{"value":"/     Err(false),","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":219174,"byte_end":219193,"line_start":1341,"line_end":1341,"column_start":5,"column_end":24}},{"value":"/     Err(true),","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":219198,"byte_end":219216,"line_start":1342,"line_end":1342,"column_start":5,"column_end":23}},{"value":"/     Ok(20),","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":219221,"byte_end":219236,"line_start":1343,"line_end":1343,"column_start":5,"column_end":20}},{"value":"/ ]);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":219241,"byte_end":219248,"line_start":1344,"line_end":1344,"column_start":5,"column_end":12}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":219253,"byte_end":219262,"line_start":1345,"line_end":1345,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":219267,"byte_end":219274,"line_start":1346,"line_end":1346,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4214},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":219625,"byte_end":219633,"line_start":1358,"line_end":1358,"column_start":8,"column_end":16},"name":"peekable","qualname":"::stream::stream::StreamExt::peekable","value":"pub fn peekable(Self) -> Peekable<Self> where Self: Sized","parent":{"krate":0,"index":4138},"children":[],"decl_id":null,"docs":" Creates a new stream which exposes a `peek` method.","sig":null,"attributes":[{"value":"/ Creates a new stream which exposes a `peek` method.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":219479,"byte_end":219534,"line_start":1355,"line_end":1355,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":219539,"byte_end":219542,"line_start":1356,"line_end":1356,"column_start":5,"column_end":8}},{"value":"/ Calling `peek` returns a reference to the next item in the stream.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":219547,"byte_end":219617,"line_start":1357,"line_end":1357,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":4215},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":220668,"byte_end":220674,"line_start":1384,"line_end":1384,"column_start":8,"column_end":14},"name":"chunks","qualname":"::stream::stream::StreamExt::chunks","value":"pub fn chunks(Self, usize) -> Chunks<Self> where Self: Sized","parent":{"krate":0,"index":4138},"children":[],"decl_id":null,"docs":" An adaptor for chunking up items of the stream inside a vector.","sig":null,"attributes":[{"value":"/ An adaptor for chunking up items of the stream inside a vector.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":219766,"byte_end":219833,"line_start":1365,"line_end":1365,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":219838,"byte_end":219841,"line_start":1366,"line_end":1366,"column_start":5,"column_end":8}},{"value":"/ This combinator will attempt to pull items from this stream and buffer","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":219846,"byte_end":219920,"line_start":1367,"line_end":1367,"column_start":5,"column_end":79}},{"value":"/ them into a local vector. At most `capacity` items will get buffered","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":219925,"byte_end":219997,"line_start":1368,"line_end":1368,"column_start":5,"column_end":77}},{"value":"/ before they're yielded from the returned stream.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":220002,"byte_end":220054,"line_start":1369,"line_end":1369,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":220059,"byte_end":220062,"line_start":1370,"line_end":1370,"column_start":5,"column_end":8}},{"value":"/ Note that the vectors returned from this iterator may not always have","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":220067,"byte_end":220140,"line_start":1371,"line_end":1371,"column_start":5,"column_end":78}},{"value":"/ `capacity` elements. If the underlying stream ended and only a partial","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":220145,"byte_end":220219,"line_start":1372,"line_end":1372,"column_start":5,"column_end":79}},{"value":"/ vector was created, it'll be returned. Additionally if an error happens","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":220224,"byte_end":220299,"line_start":1373,"line_end":1373,"column_start":5,"column_end":80}},{"value":"/ from the underlying stream then the currently buffered items will be","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":220304,"byte_end":220376,"line_start":1374,"line_end":1374,"column_start":5,"column_end":77}},{"value":"/ yielded.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":220381,"byte_end":220393,"line_start":1375,"line_end":1375,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":220398,"byte_end":220401,"line_start":1376,"line_end":1376,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":220406,"byte_end":220481,"line_start":1377,"line_end":1377,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":220486,"byte_end":220543,"line_start":1378,"line_end":1378,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":220548,"byte_end":220551,"line_start":1379,"line_end":1379,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":220556,"byte_end":220568,"line_start":1380,"line_end":1380,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":220573,"byte_end":220576,"line_start":1381,"line_end":1381,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `capacity` is zero.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":220581,"byte_end":220630,"line_start":1382,"line_end":1382,"column_start":5,"column_end":54}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":220635,"byte_end":220660,"line_start":1383,"line_end":1383,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4216},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":221771,"byte_end":221783,"line_start":1410,"line_end":1410,"column_start":8,"column_end":20},"name":"ready_chunks","qualname":"::stream::stream::StreamExt::ready_chunks","value":"pub fn ready_chunks(Self, usize) -> ReadyChunks<Self> where Self: Sized","parent":{"krate":0,"index":4138},"children":[],"decl_id":null,"docs":" An adaptor for chunking up ready items of the stream inside a vector.","sig":null,"attributes":[{"value":"/ An adaptor for chunking up ready items of the stream inside a vector.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":220835,"byte_end":220908,"line_start":1391,"line_end":1391,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":220913,"byte_end":220916,"line_start":1392,"line_end":1392,"column_start":5,"column_end":8}},{"value":"/ This combinator will attempt to pull ready items from this stream and","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":220921,"byte_end":220994,"line_start":1393,"line_end":1393,"column_start":5,"column_end":78}},{"value":"/ buffer them into a local vector. At most `capacity` items will get","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":220999,"byte_end":221069,"line_start":1394,"line_end":1394,"column_start":5,"column_end":75}},{"value":"/ buffered before they're yielded from the returned stream. If underlying","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":221074,"byte_end":221149,"line_start":1395,"line_end":1395,"column_start":5,"column_end":80}},{"value":"/ stream returns `Poll::Pending`, and collected chunk is not empty, it will","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":221154,"byte_end":221231,"line_start":1396,"line_end":1396,"column_start":5,"column_end":82}},{"value":"/ be immediately returned.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":221236,"byte_end":221264,"line_start":1397,"line_end":1397,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":221269,"byte_end":221272,"line_start":1398,"line_end":1398,"column_start":5,"column_end":8}},{"value":"/ If the underlying stream ended and only a partial vector was created,","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":221277,"byte_end":221350,"line_start":1399,"line_end":1399,"column_start":5,"column_end":78}},{"value":"/ it'll be returned. Additionally if an error happens from the underlying","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":221355,"byte_end":221430,"line_start":1400,"line_end":1400,"column_start":5,"column_end":80}},{"value":"/ stream then the currently buffered items will be yielded.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":221435,"byte_end":221496,"line_start":1401,"line_end":1401,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":221501,"byte_end":221504,"line_start":1402,"line_end":1402,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":221509,"byte_end":221584,"line_start":1403,"line_end":1403,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":221589,"byte_end":221646,"line_start":1404,"line_end":1404,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":221651,"byte_end":221654,"line_start":1405,"line_end":1405,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":221659,"byte_end":221671,"line_start":1406,"line_end":1406,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":221676,"byte_end":221679,"line_start":1407,"line_end":1407,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `capacity` is zero.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":221684,"byte_end":221733,"line_start":1408,"line_end":1408,"column_start":5,"column_end":54}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":221738,"byte_end":221763,"line_start":1409,"line_end":1409,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4217},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":222821,"byte_end":222828,"line_start":1430,"line_end":1430,"column_start":8,"column_end":15},"name":"forward","qualname":"::stream::stream::StreamExt::forward","value":"pub fn forward<S>(Self, S) -> Forward<Self, S> where S: Sink<Self::Ok, Error =\nSelf::Error>, Self: TryStream + Sized","parent":{"krate":0,"index":4138},"children":[],"decl_id":null,"docs":" A future that completes after the given stream has been fully processed\n into the sink and the sink has been flushed and closed.","sig":null,"attributes":[{"value":"/ A future that completes after the given stream has been fully processed","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":221954,"byte_end":222029,"line_start":1417,"line_end":1417,"column_start":5,"column_end":80}},{"value":"/ into the sink and the sink has been flushed and closed.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":222034,"byte_end":222093,"line_start":1418,"line_end":1418,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":222098,"byte_end":222101,"line_start":1419,"line_end":1419,"column_start":5,"column_end":8}},{"value":"/ This future will drive the stream to keep producing items until it is","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":222106,"byte_end":222179,"line_start":1420,"line_end":1420,"column_start":5,"column_end":78}},{"value":"/ exhausted, sending each item to the sink. It will complete once the","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":222184,"byte_end":222255,"line_start":1421,"line_end":1421,"column_start":5,"column_end":76}},{"value":"/ stream is exhausted, the sink has received and flushed all items, and","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":222260,"byte_end":222333,"line_start":1422,"line_end":1422,"column_start":5,"column_end":78}},{"value":"/ the sink is closed. Note that neither the original stream nor provided","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":222338,"byte_end":222412,"line_start":1423,"line_end":1423,"column_start":5,"column_end":79}},{"value":"/ sink will be output by this future. Pass the sink by `Pin<&mut S>`","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":222417,"byte_end":222487,"line_start":1424,"line_end":1424,"column_start":5,"column_end":75}},{"value":"/ (for example, via `forward(&mut sink)` inside an `async` fn/block) in","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":222492,"byte_end":222565,"line_start":1425,"line_end":1425,"column_start":5,"column_end":78}},{"value":"/ order to preserve access to the `Sink`. If the stream produces an error,","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":222570,"byte_end":222646,"line_start":1426,"line_end":1426,"column_start":5,"column_end":81}},{"value":"/ that error will be returned by this future without flushing/closing the sink.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":222651,"byte_end":222732,"line_start":1427,"line_end":1427,"column_start":5,"column_end":86}},{"value":"cfg(feature = \"sink\")","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":222737,"byte_end":222761,"line_start":1428,"line_end":1428,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":4219},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":223963,"byte_end":223968,"line_start":1454,"line_end":1454,"column_start":8,"column_end":13},"name":"split","qualname":"::stream::stream::StreamExt::split","value":"pub fn split<Item>(Self) -> (SplitSink<Self, Item>, SplitStream<Self>) where\nSelf: Sink<Item> + Sized","parent":{"krate":0,"index":4138},"children":[],"decl_id":null,"docs":" Splits this `Stream + Sink` object into separate `Sink` and `Stream`\n objects.","sig":null,"attributes":[{"value":"/ Splits this `Stream + Sink` object into separate `Sink` and `Stream`","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":223386,"byte_end":223458,"line_start":1441,"line_end":1441,"column_start":5,"column_end":77}},{"value":"/ objects.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":223463,"byte_end":223475,"line_start":1442,"line_end":1442,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":223480,"byte_end":223483,"line_start":1443,"line_end":1443,"column_start":5,"column_end":8}},{"value":"/ This can be useful when you want to split ownership between tasks, or","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":223488,"byte_end":223561,"line_start":1444,"line_end":1444,"column_start":5,"column_end":78}},{"value":"/ allow direct interaction between the two objects (e.g. via","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":223566,"byte_end":223628,"line_start":1445,"line_end":1445,"column_start":5,"column_end":67}},{"value":"/ `Sink::send_all`).","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":223633,"byte_end":223655,"line_start":1446,"line_end":1446,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":223660,"byte_end":223663,"line_start":1447,"line_end":1447,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":223668,"byte_end":223743,"line_start":1448,"line_end":1448,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":223748,"byte_end":223805,"line_start":1449,"line_end":1449,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"sink\")","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":223810,"byte_end":223834,"line_start":1450,"line_end":1450,"column_start":5,"column_end":29}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":223891,"byte_end":223925,"line_start":1452,"line_end":1452,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":223930,"byte_end":223955,"line_start":1453,"line_end":1453,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4221},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":224580,"byte_end":224587,"line_start":1470,"line_end":1470,"column_start":8,"column_end":15},"name":"inspect","qualname":"::stream::stream::StreamExt::inspect","value":"pub fn inspect<F>(Self, F) -> Inspect<Self, F> where F: FnMut(&Self::Item) ->\n(), Self: Sized","parent":{"krate":0,"index":4138},"children":[],"decl_id":null,"docs":" Do something with each item of this stream, afterwards passing it on.","sig":null,"attributes":[{"value":"/ Do something with each item of this stream, afterwards passing it on.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":224277,"byte_end":224350,"line_start":1465,"line_end":1465,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":224355,"byte_end":224358,"line_start":1466,"line_end":1466,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `Iterator::inspect` method in the standard","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":224363,"byte_end":224432,"line_start":1467,"line_end":1467,"column_start":5,"column_end":74}},{"value":"/ library where it allows easily inspecting each value as it passes","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":224437,"byte_end":224506,"line_start":1468,"line_end":1468,"column_start":5,"column_end":74}},{"value":"/ through the stream, for example to debug what's going on.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":224511,"byte_end":224572,"line_start":1469,"line_end":1469,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":4223},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":225043,"byte_end":225054,"line_start":1483,"line_end":1483,"column_start":8,"column_end":19},"name":"left_stream","qualname":"::stream::stream::StreamExt::left_stream","value":"pub fn left_stream<B>(Self) -> Either<Self, B> where B: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":4138},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the left-hand variant","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":224764,"byte_end":224839,"line_start":1478,"line_end":1478,"column_start":5,"column_end":80}},{"value":"/ of that `Either`.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":224844,"byte_end":224865,"line_start":1479,"line_end":1479,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":224870,"byte_end":224873,"line_start":1480,"line_end":1480,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_stream` method to write `if`","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":224878,"byte_end":224958,"line_start":1481,"line_end":1481,"column_start":5,"column_end":85}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":224963,"byte_end":225035,"line_start":1482,"line_end":1482,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":4225},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":225507,"byte_end":225519,"line_start":1496,"line_end":1496,"column_start":8,"column_end":20},"name":"right_stream","qualname":"::stream::stream::StreamExt::right_stream","value":"pub fn right_stream<B>(Self) -> Either<B, Self> where B: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":4138},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the right-hand variant","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":225228,"byte_end":225304,"line_start":1491,"line_end":1491,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":225309,"byte_end":225330,"line_start":1492,"line_end":1492,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":225335,"byte_end":225338,"line_start":1493,"line_end":1493,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_stream` method to write `if`","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":225343,"byte_end":225422,"line_start":1494,"line_end":1494,"column_start":5,"column_end":84}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":225427,"byte_end":225499,"line_start":1495,"line_end":1495,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":4227},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":225795,"byte_end":225810,"line_start":1506,"line_end":1506,"column_start":8,"column_end":23},"name":"poll_next_unpin","qualname":"::stream::stream::StreamExt::poll_next_unpin","value":"pub fn poll_next_unpin(&mut Self, &mut Context) -> Poll<Option<Self::Item>>\nwhere Self: Unpin","parent":{"krate":0,"index":4138},"children":[],"decl_id":null,"docs":" A convenience method for calling [`Stream::poll_next`] on [`Unpin`]\n stream types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`Stream::poll_next`] on [`Unpin`]","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":225694,"byte_end":225765,"line_start":1504,"line_end":1504,"column_start":5,"column_end":76}},{"value":"/ stream types.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":225770,"byte_end":225787,"line_start":1505,"line_end":1505,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":4228},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":227911,"byte_end":227927,"line_start":1561,"line_end":1561,"column_start":8,"column_end":24},"name":"select_next_some","qualname":"::stream::stream::StreamExt::select_next_some","value":"pub fn select_next_some(&mut Self) -> SelectNextSome<, Self> where\nSelf: Unpin + FusedStream","parent":{"krate":0,"index":4138},"children":[],"decl_id":null,"docs":" Returns a [`Future`] that resolves when the next item in this stream is\n ready.","sig":null,"attributes":[{"value":"/ Returns a [`Future`] that resolves when the next item in this stream is","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":225957,"byte_end":226032,"line_start":1513,"line_end":1513,"column_start":5,"column_end":80}},{"value":"/ ready.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":226037,"byte_end":226047,"line_start":1514,"line_end":1514,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":226052,"byte_end":226055,"line_start":1515,"line_end":1515,"column_start":5,"column_end":8}},{"value":"/ This is similar to the [`next`][StreamExt::next] method, but it won't","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":226060,"byte_end":226133,"line_start":1516,"line_end":1516,"column_start":5,"column_end":78}},{"value":"/ resolve to [`None`] if used on an empty [`Stream`]. Instead, the","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":226138,"byte_end":226206,"line_start":1517,"line_end":1517,"column_start":5,"column_end":73}},{"value":"/ returned future type will return `true` from","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":226211,"byte_end":226259,"line_start":1518,"line_end":1518,"column_start":5,"column_end":53}},{"value":"/ [`FusedFuture::is_terminated`][] when the [`Stream`] is empty, allowing","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":226264,"byte_end":226339,"line_start":1519,"line_end":1519,"column_start":5,"column_end":80}},{"value":"/ [`select_next_some`][StreamExt::select_next_some] to be easily used with","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":226344,"byte_end":226420,"line_start":1520,"line_end":1520,"column_start":5,"column_end":81}},{"value":"/ the [`select!`] macro.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":226425,"byte_end":226451,"line_start":1521,"line_end":1521,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":226456,"byte_end":226459,"line_start":1522,"line_end":1522,"column_start":5,"column_end":8}},{"value":"/ If the future is polled after this [`Stream`] is empty it will panic.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":226464,"byte_end":226537,"line_start":1523,"line_end":1523,"column_start":5,"column_end":78}},{"value":"/ Using the future with a [`FusedFuture`][]-aware primitive like the","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":226542,"byte_end":226612,"line_start":1524,"line_end":1524,"column_start":5,"column_end":75}},{"value":"/ [`select!`] macro will prevent this.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":226617,"byte_end":226657,"line_start":1525,"line_end":1525,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":226662,"byte_end":226665,"line_start":1526,"line_end":1526,"column_start":5,"column_end":8}},{"value":"/ [`FusedFuture`]: futures_core::future::FusedFuture","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":226670,"byte_end":226724,"line_start":1527,"line_end":1527,"column_start":5,"column_end":59}},{"value":"/ [`FusedFuture::is_terminated`]: futures_core::future::FusedFuture::is_terminated","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":226729,"byte_end":226813,"line_start":1528,"line_end":1528,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":226818,"byte_end":226821,"line_start":1529,"line_end":1529,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":226826,"byte_end":226840,"line_start":1530,"line_end":1530,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":226845,"byte_end":226848,"line_start":1531,"line_end":1531,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":226853,"byte_end":226860,"line_start":1532,"line_end":1532,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":226865,"byte_end":226906,"line_start":1533,"line_end":1533,"column_start":5,"column_end":46}},{"value":"/ use futures::{future, select};","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":226911,"byte_end":226945,"line_start":1534,"line_end":1534,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{StreamExt, FuturesUnordered};","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":226950,"byte_end":227005,"line_start":1535,"line_end":1535,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":227010,"byte_end":227013,"line_start":1536,"line_end":1536,"column_start":5,"column_end":8}},{"value":"/ let mut fut = future::ready(1);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":227018,"byte_end":227053,"line_start":1537,"line_end":1537,"column_start":5,"column_end":40}},{"value":"/ let mut async_tasks = FuturesUnordered::new();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":227058,"byte_end":227108,"line_start":1538,"line_end":1538,"column_start":5,"column_end":55}},{"value":"/ let mut total = 0;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":227113,"byte_end":227135,"line_start":1539,"line_end":1539,"column_start":5,"column_end":27}},{"value":"/ loop {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":227140,"byte_end":227150,"line_start":1540,"line_end":1540,"column_start":5,"column_end":15}},{"value":"/     select! {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":227155,"byte_end":227172,"line_start":1541,"line_end":1541,"column_start":5,"column_end":22}},{"value":"/         num = fut => {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":227177,"byte_end":227203,"line_start":1542,"line_end":1542,"column_start":5,"column_end":31}},{"value":"/             // First, the `ready` future completes.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":227208,"byte_end":227263,"line_start":1543,"line_end":1543,"column_start":5,"column_end":60}},{"value":"/             total += num;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":227268,"byte_end":227297,"line_start":1544,"line_end":1544,"column_start":5,"column_end":34}},{"value":"/             // Then we spawn a new task onto `async_tasks`,","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":227302,"byte_end":227365,"line_start":1545,"line_end":1545,"column_start":5,"column_end":68}},{"value":"/             async_tasks.push(async { 5 });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":227370,"byte_end":227416,"line_start":1546,"line_end":1546,"column_start":5,"column_end":51}},{"value":"/         },","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":227421,"byte_end":227435,"line_start":1547,"line_end":1547,"column_start":5,"column_end":19}},{"value":"/         // On the next iteration of the loop, the task we spawned","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":227440,"byte_end":227509,"line_start":1548,"line_end":1548,"column_start":5,"column_end":74}},{"value":"/         // completes.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":227514,"byte_end":227539,"line_start":1549,"line_end":1549,"column_start":5,"column_end":30}},{"value":"/         num = async_tasks.select_next_some() => {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":227544,"byte_end":227597,"line_start":1550,"line_end":1550,"column_start":5,"column_end":58}},{"value":"/             total += num;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":227602,"byte_end":227631,"line_start":1551,"line_end":1551,"column_start":5,"column_end":34}},{"value":"/         }","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":227636,"byte_end":227649,"line_start":1552,"line_end":1552,"column_start":5,"column_end":18}},{"value":"/         // Finally, both the `ready` future and `async_tasks` have","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":227654,"byte_end":227724,"line_start":1553,"line_end":1553,"column_start":5,"column_end":75}},{"value":"/         // finished, so we enter the `complete` branch.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":227729,"byte_end":227788,"line_start":1554,"line_end":1554,"column_start":5,"column_end":64}},{"value":"/         complete => break,","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":227793,"byte_end":227823,"line_start":1555,"line_end":1555,"column_start":5,"column_end":35}},{"value":"/     }","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":227828,"byte_end":227837,"line_start":1556,"line_end":1556,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":227842,"byte_end":227847,"line_start":1557,"line_end":1557,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(total, 6);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":227852,"byte_end":227877,"line_start":1558,"line_end":1558,"column_start":5,"column_end":30}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":227882,"byte_end":227891,"line_start":1559,"line_end":1559,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":227896,"byte_end":227903,"line_start":1560,"line_end":1560,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":13143},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/and_then.rs","byte_start":369886,"byte_end":369893,"line_start":14,"line_end":14,"column_start":16,"column_end":23},"name":"AndThen","qualname":"::stream::try_stream::and_then::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":13147},{"krate":0,"index":13148},{"krate":0,"index":13149}],"decl_id":null,"docs":" Stream for the [`and_then`](super::TryStreamExt::and_then) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13211},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":331895,"byte_end":331902,"line_start":30,"line_end":30,"column_start":5,"column_end":12},"name":"ErrInto","qualname":"::stream::try_stream::ErrInto","value":"ErrInto {  }","parent":null,"children":[{"krate":0,"index":13214}],"decl_id":null,"docs":" Stream for the [`err_into`](super::TryStreamExt::err_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13289},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":332150,"byte_end":332159,"line_start":37,"line_end":37,"column_start":5,"column_end":14},"name":"InspectOk","qualname":"::stream::try_stream::InspectOk","value":"InspectOk {  }","parent":null,"children":[{"krate":0,"index":13292}],"decl_id":null,"docs":" Stream for the [`inspect_ok`](super::TryStreamExt::inspect_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13367},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":332460,"byte_end":332470,"line_start":44,"line_end":44,"column_start":5,"column_end":15},"name":"InspectErr","qualname":"::stream::try_stream::InspectErr","value":"InspectErr {  }","parent":null,"children":[{"krate":0,"index":13370}],"decl_id":null,"docs":" Stream for the [`inspect_err`](super::TryStreamExt::inspect_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13442},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/into_stream.rs","byte_start":372635,"byte_end":372645,"line_start":12,"line_end":12,"column_start":16,"column_end":26},"name":"IntoStream","qualname":"::stream::try_stream::into_stream::IntoStream","value":"IntoStream {  }","parent":null,"children":[{"krate":0,"index":13444}],"decl_id":null,"docs":" Stream for the [`into_stream`](super::TryStreamExt::into_stream) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13489},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":332896,"byte_end":332901,"line_start":55,"line_end":55,"column_start":5,"column_end":10},"name":"MapOk","qualname":"::stream::try_stream::MapOk","value":"MapOk {  }","parent":null,"children":[{"krate":0,"index":13492}],"decl_id":null,"docs":" Stream for the [`map_ok`](super::TryStreamExt::map_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13567},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":333178,"byte_end":333184,"line_start":62,"line_end":62,"column_start":5,"column_end":11},"name":"MapErr","qualname":"::stream::try_stream::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":13570}],"decl_id":null,"docs":" Stream for the [`map_err`](super::TryStreamExt::map_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13642},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/or_else.rs","byte_start":373993,"byte_end":373999,"line_start":14,"line_end":14,"column_start":16,"column_end":22},"name":"OrElse","qualname":"::stream::try_stream::or_else::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":13646},{"krate":0,"index":13647},{"krate":0,"index":13648}],"decl_id":null,"docs":" Stream for the [`or_else`](super::TryStreamExt::or_else) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13707},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_next.rs","byte_start":376835,"byte_end":376842,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"TryNext","qualname":"::stream::try_stream::try_next::TryNext","value":"TryNext {  }","parent":null,"children":[{"krate":0,"index":13710}],"decl_id":null,"docs":" Future for the [`try_next`](super::TryStreamExt::try_next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_next`](super::TryStreamExt::try_next) method.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_next.rs","byte_start":376668,"byte_end":376738,"line_start":7,"line_end":7,"column_start":1,"column_end":71}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_next.rs","byte_start":376756,"byte_end":376823,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":13715},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_for_each.rs","byte_start":377927,"byte_end":377937,"line_start":12,"line_end":12,"column_start":16,"column_end":26},"name":"TryForEach","qualname":"::stream::try_stream::try_for_each::TryForEach","value":"TryForEach {  }","parent":null,"children":[{"krate":0,"index":13719},{"krate":0,"index":13720},{"krate":0,"index":13721}],"decl_id":null,"docs":" Future for the [`try_for_each`](super::TryStreamExt::try_for_each) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13772},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_filter.rs","byte_start":379823,"byte_end":379832,"line_start":15,"line_end":15,"column_start":16,"column_end":25},"name":"TryFilter","qualname":"::stream::try_stream::try_filter::TryFilter","value":"TryFilter {  }","parent":null,"children":[{"krate":0,"index":13776},{"krate":0,"index":13777},{"krate":0,"index":13778},{"krate":0,"index":13779}],"decl_id":null,"docs":" Stream for the [`try_filter`](super::TryStreamExt::try_filter)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13841},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_filter_map.rs","byte_start":382967,"byte_end":382979,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"name":"TryFilterMap","qualname":"::stream::try_stream::try_filter_map::TryFilterMap","value":"TryFilterMap {  }","parent":null,"children":[{"krate":0,"index":13845},{"krate":0,"index":13846},{"krate":0,"index":13847}],"decl_id":null,"docs":" Stream for the [`try_filter_map`](super::TryStreamExt::try_filter_map)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13906},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_flatten.rs","byte_start":385984,"byte_end":385994,"line_start":13,"line_end":13,"column_start":16,"column_end":26},"name":"TryFlatten","qualname":"::stream::try_stream::try_flatten::TryFlatten","value":"TryFlatten {  }","parent":null,"children":[{"krate":0,"index":13908},{"krate":0,"index":13909}],"decl_id":null,"docs":" Stream for the [`try_flatten`](super::TryStreamExt::try_flatten) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13954},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_collect.rs","byte_start":388172,"byte_end":388182,"line_start":13,"line_end":13,"column_start":16,"column_end":26},"name":"TryCollect","qualname":"::stream::try_stream::try_collect::TryCollect","value":"TryCollect {  }","parent":null,"children":[{"krate":0,"index":13957},{"krate":0,"index":13958}],"decl_id":null,"docs":" Future for the [`try_collect`](super::TryStreamExt::try_collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14003},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_concat.rs","byte_start":389531,"byte_end":389540,"line_start":12,"line_end":12,"column_start":16,"column_end":25},"name":"TryConcat","qualname":"::stream::try_stream::try_concat::TryConcat","value":"TryConcat {  }","parent":null,"children":[{"krate":0,"index":14005},{"krate":0,"index":14006}],"decl_id":null,"docs":" Future for the [`try_concat`](super::TryStreamExt::try_concat) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14043},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_chunks.rs","byte_start":391051,"byte_end":391060,"line_start":17,"line_end":17,"column_start":16,"column_end":25},"name":"TryChunks","qualname":"::stream::try_stream::try_chunks::TryChunks","value":"TryChunks {  }","parent":null,"children":[{"krate":0,"index":14045},{"krate":0,"index":14046},{"krate":0,"index":14047}],"decl_id":null,"docs":" Stream for the [`try_chunks`](super::TryStreamExt::try_chunks) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14095},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_chunks.rs","byte_start":394312,"byte_end":394326,"line_start":116,"line_end":116,"column_start":12,"column_end":26},"name":"TryChunksError","qualname":"::stream::try_stream::try_chunks::TryChunksError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating, that while chunk was collected inner stream produced an error.","sig":null,"attributes":[{"value":"/ Error indicating, that while chunk was collected inner stream produced an error.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_chunks.rs","byte_start":394089,"byte_end":394173,"line_start":112,"line_end":112,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_chunks.rs","byte_start":394174,"byte_end":394177,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ Contains all items that were collected before an error occurred, and the stream error itself.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_chunks.rs","byte_start":394178,"byte_end":394275,"line_start":114,"line_end":114,"column_start":1,"column_end":98}}]},{"kind":"Field","id":{"krate":0,"index":14099},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_chunks.rs","byte_start":394333,"byte_end":394343,"line_start":116,"line_end":116,"column_start":33,"column_end":43},"name":"0","qualname":"::stream::try_stream::try_chunks::TryChunksError::0","value":"std::vec::Vec<T>","parent":{"krate":0,"index":14095},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":14100},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_chunks.rs","byte_start":394345,"byte_end":394350,"line_start":116,"line_end":116,"column_start":45,"column_end":50},"name":"1","qualname":"::stream::try_stream::try_chunks::TryChunksError::1","value":"E","parent":{"krate":0,"index":14095},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14116},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_fold.rs","byte_start":395188,"byte_end":395195,"line_start":12,"line_end":12,"column_start":16,"column_end":23},"name":"TryFold","qualname":"::stream::try_stream::try_fold::TryFold","value":"TryFold {  }","parent":null,"children":[{"krate":0,"index":14121},{"krate":0,"index":14122},{"krate":0,"index":14123},{"krate":0,"index":14124}],"decl_id":null,"docs":" Future for the [`try_fold`](super::TryStreamExt::try_fold) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":5140},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":399643,"byte_end":399653,"line_start":59,"line_end":59,"column_start":8,"column_end":18},"name":"try_unfold","qualname":"::stream::try_stream::try_unfold::try_unfold","value":"pub fn try_unfold<T, F, Fut, Item>(T, F) -> TryUnfold<T, F, Fut> where\nF: FnMut(T) -> Fut, Fut: TryFuture<Ok = Option<(Item, T)>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `TryStream` from a seed and a closure returning a `TryFuture`.","sig":null,"attributes":[{"value":"/ Creates a `TryStream` from a seed and a closure returning a `TryFuture`.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":397786,"byte_end":397862,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":397863,"byte_end":397866,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This function is the dual for the `TryStream::try_fold()` adapter: while","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":397867,"byte_end":397943,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ `TryStream::try_fold()` reduces a `TryStream` to one single value,","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":397944,"byte_end":398014,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/ `try_unfold()` creates a `TryStream` from a seed value.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":398015,"byte_end":398074,"line_start":14,"line_end":14,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":398075,"byte_end":398078,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ `try_unfold()` will call the provided closure with the provided seed, then","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":398079,"byte_end":398157,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ wait for the returned `TryFuture` to complete with `(a, b)`. It will then","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":398158,"byte_end":398235,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/ yield the value `a`, and use `b` as the next internal state.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":398236,"byte_end":398300,"line_start":18,"line_end":18,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":398301,"byte_end":398304,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ If the closure returns `None` instead of `Some(TryFuture)`, then the","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":398305,"byte_end":398377,"line_start":20,"line_end":20,"column_start":1,"column_end":73}},{"value":"/ `try_unfold()` will stop producing items and return `Poll::Ready(None)` in","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":398378,"byte_end":398456,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ future calls to `poll()`.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":398457,"byte_end":398486,"line_start":22,"line_end":22,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":398487,"byte_end":398490,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ In case of error generated by the returned `TryFuture`, the error will be","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":398491,"byte_end":398568,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/ returned by the `TryStream`. The `TryStream` will then yield","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":398569,"byte_end":398633,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"/ `Poll::Ready(None)` in future calls to `poll()`.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":398634,"byte_end":398686,"line_start":26,"line_end":26,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":398687,"byte_end":398690,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This function can typically be used when wanting to go from the \"world of","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":398691,"byte_end":398768,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ futures\" to the \"world of streams\": the provided closure can build a","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":398769,"byte_end":398841,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ `TryFuture` using other library functions working on futures, and","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":398842,"byte_end":398911,"line_start":30,"line_end":30,"column_start":1,"column_end":70}},{"value":"/ `try_unfold()` will turn it into a `TryStream` by repeating the operation.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":398912,"byte_end":398990,"line_start":31,"line_end":31,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":398991,"byte_end":398994,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":398995,"byte_end":399008,"line_start":33,"line_end":33,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":399009,"byte_end":399012,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":399013,"byte_end":399020,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ # #[derive(Debug, PartialEq)]","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":399021,"byte_end":399054,"line_start":36,"line_end":36,"column_start":1,"column_end":34}},{"value":"/ # struct SomeError;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":399055,"byte_end":399078,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":399079,"byte_end":399120,"line_start":38,"line_end":38,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":399121,"byte_end":399167,"line_start":39,"line_end":39,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":399168,"byte_end":399171,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::try_unfold(0, |state| async move {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":399172,"byte_end":399231,"line_start":41,"line_end":41,"column_start":1,"column_end":60}},{"value":"/     if state < 0 {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":399232,"byte_end":399254,"line_start":42,"line_end":42,"column_start":1,"column_end":23}},{"value":"/         return Err(SomeError);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":399255,"byte_end":399289,"line_start":43,"line_end":43,"column_start":1,"column_end":35}},{"value":"/     }","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":399290,"byte_end":399299,"line_start":44,"line_end":44,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":399300,"byte_end":399303,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/     if state <= 2 {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":399304,"byte_end":399327,"line_start":46,"line_end":46,"column_start":1,"column_end":24}},{"value":"/         let next_state = state + 1;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":399328,"byte_end":399367,"line_start":47,"line_end":47,"column_start":1,"column_end":40}},{"value":"/         let yielded = state * 2;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":399368,"byte_end":399404,"line_start":48,"line_end":48,"column_start":1,"column_end":37}},{"value":"/         Ok(Some((yielded, next_state)))","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":399405,"byte_end":399448,"line_start":49,"line_end":49,"column_start":1,"column_end":44}},{"value":"/     } else {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":399449,"byte_end":399465,"line_start":50,"line_end":50,"column_start":1,"column_end":17}},{"value":"/         Ok(None)","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":399466,"byte_end":399486,"line_start":51,"line_end":51,"column_start":1,"column_end":21}},{"value":"/     }","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":399487,"byte_end":399496,"line_start":52,"line_end":52,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":399497,"byte_end":399504,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":399505,"byte_end":399508,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ let result: Result<Vec<i32>, _> = stream.try_collect().await;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":399509,"byte_end":399574,"line_start":55,"line_end":55,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(result, Ok(vec![0, 2, 4]));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":399575,"byte_end":399617,"line_start":56,"line_end":56,"column_start":1,"column_end":43}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":399618,"byte_end":399627,"line_start":57,"line_end":57,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":399628,"byte_end":399635,"line_start":58,"line_end":58,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":14185},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":400016,"byte_end":400025,"line_start":70,"line_end":70,"column_start":16,"column_end":25},"name":"TryUnfold","qualname":"::stream::try_stream::try_unfold::TryUnfold","value":"TryUnfold {  }","parent":null,"children":[{"krate":0,"index":14189},{"krate":0,"index":14190},{"krate":0,"index":14191}],"decl_id":null,"docs":" Stream for the [`try_unfold`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14242},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_skip_while.rs","byte_start":401933,"byte_end":401945,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"name":"TrySkipWhile","qualname":"::stream::try_stream::try_skip_while::TrySkipWhile","value":"TrySkipWhile {  }","parent":null,"children":[{"krate":0,"index":14246},{"krate":0,"index":14247},{"krate":0,"index":14248},{"krate":0,"index":14249},{"krate":0,"index":14250}],"decl_id":null,"docs":" Stream for the [`try_skip_while`](super::TryStreamExt::try_skip_while)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14315},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_take_while.rs","byte_start":405489,"byte_end":405501,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"name":"TryTakeWhile","qualname":"::stream::try_stream::try_take_while::TryTakeWhile","value":"TryTakeWhile {  }","parent":null,"children":[{"krate":0,"index":14319},{"krate":0,"index":14320},{"krate":0,"index":14321},{"krate":0,"index":14322},{"krate":0,"index":14323}],"decl_id":null,"docs":" Stream for the [`try_take_while`](super::TryStreamExt::try_take_while)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14388},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_buffer_unordered.rs","byte_start":409277,"byte_end":409295,"line_start":16,"line_end":16,"column_start":16,"column_end":34},"name":"TryBufferUnordered","qualname":"::stream::try_stream::try_buffer_unordered::TryBufferUnordered","value":"TryBufferUnordered {  }","parent":null,"children":[{"krate":0,"index":14390},{"krate":0,"index":14391},{"krate":0,"index":14392}],"decl_id":null,"docs":" Stream for the\n [`try_buffer_unordered`](super::TryStreamExt::try_buffer_unordered) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14440},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_buffered.rs","byte_start":411835,"byte_end":411846,"line_start":15,"line_end":15,"column_start":16,"column_end":27},"name":"TryBuffered","qualname":"::stream::try_stream::try_buffered::TryBuffered","value":"TryBuffered {  }","parent":null,"children":[{"krate":0,"index":14442},{"krate":0,"index":14443},{"krate":0,"index":14444}],"decl_id":null,"docs":" Stream for the [`try_buffered`](super::TryStreamExt::try_buffered) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14492},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":414378,"byte_end":414398,"line_start":16,"line_end":16,"column_start":16,"column_end":36},"name":"TryForEachConcurrent","qualname":"::stream::try_stream::try_for_each_concurrent::TryForEachConcurrent","value":"TryForEachConcurrent {  }","parent":null,"children":[{"krate":0,"index":14496},{"krate":0,"index":14497},{"krate":0,"index":14498},{"krate":0,"index":14499}],"decl_id":null,"docs":" Future for the\n [`try_for_each_concurrent`](super::TryStreamExt::try_for_each_concurrent)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":5491},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":336393,"byte_end":336405,"line_start":157,"line_end":157,"column_start":11,"column_end":23},"name":"TryStreamExt","qualname":"::stream::try_stream::TryStreamExt","value":"TryStreamExt: TryStream","parent":null,"children":[{"krate":0,"index":5492},{"krate":0,"index":5494},{"krate":0,"index":5497},{"krate":0,"index":5500},{"krate":0,"index":5503},{"krate":0,"index":5506},{"krate":0,"index":5508},{"krate":0,"index":5510},{"krate":0,"index":5511},{"krate":0,"index":5512},{"krate":0,"index":5515},{"krate":0,"index":5518},{"krate":0,"index":5521},{"krate":0,"index":5525},{"krate":0,"index":5527},{"krate":0,"index":5528},{"krate":0,"index":5531},{"krate":0,"index":5535},{"krate":0,"index":5536},{"krate":0,"index":5540},{"krate":0,"index":5541},{"krate":0,"index":5542},{"krate":0,"index":5543}],"decl_id":null,"docs":" Adapters specific to `Result`-returning streams\n","sig":null,"attributes":[{"value":"/ Adapters specific to `Result`-returning streams","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":336331,"byte_end":336382,"line_start":156,"line_end":156,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":5492},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":336947,"byte_end":336955,"line_start":175,"line_end":175,"column_start":8,"column_end":16},"name":"err_into","qualname":"::stream::try_stream::TryStreamExt::err_into","value":"pub fn err_into<E>(Self) -> ErrInto<Self, E> where Self: Sized,\nSelf::Error: Into<E>","parent":{"krate":0,"index":5491},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which converts the error type\n into the one provided.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which converts the error type","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":336423,"byte_end":336497,"line_start":158,"line_end":158,"column_start":5,"column_end":79}},{"value":"/ into the one provided.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":336502,"byte_end":336528,"line_start":159,"line_end":159,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":336533,"byte_end":336536,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":336541,"byte_end":336555,"line_start":161,"line_end":161,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":336560,"byte_end":336563,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":336568,"byte_end":336575,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":336580,"byte_end":336621,"line_start":164,"line_end":164,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":336626,"byte_end":336672,"line_start":165,"line_end":165,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":336677,"byte_end":336680,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":336685,"byte_end":336705,"line_start":167,"line_end":167,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(()), Err(5i32)])","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":336710,"byte_end":336755,"line_start":168,"line_end":168,"column_start":5,"column_end":50}},{"value":"/         .err_into::<i64>();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":336760,"byte_end":336791,"line_start":169,"line_end":169,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":336796,"byte_end":336799,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(())));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":336804,"byte_end":336858,"line_start":171,"line_end":171,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(stream.try_next().await, Err(5i64));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":336863,"byte_end":336914,"line_start":172,"line_end":172,"column_start":5,"column_end":56}},{"value":"/ # })","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":336919,"byte_end":336927,"line_start":173,"line_end":173,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":336932,"byte_end":336939,"line_start":174,"line_end":174,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5494},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":337651,"byte_end":337657,"line_start":200,"line_end":200,"column_start":8,"column_end":14},"name":"map_ok","qualname":"::stream::try_stream::TryStreamExt::map_ok","value":"pub fn map_ok<T, F>(Self, F) -> MapOk<Self, F> where Self: Sized,\nF: FnMut(Self::Ok) -> T","parent":{"krate":0,"index":5491},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which maps the success value\n using the provided closure.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which maps the success value","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":337131,"byte_end":337204,"line_start":183,"line_end":183,"column_start":5,"column_end":78}},{"value":"/ using the provided closure.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":337209,"byte_end":337240,"line_start":184,"line_end":184,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":337245,"byte_end":337248,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":337253,"byte_end":337267,"line_start":186,"line_end":186,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":337272,"byte_end":337275,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":337280,"byte_end":337287,"line_start":188,"line_end":188,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":337292,"byte_end":337333,"line_start":189,"line_end":189,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":337338,"byte_end":337384,"line_start":190,"line_end":190,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":337389,"byte_end":337392,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":337397,"byte_end":337417,"line_start":192,"line_end":192,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(5), Err(0)])","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":337422,"byte_end":337463,"line_start":193,"line_end":193,"column_start":5,"column_end":46}},{"value":"/         .map_ok(|x| x + 2);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":337468,"byte_end":337499,"line_start":194,"line_end":194,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":337504,"byte_end":337507,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(7)));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":337512,"byte_end":337565,"line_start":196,"line_end":196,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(0));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":337570,"byte_end":337618,"line_start":197,"line_end":197,"column_start":5,"column_end":53}},{"value":"/ # })","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":337623,"byte_end":337631,"line_start":198,"line_end":198,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":337636,"byte_end":337643,"line_start":199,"line_end":199,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5497},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":338366,"byte_end":338373,"line_start":225,"line_end":225,"column_start":8,"column_end":15},"name":"map_err","qualname":"::stream::try_stream::TryStreamExt::map_err","value":"pub fn map_err<E, F>(Self, F) -> MapErr<Self, F> where Self: Sized,\nF: FnMut(Self::Error) -> E","parent":{"krate":0,"index":5491},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which maps the error value\n using the provided closure.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which maps the error value","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":337847,"byte_end":337918,"line_start":208,"line_end":208,"column_start":5,"column_end":76}},{"value":"/ using the provided closure.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":337923,"byte_end":337954,"line_start":209,"line_end":209,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":337959,"byte_end":337962,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":337967,"byte_end":337981,"line_start":211,"line_end":211,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":337986,"byte_end":337989,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":337994,"byte_end":338001,"line_start":213,"line_end":213,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":338006,"byte_end":338047,"line_start":214,"line_end":214,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":338052,"byte_end":338098,"line_start":215,"line_end":215,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":338103,"byte_end":338106,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":338111,"byte_end":338131,"line_start":217,"line_end":217,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(5), Err(0)])","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":338136,"byte_end":338177,"line_start":218,"line_end":218,"column_start":5,"column_end":46}},{"value":"/         .map_err(|x| x + 2);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":338182,"byte_end":338214,"line_start":219,"line_end":219,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":338219,"byte_end":338222,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(5)));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":338227,"byte_end":338280,"line_start":221,"line_end":221,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(2));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":338285,"byte_end":338333,"line_start":222,"line_end":222,"column_start":5,"column_end":53}},{"value":"/ # })","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":338338,"byte_end":338346,"line_start":223,"line_end":223,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":338351,"byte_end":338358,"line_start":224,"line_end":224,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5500},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":339978,"byte_end":339986,"line_start":271,"line_end":271,"column_start":8,"column_end":16},"name":"and_then","qualname":"::stream::try_stream::TryStreamExt::and_then","value":"pub fn and_then<Fut, F>(Self, F) -> AndThen<Self, Fut, F> where\nF: FnMut(Self::Ok) -> Fut, Fut: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":5491},"children":[],"decl_id":null,"docs":" Chain on a computation for when a value is ready, passing the successful\n results to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when a value is ready, passing the successful","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":338565,"byte_end":338641,"line_start":233,"line_end":233,"column_start":5,"column_end":81}},{"value":"/ results to the provided closure `f`.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":338646,"byte_end":338686,"line_start":234,"line_end":234,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":338691,"byte_end":338694,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ This function can be used to run a unit of work when the next successful","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":338699,"byte_end":338775,"line_start":236,"line_end":236,"column_start":5,"column_end":81}},{"value":"/ value on a stream is ready. The closure provided will be yielded a value","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":338780,"byte_end":338856,"line_start":237,"line_end":237,"column_start":5,"column_end":81}},{"value":"/ when ready, and the returned future will then be run to completion to","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":338861,"byte_end":338934,"line_start":238,"line_end":238,"column_start":5,"column_end":78}},{"value":"/ produce the next value on this stream.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":338939,"byte_end":338981,"line_start":239,"line_end":239,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":338986,"byte_end":338989,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ Any errors produced by this stream will not be passed to the closure,","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":338994,"byte_end":339067,"line_start":241,"line_end":241,"column_start":5,"column_end":78}},{"value":"/ and will be passed through.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":339072,"byte_end":339103,"line_start":242,"line_end":242,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":339108,"byte_end":339111,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `TryFuture` trait","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":339116,"byte_end":339190,"line_start":244,"line_end":244,"column_start":5,"column_end":79}},{"value":"/ and can represent some more work to be done before the composed stream","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":339195,"byte_end":339269,"line_start":245,"line_end":245,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":339274,"byte_end":339290,"line_start":246,"line_end":246,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":339295,"byte_end":339298,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":339303,"byte_end":339374,"line_start":248,"line_end":248,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":339379,"byte_end":339405,"line_start":249,"line_end":249,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":339410,"byte_end":339413,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ To process the entire stream and return a single future representing","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":339418,"byte_end":339490,"line_start":251,"line_end":251,"column_start":5,"column_end":77}},{"value":"/ success or error, use `try_for_each` instead.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":339495,"byte_end":339544,"line_start":252,"line_end":252,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":339549,"byte_end":339552,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":339557,"byte_end":339571,"line_start":254,"line_end":254,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":339576,"byte_end":339579,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":339584,"byte_end":339591,"line_start":256,"line_end":256,"column_start":5,"column_end":12}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":339596,"byte_end":339627,"line_start":257,"line_end":257,"column_start":5,"column_end":36}},{"value":"/ use futures::future;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":339632,"byte_end":339656,"line_start":258,"line_end":258,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":339661,"byte_end":339699,"line_start":259,"line_end":259,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":339704,"byte_end":339707,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ let (_tx, rx) = mpsc::channel::<Result<i32, ()>>(1);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":339712,"byte_end":339768,"line_start":261,"line_end":261,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":339773,"byte_end":339776,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ let rx = rx.and_then(|result| {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":339781,"byte_end":339816,"line_start":263,"line_end":263,"column_start":5,"column_end":40}},{"value":"/     future::ok(if result % 2 == 0 {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":339821,"byte_end":339860,"line_start":264,"line_end":264,"column_start":5,"column_end":44}},{"value":"/         Some(result)","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":339865,"byte_end":339889,"line_start":265,"line_end":265,"column_start":5,"column_end":29}},{"value":"/     } else {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":339894,"byte_end":339910,"line_start":266,"line_end":266,"column_start":5,"column_end":21}},{"value":"/         None","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":339915,"byte_end":339931,"line_start":267,"line_end":267,"column_start":5,"column_end":21}},{"value":"/     })","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":339936,"byte_end":339946,"line_start":268,"line_end":268,"column_start":5,"column_end":15}},{"value":"/ });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":339951,"byte_end":339958,"line_start":269,"line_end":269,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":339963,"byte_end":339970,"line_start":270,"line_end":270,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5503},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":341138,"byte_end":341145,"line_start":297,"line_end":297,"column_start":8,"column_end":15},"name":"or_else","qualname":"::stream::try_stream::TryStreamExt::or_else","value":"pub fn or_else<Fut, F>(Self, F) -> OrElse<Self, Fut, F> where\nF: FnMut(Self::Error) -> Fut, Fut: TryFuture<Ok = Self::Ok>, Self: Sized","parent":{"krate":0,"index":5491},"children":[],"decl_id":null,"docs":" Chain on a computation for when an error happens, passing the\n erroneous result to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when an error happens, passing the","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":340239,"byte_end":340304,"line_start":280,"line_end":280,"column_start":5,"column_end":70}},{"value":"/ erroneous result to the provided closure `f`.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":340309,"byte_end":340358,"line_start":281,"line_end":281,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":340363,"byte_end":340366,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ This function can be used to run a unit of work and attempt to recover from","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":340371,"byte_end":340450,"line_start":283,"line_end":283,"column_start":5,"column_end":84}},{"value":"/ an error if one happens. The closure provided will be yielded an error","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":340455,"byte_end":340529,"line_start":284,"line_end":284,"column_start":5,"column_end":79}},{"value":"/ when one appears, and the returned future will then be run to completion","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":340534,"byte_end":340610,"line_start":285,"line_end":285,"column_start":5,"column_end":81}},{"value":"/ to produce the next value on this stream.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":340615,"byte_end":340660,"line_start":286,"line_end":286,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":340665,"byte_end":340668,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ Any successful values produced by this stream will not be passed to the","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":340673,"byte_end":340748,"line_start":288,"line_end":288,"column_start":5,"column_end":80}},{"value":"/ closure, and will be passed through.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":340753,"byte_end":340793,"line_start":289,"line_end":289,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":340798,"byte_end":340801,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the [`TryFuture`](futures_core::future::TryFuture) trait","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":340806,"byte_end":340915,"line_start":291,"line_end":291,"column_start":5,"column_end":114}},{"value":"/ and can represent some more work to be done before the composed stream","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":340920,"byte_end":340994,"line_start":292,"line_end":292,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":340999,"byte_end":341015,"line_start":293,"line_end":293,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":341020,"byte_end":341023,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":341028,"byte_end":341099,"line_start":295,"line_end":295,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":341104,"byte_end":341130,"line_start":296,"line_end":296,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":5506},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":341697,"byte_end":341707,"line_start":312,"line_end":312,"column_start":8,"column_end":18},"name":"inspect_ok","qualname":"::stream::try_stream::TryStreamExt::inspect_ok","value":"pub fn inspect_ok<F>(Self, F) -> InspectOk<Self, F> where F: FnMut(&Self::Ok)\n-> (), Self: Sized","parent":{"krate":0,"index":5491},"children":[],"decl_id":null,"docs":" Do something with the success value of this stream, afterwards passing\n it on.","sig":null,"attributes":[{"value":"/ Do something with the success value of this stream, afterwards passing","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":341394,"byte_end":341468,"line_start":306,"line_end":306,"column_start":5,"column_end":79}},{"value":"/ it on.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":341473,"byte_end":341483,"line_start":307,"line_end":307,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":341488,"byte_end":341491,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `StreamExt::inspect` method where it allows","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":341496,"byte_end":341566,"line_start":309,"line_end":309,"column_start":5,"column_end":75}},{"value":"/ easily inspecting the success value as it passes through the stream, for","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":341571,"byte_end":341647,"line_start":310,"line_end":310,"column_start":5,"column_end":81}},{"value":"/ example to debug what's going on.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":341652,"byte_end":341689,"line_start":311,"line_end":311,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":5508},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":342196,"byte_end":342207,"line_start":325,"line_end":325,"column_start":8,"column_end":19},"name":"inspect_err","qualname":"::stream::try_stream::TryStreamExt::inspect_err","value":"pub fn inspect_err<F>(Self, F) -> InspectErr<Self, F> where\nF: FnMut(&Self::Error) -> (), Self: Sized","parent":{"krate":0,"index":5491},"children":[],"decl_id":null,"docs":" Do something with the error value of this stream, afterwards passing it on.","sig":null,"attributes":[{"value":"/ Do something with the error value of this stream, afterwards passing it on.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":341905,"byte_end":341984,"line_start":320,"line_end":320,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":341989,"byte_end":341992,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `StreamExt::inspect` method where it allows","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":341997,"byte_end":342067,"line_start":322,"line_end":322,"column_start":5,"column_end":75}},{"value":"/ easily inspecting the error value as it passes through the stream, for","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":342072,"byte_end":342146,"line_start":323,"line_end":323,"column_start":5,"column_end":79}},{"value":"/ example to debug what's going on.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":342151,"byte_end":342188,"line_start":324,"line_end":324,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":5510},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":343128,"byte_end":343139,"line_start":354,"line_end":354,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::stream::try_stream::TryStreamExt::into_stream","value":"pub fn into_stream(Self) -> IntoStream<Self> where Self: Sized","parent":{"krate":0,"index":5491},"children":[],"decl_id":null,"docs":" Wraps a [`TryStream`] into a type that implements\n [`Stream`](futures_core::stream::Stream)","sig":null,"attributes":[{"value":"/ Wraps a [`TryStream`] into a type that implements","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":342410,"byte_end":342463,"line_start":333,"line_end":333,"column_start":5,"column_end":58}},{"value":"/ [`Stream`](futures_core::stream::Stream)","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":342468,"byte_end":342512,"line_start":334,"line_end":334,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":342517,"byte_end":342520,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ [`TryStream`]s currently do not implement the","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":342525,"byte_end":342574,"line_start":336,"line_end":336,"column_start":5,"column_end":54}},{"value":"/ [`Stream`](futures_core::stream::Stream) trait because of limitations","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":342579,"byte_end":342652,"line_start":337,"line_end":337,"column_start":5,"column_end":78}},{"value":"/ of the compiler.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":342657,"byte_end":342677,"line_start":338,"line_end":338,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":342682,"byte_end":342685,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":342690,"byte_end":342704,"line_start":340,"line_end":340,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":342709,"byte_end":342712,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":342717,"byte_end":342724,"line_start":342,"line_end":342,"column_start":5,"column_end":12}},{"value":"/ use futures::stream::{Stream, TryStream, TryStreamExt};","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":342729,"byte_end":342788,"line_start":343,"line_end":343,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":342793,"byte_end":342796,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ # type T = i32;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":342801,"byte_end":342820,"line_start":345,"line_end":345,"column_start":5,"column_end":24}},{"value":"/ # type E = ();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":342825,"byte_end":342843,"line_start":346,"line_end":346,"column_start":5,"column_end":23}},{"value":"/ fn make_try_stream() -> impl TryStream<Ok = T, Error = E> { // ... }","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":342848,"byte_end":342920,"line_start":347,"line_end":347,"column_start":5,"column_end":77}},{"value":"/ # futures::stream::empty()","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":342925,"byte_end":342955,"line_start":348,"line_end":348,"column_start":5,"column_end":35}},{"value":"/ # }","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":342960,"byte_end":342967,"line_start":349,"line_end":349,"column_start":5,"column_end":12}},{"value":"/ fn take_stream(stream: impl Stream<Item = Result<T, E>>) { /* ... */ }","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":342972,"byte_end":343046,"line_start":350,"line_end":350,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":343051,"byte_end":343054,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ take_stream(make_try_stream().into_stream());","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":343059,"byte_end":343108,"line_start":352,"line_end":352,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":343113,"byte_end":343120,"line_start":353,"line_end":353,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5511},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":344034,"byte_end":344042,"line_start":381,"line_end":381,"column_start":8,"column_end":16},"name":"try_next","qualname":"::stream::try_stream::TryStreamExt::try_next","value":"pub fn try_next(&mut Self) -> TryNext<, Self> where Self: Unpin","parent":{"krate":0,"index":5491},"children":[],"decl_id":null,"docs":" Creates a future that attempts to resolve the next item in the stream.\n If an error is encountered before the next item, the error is returned\n instead.","sig":null,"attributes":[{"value":"/ Creates a future that attempts to resolve the next item in the stream.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":343295,"byte_end":343369,"line_start":361,"line_end":361,"column_start":5,"column_end":79}},{"value":"/ If an error is encountered before the next item, the error is returned","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":343374,"byte_end":343448,"line_start":362,"line_end":362,"column_start":5,"column_end":79}},{"value":"/ instead.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":343453,"byte_end":343465,"line_start":363,"line_end":363,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":343470,"byte_end":343473,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `Stream::next` combinator, but returns a","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":343478,"byte_end":343545,"line_start":365,"line_end":365,"column_start":5,"column_end":72}},{"value":"/ `Result<Option<T>, E>` rather than an `Option<Result<T, E>>`, making","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":343550,"byte_end":343622,"line_start":366,"line_end":366,"column_start":5,"column_end":77}},{"value":"/ for easy use with the `?` operator.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":343627,"byte_end":343666,"line_start":367,"line_end":367,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":343671,"byte_end":343674,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":343679,"byte_end":343693,"line_start":369,"line_end":369,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":343698,"byte_end":343701,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":343706,"byte_end":343713,"line_start":371,"line_end":371,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":343718,"byte_end":343759,"line_start":372,"line_end":372,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":343764,"byte_end":343810,"line_start":373,"line_end":373,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":343815,"byte_end":343818,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(vec![Ok(()), Err(())]);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":343823,"byte_end":343880,"line_start":375,"line_end":375,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":343885,"byte_end":343888,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(())));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":343893,"byte_end":343947,"line_start":377,"line_end":377,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(stream.try_next().await, Err(()));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":343952,"byte_end":344001,"line_start":378,"line_end":378,"column_start":5,"column_end":54}},{"value":"/ # })","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":344006,"byte_end":344014,"line_start":379,"line_end":379,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":344019,"byte_end":344026,"line_start":380,"line_end":380,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5512},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":345394,"byte_end":345406,"line_start":421,"line_end":421,"column_start":8,"column_end":20},"name":"try_for_each","qualname":"::stream::try_stream::TryStreamExt::try_for_each","value":"pub fn try_for_each<Fut, F>(Self, F) -> TryForEach<Self, Fut, F> where\nF: FnMut(Self::Ok) -> Fut, Fut: TryFuture<Ok = (), Error = ()>, Self: Sized","parent":{"krate":0,"index":5491},"children":[],"decl_id":null,"docs":" Attempts to run this stream to completion, executing the provided\n asynchronous closure for each element on the stream.","sig":null,"attributes":[{"value":"/ Attempts to run this stream to completion, executing the provided","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":344209,"byte_end":344278,"line_start":388,"line_end":388,"column_start":5,"column_end":74}},{"value":"/ asynchronous closure for each element on the stream.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":344283,"byte_end":344339,"line_start":389,"line_end":389,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":344344,"byte_end":344347,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ The provided closure will be called for each item this stream produces,","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":344352,"byte_end":344427,"line_start":391,"line_end":391,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":344432,"byte_end":344502,"line_start":392,"line_end":392,"column_start":5,"column_end":75}},{"value":"/ before moving on to the next item.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":344507,"byte_end":344545,"line_start":393,"line_end":393,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":344550,"byte_end":344553,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ The returned value is a [`Future`](futures_core::future::Future) where the","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":344558,"byte_end":344636,"line_start":395,"line_end":395,"column_start":5,"column_end":83}},{"value":"/ [`Output`](futures_core::future::Future::Output) type is","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":344641,"byte_end":344701,"line_start":396,"line_end":396,"column_start":5,"column_end":65}},{"value":"/ `Result<(), Self::Error>`. If any of the intermediate","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":344706,"byte_end":344763,"line_start":397,"line_end":397,"column_start":5,"column_end":62}},{"value":"/ futures or the stream returns an error, this future will return","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":344768,"byte_end":344835,"line_start":398,"line_end":398,"column_start":5,"column_end":72}},{"value":"/ immediately with an error.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":344840,"byte_end":344870,"line_start":399,"line_end":399,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":344875,"byte_end":344878,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":344883,"byte_end":344897,"line_start":401,"line_end":401,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":344902,"byte_end":344905,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":344910,"byte_end":344917,"line_start":403,"line_end":403,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":344922,"byte_end":344963,"line_start":404,"line_end":404,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":344968,"byte_end":344992,"line_start":405,"line_end":405,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":344997,"byte_end":345043,"line_start":406,"line_end":406,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":345048,"byte_end":345051,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0i32;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":345056,"byte_end":345077,"line_start":408,"line_end":408,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":345082,"byte_end":345085,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":345090,"byte_end":345095,"line_start":410,"line_end":410,"column_start":5,"column_end":10}},{"value":"/     let fut = stream::repeat(Ok(1)).try_for_each(|item| {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":345100,"byte_end":345161,"line_start":411,"line_end":411,"column_start":5,"column_end":66}},{"value":"/         x += item;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":345166,"byte_end":345188,"line_start":412,"line_end":412,"column_start":5,"column_end":27}},{"value":"/         future::ready(if x == 3 { Err(()) } else { Ok(()) })","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":345193,"byte_end":345257,"line_start":413,"line_end":413,"column_start":5,"column_end":69}},{"value":"/     });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":345262,"byte_end":345273,"line_start":414,"line_end":414,"column_start":5,"column_end":16}},{"value":"/     assert_eq!(fut.await, Err(()));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":345278,"byte_end":345317,"line_start":415,"line_end":415,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":345322,"byte_end":345327,"line_start":416,"line_end":416,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":345332,"byte_end":345335,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, 3);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":345340,"byte_end":345361,"line_start":418,"line_end":418,"column_start":5,"column_end":26}},{"value":"/ # })","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":345366,"byte_end":345374,"line_start":419,"line_end":419,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":345379,"byte_end":345386,"line_start":420,"line_end":420,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5515},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":346419,"byte_end":346433,"line_start":451,"line_end":451,"column_start":8,"column_end":22},"name":"try_skip_while","qualname":"::stream::try_stream::TryStreamExt::try_skip_while","value":"pub fn try_skip_while<Fut, F>(Self, F) -> TrySkipWhile<Self, Fut, F> where\nF: FnMut(&Self::Ok) -> Fut, Fut: TryFuture<Ok = bool, Error = bool>,\nSelf: Sized","parent":{"krate":0,"index":5491},"children":[],"decl_id":null,"docs":" Skip elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements on this stream while the provided asynchronous predicate","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":345670,"byte_end":345744,"line_start":430,"line_end":430,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":345749,"byte_end":345772,"line_start":431,"line_end":431,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":345777,"byte_end":345780,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ This function is similar to","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":345785,"byte_end":345816,"line_start":433,"line_end":433,"column_start":5,"column_end":36}},{"value":"/ [`StreamExt::skip_while`](crate::stream::StreamExt::skip_while) but exits","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":345821,"byte_end":345898,"line_start":434,"line_end":434,"column_start":5,"column_end":82}},{"value":"/ early if an error occurs.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":345903,"byte_end":345932,"line_start":435,"line_end":435,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":345937,"byte_end":345940,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":345945,"byte_end":345959,"line_start":437,"line_end":437,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":345964,"byte_end":345967,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":345972,"byte_end":345979,"line_start":439,"line_end":439,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":345984,"byte_end":346025,"line_start":440,"line_end":440,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":346030,"byte_end":346054,"line_start":441,"line_end":441,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":346059,"byte_end":346105,"line_start":442,"line_end":442,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":346110,"byte_end":346113,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(3), Ok(2)]);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":346118,"byte_end":346187,"line_start":444,"line_end":444,"column_start":5,"column_end":74}},{"value":"/ let stream = stream.try_skip_while(|x| future::ready(Ok(*x < 3)));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":346192,"byte_end":346262,"line_start":445,"line_end":445,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":346267,"byte_end":346270,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = stream.try_collect().await;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":346275,"byte_end":346342,"line_start":447,"line_end":447,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(output, Ok(vec![3, 2]));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":346347,"byte_end":346386,"line_start":448,"line_end":448,"column_start":5,"column_end":44}},{"value":"/ # })","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":346391,"byte_end":346399,"line_start":449,"line_end":449,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":346404,"byte_end":346411,"line_start":450,"line_end":450,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5518},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":347466,"byte_end":347480,"line_start":481,"line_end":481,"column_start":8,"column_end":22},"name":"try_take_while","qualname":"::stream::try_stream::TryStreamExt::try_take_while","value":"pub fn try_take_while<Fut, F>(Self, F) -> TryTakeWhile<Self, Fut, F> where\nF: FnMut(&Self::Ok) -> Fut, Fut: TryFuture<Ok = bool, Error = bool>,\nSelf: Sized","parent":{"krate":0,"index":5491},"children":[],"decl_id":null,"docs":" Take elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements on this stream while the provided asynchronous predicate","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":346710,"byte_end":346784,"line_start":460,"line_end":460,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":346789,"byte_end":346812,"line_start":461,"line_end":461,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":346817,"byte_end":346820,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ This function is similar to","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":346825,"byte_end":346856,"line_start":463,"line_end":463,"column_start":5,"column_end":36}},{"value":"/ [`StreamExt::take_while`](crate::stream::StreamExt::take_while) but exits","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":346861,"byte_end":346938,"line_start":464,"line_end":464,"column_start":5,"column_end":82}},{"value":"/ early if an error occurs.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":346943,"byte_end":346972,"line_start":465,"line_end":465,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":346977,"byte_end":346980,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":346985,"byte_end":346999,"line_start":467,"line_end":467,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":347004,"byte_end":347007,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":347012,"byte_end":347019,"line_start":469,"line_end":469,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":347024,"byte_end":347065,"line_start":470,"line_end":470,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":347070,"byte_end":347094,"line_start":471,"line_end":471,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":347099,"byte_end":347145,"line_start":472,"line_end":472,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":347150,"byte_end":347153,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(2), Ok(3), Ok(2)]);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":347158,"byte_end":347234,"line_start":474,"line_end":474,"column_start":5,"column_end":81}},{"value":"/ let stream = stream.try_take_while(|x| future::ready(Ok(*x < 3)));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":347239,"byte_end":347309,"line_start":475,"line_end":475,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":347314,"byte_end":347317,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = stream.try_collect().await;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":347322,"byte_end":347389,"line_start":477,"line_end":477,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(output, Ok(vec![1, 2]));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":347394,"byte_end":347433,"line_start":478,"line_end":478,"column_start":5,"column_end":44}},{"value":"/ # })","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":347438,"byte_end":347446,"line_start":479,"line_end":479,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":347451,"byte_end":347458,"line_start":480,"line_end":480,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5521},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":349395,"byte_end":349418,"line_start":533,"line_end":533,"column_start":8,"column_end":31},"name":"try_for_each_concurrent","qualname":"::stream::try_stream::TryStreamExt::try_for_each_concurrent","value":"pub fn try_for_each_concurrent<Fut, F,\n                               impl Into<Option<usize>>: Into<Option<usize>>>(Self,\n                                                                              impl Into<Option<usize>>,\n                                                                              F)\n-> TryForEachConcurrent<Self, Fut, F> where F: FnMut(Self::Ok) -> Fut,\nFut: Future<Output = Result<(), Self::Error>>, Self: Sized","parent":{"krate":0,"index":5491},"children":[],"decl_id":null,"docs":" Attempts to run this stream to completion, executing the provided asynchronous\n closure for each element on the stream concurrently as elements become\n available, exiting as soon as an error occurs.","sig":null,"attributes":[{"value":"/ Attempts to run this stream to completion, executing the provided asynchronous","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":347757,"byte_end":347839,"line_start":490,"line_end":490,"column_start":5,"column_end":87}},{"value":"/ closure for each element on the stream concurrently as elements become","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":347844,"byte_end":347918,"line_start":491,"line_end":491,"column_start":5,"column_end":79}},{"value":"/ available, exiting as soon as an error occurs.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":347923,"byte_end":347973,"line_start":492,"line_end":492,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":347978,"byte_end":347981,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ This is similar to","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":347986,"byte_end":348008,"line_start":494,"line_end":494,"column_start":5,"column_end":27}},{"value":"/ [`StreamExt::for_each_concurrent`](crate::stream::StreamExt::for_each_concurrent),","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":348013,"byte_end":348099,"line_start":495,"line_end":495,"column_start":5,"column_end":91}},{"value":"/ but will resolve to an error immediately if the underlying stream or the provided","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":348104,"byte_end":348189,"line_start":496,"line_end":496,"column_start":5,"column_end":90}},{"value":"/ closure return an error.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":348194,"byte_end":348222,"line_start":497,"line_end":497,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":348227,"byte_end":348230,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":348235,"byte_end":348310,"line_start":499,"line_end":499,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":348315,"byte_end":348372,"line_start":500,"line_end":500,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":348377,"byte_end":348380,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":348385,"byte_end":348399,"line_start":502,"line_end":502,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":348404,"byte_end":348407,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":348412,"byte_end":348419,"line_start":504,"line_end":504,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":348424,"byte_end":348465,"line_start":505,"line_end":505,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":348470,"byte_end":348504,"line_start":506,"line_end":506,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":348509,"byte_end":348566,"line_start":507,"line_end":507,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":348571,"byte_end":348574,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = oneshot::channel();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":348579,"byte_end":348619,"line_start":509,"line_end":509,"column_start":5,"column_end":45}},{"value":"/ let (tx2, rx2) = oneshot::channel();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":348624,"byte_end":348664,"line_start":510,"line_end":510,"column_start":5,"column_end":45}},{"value":"/ let (_tx3, rx3) = oneshot::channel();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":348669,"byte_end":348710,"line_start":511,"line_end":511,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":348715,"byte_end":348718,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![rx1, rx2, rx3]);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":348723,"byte_end":348774,"line_start":513,"line_end":513,"column_start":5,"column_end":56}},{"value":"/ let fut = stream.map(Ok).try_for_each_concurrent(","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":348779,"byte_end":348832,"line_start":514,"line_end":514,"column_start":5,"column_end":58}},{"value":"/     /* limit */ 2,","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":348837,"byte_end":348859,"line_start":515,"line_end":515,"column_start":5,"column_end":27}},{"value":"/     |rx| async move {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":348864,"byte_end":348889,"line_start":516,"line_end":516,"column_start":5,"column_end":30}},{"value":"/         let res: Result<(), oneshot::Canceled> = rx.await;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":348894,"byte_end":348956,"line_start":517,"line_end":517,"column_start":5,"column_end":67}},{"value":"/         res","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":348961,"byte_end":348976,"line_start":518,"line_end":518,"column_start":5,"column_end":20}},{"value":"/     }","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":348981,"byte_end":348990,"line_start":519,"line_end":519,"column_start":5,"column_end":14}},{"value":"/ );","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":348995,"byte_end":349001,"line_start":520,"line_end":520,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":349006,"byte_end":349009,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ tx1.send(()).unwrap();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":349014,"byte_end":349040,"line_start":522,"line_end":522,"column_start":5,"column_end":31}},{"value":"/ // Drop the second sender so that `rx2` resolves to `Canceled`.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":349045,"byte_end":349112,"line_start":523,"line_end":523,"column_start":5,"column_end":72}},{"value":"/ drop(tx2);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":349117,"byte_end":349131,"line_start":524,"line_end":524,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":349136,"byte_end":349139,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ // The final result is an error because the second future","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":349144,"byte_end":349205,"line_start":526,"line_end":526,"column_start":5,"column_end":66}},{"value":"/ // resulted in an error.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":349210,"byte_end":349238,"line_start":527,"line_end":527,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(Err(oneshot::Canceled), fut.await);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":349243,"byte_end":349293,"line_start":528,"line_end":528,"column_start":5,"column_end":55}},{"value":"/ # })","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":349298,"byte_end":349306,"line_start":529,"line_end":529,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":349311,"byte_end":349318,"line_start":530,"line_end":530,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":349323,"byte_end":349357,"line_start":531,"line_end":531,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":349362,"byte_end":349387,"line_start":532,"line_end":532,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5525},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":350867,"byte_end":350878,"line_start":580,"line_end":580,"column_start":8,"column_end":19},"name":"try_collect","qualname":"::stream::try_stream::TryStreamExt::try_collect","value":"pub fn try_collect<C: Default + Extend<Self::Ok>>(Self) -> TryCollect<Self, C>\nwhere Self: Sized","parent":{"krate":0,"index":5491},"children":[],"decl_id":null,"docs":" Attempt to transform a stream into a collection,\n returning a future representing the result of that computation.","sig":null,"attributes":[{"value":"/ Attempt to transform a stream into a collection,","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":349828,"byte_end":349880,"line_start":550,"line_end":550,"column_start":5,"column_end":57}},{"value":"/ returning a future representing the result of that computation.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":349885,"byte_end":349952,"line_start":551,"line_end":551,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":349957,"byte_end":349960,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ This combinator will collect all successful results of this stream and","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":349965,"byte_end":350039,"line_start":553,"line_end":553,"column_start":5,"column_end":79}},{"value":"/ collect them into the specified collection type. If an error happens then all","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":350044,"byte_end":350125,"line_start":554,"line_end":554,"column_start":5,"column_end":86}},{"value":"/ collected elements will be dropped and the error will be returned.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":350130,"byte_end":350200,"line_start":555,"line_end":555,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":350205,"byte_end":350208,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":350213,"byte_end":350281,"line_start":557,"line_end":557,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":350286,"byte_end":350289,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":350294,"byte_end":350308,"line_start":559,"line_end":559,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":350313,"byte_end":350316,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":350321,"byte_end":350328,"line_start":561,"line_end":561,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":350333,"byte_end":350374,"line_start":562,"line_end":562,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":350379,"byte_end":350410,"line_start":563,"line_end":563,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":350415,"byte_end":350453,"line_start":564,"line_end":564,"column_start":5,"column_end":43}},{"value":"/ use std::thread;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":350458,"byte_end":350478,"line_start":565,"line_end":565,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":350483,"byte_end":350486,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":350491,"byte_end":350528,"line_start":567,"line_end":567,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":350533,"byte_end":350536,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":350541,"byte_end":350568,"line_start":569,"line_end":569,"column_start":5,"column_end":32}},{"value":"/     for i in 1..=5 {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":350573,"byte_end":350597,"line_start":570,"line_end":570,"column_start":5,"column_end":29}},{"value":"/         tx.unbounded_send(Ok(i)).unwrap();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":350602,"byte_end":350648,"line_start":571,"line_end":571,"column_start":5,"column_end":51}},{"value":"/     }","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":350653,"byte_end":350662,"line_start":572,"line_end":572,"column_start":5,"column_end":14}},{"value":"/     tx.unbounded_send(Err(6)).unwrap();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":350667,"byte_end":350710,"line_start":573,"line_end":573,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":350715,"byte_end":350722,"line_start":574,"line_end":574,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":350727,"byte_end":350730,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = rx.try_collect().await;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":350735,"byte_end":350798,"line_start":576,"line_end":576,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(output, Err(6));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":350803,"byte_end":350834,"line_start":577,"line_end":577,"column_start":5,"column_end":36}},{"value":"/ # })","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":350839,"byte_end":350847,"line_start":578,"line_end":578,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":350852,"byte_end":350859,"line_start":579,"line_end":579,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5527},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":352693,"byte_end":352703,"line_start":625,"line_end":625,"column_start":8,"column_end":18},"name":"try_chunks","qualname":"::stream::try_stream::TryStreamExt::try_chunks","value":"pub fn try_chunks(Self, usize) -> TryChunks<Self> where Self: Sized","parent":{"krate":0,"index":5491},"children":[],"decl_id":null,"docs":" An adaptor for chunking up successful items of the stream inside a vector.","sig":null,"attributes":[{"value":"/ An adaptor for chunking up successful items of the stream inside a vector.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":351061,"byte_end":351139,"line_start":587,"line_end":587,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":351144,"byte_end":351147,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ This combinator will attempt to pull successful items from this stream and buffer","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":351152,"byte_end":351237,"line_start":589,"line_end":589,"column_start":5,"column_end":90}},{"value":"/ them into a local vector. At most `capacity` items will get buffered","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":351242,"byte_end":351314,"line_start":590,"line_end":590,"column_start":5,"column_end":77}},{"value":"/ before they're yielded from the returned stream.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":351319,"byte_end":351371,"line_start":591,"line_end":591,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":351376,"byte_end":351379,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ Note that the vectors returned from this iterator may not always have","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":351384,"byte_end":351457,"line_start":593,"line_end":593,"column_start":5,"column_end":78}},{"value":"/ `capacity` elements. If the underlying stream ended and only a partial","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":351462,"byte_end":351536,"line_start":594,"line_end":594,"column_start":5,"column_end":79}},{"value":"/ vector was created, it'll be returned. Additionally if an error happens","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":351541,"byte_end":351616,"line_start":595,"line_end":595,"column_start":5,"column_end":80}},{"value":"/ from the underlying stream then the currently buffered items will be","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":351621,"byte_end":351693,"line_start":596,"line_end":596,"column_start":5,"column_end":77}},{"value":"/ yielded.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":351698,"byte_end":351710,"line_start":597,"line_end":597,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":351715,"byte_end":351718,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":351723,"byte_end":351798,"line_start":599,"line_end":599,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":351803,"byte_end":351860,"line_start":600,"line_end":600,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":351865,"byte_end":351868,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ This function is similar to","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":351873,"byte_end":351904,"line_start":602,"line_end":602,"column_start":5,"column_end":36}},{"value":"/ [`StreamExt::chunks`](crate::stream::StreamExt::chunks) but exits","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":351909,"byte_end":351978,"line_start":603,"line_end":603,"column_start":5,"column_end":74}},{"value":"/ early if an error occurs.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":351983,"byte_end":352012,"line_start":604,"line_end":604,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":352017,"byte_end":352020,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":352025,"byte_end":352039,"line_start":606,"line_end":606,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":352044,"byte_end":352047,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":352052,"byte_end":352059,"line_start":608,"line_end":608,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":352064,"byte_end":352105,"line_start":609,"line_end":609,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryChunksError, TryStreamExt};","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":352110,"byte_end":352172,"line_start":610,"line_end":610,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":352177,"byte_end":352180,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(2), Ok(3), Err(4), Ok(5), Ok(6)]);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":352185,"byte_end":352276,"line_start":612,"line_end":612,"column_start":5,"column_end":96}},{"value":"/ let mut stream = stream.try_chunks(2);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":352281,"byte_end":352323,"line_start":613,"line_end":613,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":352328,"byte_end":352331,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(vec![1, 2])));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":352336,"byte_end":352398,"line_start":615,"line_end":615,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(stream.try_next().await, Err(TryChunksError(vec![3], 4)));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":352403,"byte_end":352476,"line_start":616,"line_end":616,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(vec![5, 6])));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":352481,"byte_end":352543,"line_start":617,"line_end":617,"column_start":5,"column_end":67}},{"value":"/ # })","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":352548,"byte_end":352556,"line_start":618,"line_end":618,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":352561,"byte_end":352568,"line_start":619,"line_end":619,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":352573,"byte_end":352576,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":352581,"byte_end":352593,"line_start":621,"line_end":621,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":352598,"byte_end":352601,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `capacity` is zero.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":352606,"byte_end":352655,"line_start":623,"line_end":623,"column_start":5,"column_end":54}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":352660,"byte_end":352685,"line_start":624,"line_end":624,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5528},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":354226,"byte_end":354236,"line_start":664,"line_end":664,"column_start":8,"column_end":18},"name":"try_filter","qualname":"::stream::try_stream::TryStreamExt::try_filter","value":"pub fn try_filter<Fut, F>(Self, F) -> TryFilter<Self, Fut, F> where\nFut: Future<Output = bool>, F: FnMut(&Self::Ok) -> Fut, Self: Sized","parent":{"krate":0,"index":5491},"children":[],"decl_id":null,"docs":" Attempt to filter the values produced by this stream according to the\n provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Attempt to filter the values produced by this stream according to the","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":352938,"byte_end":353011,"line_start":634,"line_end":634,"column_start":5,"column_end":78}},{"value":"/ provided asynchronous closure.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":353016,"byte_end":353050,"line_start":635,"line_end":635,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":353055,"byte_end":353058,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":353063,"byte_end":353138,"line_start":637,"line_end":637,"column_start":5,"column_end":80}},{"value":"/ will be run on them. If the predicate returns a `Future` which resolves","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":353143,"byte_end":353218,"line_start":638,"line_end":638,"column_start":5,"column_end":80}},{"value":"/ to `true`, then the stream will yield the value, but if the predicate","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":353223,"byte_end":353296,"line_start":639,"line_end":639,"column_start":5,"column_end":78}},{"value":"/ return a `Future` which resolves to `false`, then the value will be","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":353301,"byte_end":353372,"line_start":640,"line_end":640,"column_start":5,"column_end":76}},{"value":"/ discarded and the next value will be produced.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":353377,"byte_end":353427,"line_start":641,"line_end":641,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":353432,"byte_end":353435,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ All errors are passed through without filtering in this combinator.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":353440,"byte_end":353511,"line_start":643,"line_end":643,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":353516,"byte_end":353519,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":353524,"byte_end":353600,"line_start":645,"line_end":645,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter` methods in","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":353605,"byte_end":353675,"line_start":646,"line_end":646,"column_start":5,"column_end":75}},{"value":"/ the standard library.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":353680,"byte_end":353705,"line_start":647,"line_end":647,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":353710,"byte_end":353713,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":353718,"byte_end":353732,"line_start":649,"line_end":649,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":353737,"byte_end":353744,"line_start":650,"line_end":650,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":353749,"byte_end":353790,"line_start":651,"line_end":651,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":353795,"byte_end":353819,"line_start":652,"line_end":652,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":353824,"byte_end":353881,"line_start":653,"line_end":653,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":353886,"byte_end":353889,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(1i32), Ok(2i32), Ok(3i32), Err(\"error\")]);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":353894,"byte_end":353974,"line_start":655,"line_end":655,"column_start":5,"column_end":85}},{"value":"/ let mut evens = stream.try_filter(|x| {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":353979,"byte_end":354022,"line_start":656,"line_end":656,"column_start":5,"column_end":48}},{"value":"/     future::ready(x % 2 == 0)","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":354027,"byte_end":354060,"line_start":657,"line_end":657,"column_start":5,"column_end":38}},{"value":"/ });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":354065,"byte_end":354072,"line_start":658,"line_end":658,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":354077,"byte_end":354080,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(evens.next().await, Some(Ok(2)));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":354085,"byte_end":354133,"line_start":660,"line_end":660,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(evens.next().await, Some(Err(\"error\")));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":354138,"byte_end":354193,"line_start":661,"line_end":661,"column_start":5,"column_end":60}},{"value":"/ # })","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":354198,"byte_end":354206,"line_start":662,"line_end":662,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":354211,"byte_end":354218,"line_start":663,"line_end":663,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5531},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":355863,"byte_end":355877,"line_start":705,"line_end":705,"column_start":8,"column_end":22},"name":"try_filter_map","qualname":"::stream::try_stream::TryStreamExt::try_filter_map","value":"pub fn try_filter_map<Fut, F, T>(Self, F) -> TryFilterMap<Self, Fut, F> where\nFut: TryFuture<Ok = Option<T>, Error = Option<T>>, F: FnMut(Self::Ok) -> Fut,\nSelf: Sized","parent":{"krate":0,"index":5491},"children":[],"decl_id":null,"docs":" Attempt to filter the values produced by this stream while\n simultaneously mapping them to a different type according to the\n provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Attempt to filter the values produced by this stream while","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":354487,"byte_end":354549,"line_start":673,"line_end":673,"column_start":5,"column_end":67}},{"value":"/ simultaneously mapping them to a different type according to the","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":354554,"byte_end":354622,"line_start":674,"line_end":674,"column_start":5,"column_end":73}},{"value":"/ provided asynchronous closure.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":354627,"byte_end":354661,"line_start":675,"line_end":675,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":354666,"byte_end":354669,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":354674,"byte_end":354749,"line_start":677,"line_end":677,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the future returned by the predicate `f` resolves to","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":354754,"byte_end":354829,"line_start":678,"line_end":678,"column_start":5,"column_end":80}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":354834,"byte_end":354910,"line_start":679,"line_end":679,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`] then the next value will be produced.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":354915,"byte_end":354980,"line_start":680,"line_end":680,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":354985,"byte_end":354988,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ All errors are passed through without filtering in this combinator.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":354993,"byte_end":355064,"line_start":682,"line_end":682,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":355069,"byte_end":355072,"line_start":683,"line_end":683,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":355077,"byte_end":355153,"line_start":684,"line_end":684,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter_map` methods in","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":355158,"byte_end":355232,"line_start":685,"line_end":685,"column_start":5,"column_end":79}},{"value":"/ the standard library.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":355237,"byte_end":355262,"line_start":686,"line_end":686,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":355267,"byte_end":355270,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":355275,"byte_end":355289,"line_start":688,"line_end":688,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":355294,"byte_end":355301,"line_start":689,"line_end":689,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":355306,"byte_end":355347,"line_start":690,"line_end":690,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":355352,"byte_end":355409,"line_start":691,"line_end":691,"column_start":5,"column_end":62}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":355414,"byte_end":355439,"line_start":692,"line_end":692,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":355444,"byte_end":355447,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(1i32), Ok(6i32), Err(\"error\")]);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":355452,"byte_end":355522,"line_start":694,"line_end":694,"column_start":5,"column_end":75}},{"value":"/ let halves = stream.try_filter_map(|x| async move {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":355527,"byte_end":355582,"line_start":695,"line_end":695,"column_start":5,"column_end":60}},{"value":"/     let ret = if x % 2 == 0 { Some(x / 2) } else { None };","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":355587,"byte_end":355649,"line_start":696,"line_end":696,"column_start":5,"column_end":67}},{"value":"/     Ok(ret)","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":355654,"byte_end":355669,"line_start":697,"line_end":697,"column_start":5,"column_end":20}},{"value":"/ });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":355674,"byte_end":355681,"line_start":698,"line_end":698,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":355686,"byte_end":355689,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ pin_mut!(halves);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":355694,"byte_end":355715,"line_start":700,"line_end":700,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(halves.next().await, Some(Ok(3)));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":355720,"byte_end":355769,"line_start":701,"line_end":701,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(halves.next().await, Some(Err(\"error\")));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":355774,"byte_end":355830,"line_start":702,"line_end":702,"column_start":5,"column_end":61}},{"value":"/ # })","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":355835,"byte_end":355843,"line_start":703,"line_end":703,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":355848,"byte_end":355855,"line_start":704,"line_end":704,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5535},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":357569,"byte_end":357580,"line_start":752,"line_end":752,"column_start":8,"column_end":19},"name":"try_flatten","qualname":"::stream::try_stream::TryStreamExt::try_flatten","value":"pub fn try_flatten(Self) -> TryFlatten<Self> where Self::Ok: TryStream,\n<Self::Ok as TryStream>::Error: From<Self::Error>, Self: Sized","parent":{"krate":0,"index":5491},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":356154,"byte_end":356219,"line_start":714,"line_end":714,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":356224,"byte_end":356227,"line_start":715,"line_end":715,"column_start":5,"column_end":8}},{"value":"/ If this stream's elements are themselves streams then this combinator","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":356232,"byte_end":356305,"line_start":716,"line_end":716,"column_start":5,"column_end":78}},{"value":"/ will flatten out the entire stream to one long chain of elements. Any","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":356310,"byte_end":356383,"line_start":717,"line_end":717,"column_start":5,"column_end":78}},{"value":"/ errors are passed through without looking at them, but otherwise each","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":356388,"byte_end":356461,"line_start":718,"line_end":718,"column_start":5,"column_end":78}},{"value":"/ individual stream will get exhausted before moving on to the next.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":356466,"byte_end":356536,"line_start":719,"line_end":719,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":356541,"byte_end":356544,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":356549,"byte_end":356563,"line_start":721,"line_end":721,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":356568,"byte_end":356571,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":356576,"byte_end":356583,"line_start":723,"line_end":723,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":356588,"byte_end":356629,"line_start":724,"line_end":724,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":356634,"byte_end":356665,"line_start":725,"line_end":725,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":356670,"byte_end":356721,"line_start":726,"line_end":726,"column_start":5,"column_end":56}},{"value":"/ use std::thread;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":356726,"byte_end":356746,"line_start":727,"line_end":727,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":356751,"byte_end":356754,"line_start":728,"line_end":728,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":356759,"byte_end":356798,"line_start":729,"line_end":729,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":356803,"byte_end":356842,"line_start":730,"line_end":730,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":356847,"byte_end":356886,"line_start":731,"line_end":731,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":356891,"byte_end":356894,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":356899,"byte_end":356926,"line_start":733,"line_end":733,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(Ok(1)).unwrap();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":356931,"byte_end":356974,"line_start":734,"line_end":734,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":356979,"byte_end":356986,"line_start":735,"line_end":735,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":356991,"byte_end":357018,"line_start":736,"line_end":736,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(Ok(2)).unwrap();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":357023,"byte_end":357066,"line_start":737,"line_end":737,"column_start":5,"column_end":48}},{"value":"/     tx2.unbounded_send(Err(3)).unwrap();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":357071,"byte_end":357115,"line_start":738,"line_end":738,"column_start":5,"column_end":49}},{"value":"/ });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":357120,"byte_end":357127,"line_start":739,"line_end":739,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":357132,"byte_end":357159,"line_start":740,"line_end":740,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(Ok(rx1)).unwrap();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":357164,"byte_end":357209,"line_start":741,"line_end":741,"column_start":5,"column_end":50}},{"value":"/     tx3.unbounded_send(Ok(rx2)).unwrap();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":357214,"byte_end":357259,"line_start":742,"line_end":742,"column_start":5,"column_end":50}},{"value":"/     tx3.unbounded_send(Err(4)).unwrap();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":357264,"byte_end":357308,"line_start":743,"line_end":743,"column_start":5,"column_end":49}},{"value":"/ });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":357313,"byte_end":357320,"line_start":744,"line_end":744,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":357325,"byte_end":357328,"line_start":745,"line_end":745,"column_start":5,"column_end":8}},{"value":"/ let mut stream = rx3.try_flatten();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":357333,"byte_end":357372,"line_start":746,"line_end":746,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(1)));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":357377,"byte_end":357426,"line_start":747,"line_end":747,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(2)));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":357431,"byte_end":357480,"line_start":748,"line_end":748,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Err(3)));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":357485,"byte_end":357535,"line_start":749,"line_end":749,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":357540,"byte_end":357549,"line_start":750,"line_end":750,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":357554,"byte_end":357561,"line_start":751,"line_end":751,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5536},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":359172,"byte_end":359180,"line_start":791,"line_end":791,"column_start":8,"column_end":16},"name":"try_fold","qualname":"::stream::try_stream::TryStreamExt::try_fold","value":"pub fn try_fold<T, Fut, F>(Self, T, F) -> TryFold<Self, Fut, T, F> where\nF: FnMut(T, Self::Ok) -> Fut, Fut: TryFuture<Ok = T, Error = T>, Self: Sized","parent":{"krate":0,"index":5491},"children":[],"decl_id":null,"docs":" Attempt to execute an accumulating asynchronous computation over a\n stream, collecting all the values into one final result.","sig":null,"attributes":[{"value":"/ Attempt to execute an accumulating asynchronous computation over a","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":357885,"byte_end":357955,"line_start":763,"line_end":763,"column_start":5,"column_end":75}},{"value":"/ stream, collecting all the values into one final result.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":357960,"byte_end":358020,"line_start":764,"line_end":764,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":358025,"byte_end":358028,"line_start":765,"line_end":765,"column_start":5,"column_end":8}},{"value":"/ This combinator will accumulate all values returned by this stream","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":358033,"byte_end":358103,"line_start":766,"line_end":766,"column_start":5,"column_end":75}},{"value":"/ according to the closure provided. The initial state is also provided to","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":358108,"byte_end":358184,"line_start":767,"line_end":767,"column_start":5,"column_end":81}},{"value":"/ this method and then is returned again by each execution of the closure.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":358189,"byte_end":358265,"line_start":768,"line_end":768,"column_start":5,"column_end":81}},{"value":"/ Once the entire stream has been exhausted the returned future will","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":358270,"byte_end":358340,"line_start":769,"line_end":769,"column_start":5,"column_end":75}},{"value":"/ resolve to this value.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":358345,"byte_end":358371,"line_start":770,"line_end":770,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":358376,"byte_end":358379,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ This method is similar to [`fold`](crate::stream::StreamExt::fold), but will","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":358384,"byte_end":358464,"line_start":772,"line_end":772,"column_start":5,"column_end":85}},{"value":"/ exit early if an error is encountered in either the stream or the","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":358469,"byte_end":358538,"line_start":773,"line_end":773,"column_start":5,"column_end":74}},{"value":"/ provided closure.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":358543,"byte_end":358564,"line_start":774,"line_end":774,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":358569,"byte_end":358572,"line_start":775,"line_end":775,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":358577,"byte_end":358591,"line_start":776,"line_end":776,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":358596,"byte_end":358599,"line_start":777,"line_end":777,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":358604,"byte_end":358611,"line_start":778,"line_end":778,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":358616,"byte_end":358657,"line_start":779,"line_end":779,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":358662,"byte_end":358708,"line_start":780,"line_end":780,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":358713,"byte_end":358716,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(2)]);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":358721,"byte_end":358790,"line_start":782,"line_end":782,"column_start":5,"column_end":74}},{"value":"/ let sum = number_stream.try_fold(0, |acc, x| async move { Ok(acc + x) });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":358795,"byte_end":358872,"line_start":783,"line_end":783,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(sum.await, Ok(3));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":358877,"byte_end":358910,"line_start":784,"line_end":784,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":358915,"byte_end":358918,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ let number_stream_with_err = stream::iter(vec![Ok::<i32, i32>(1), Err(2), Ok(1)]);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":358923,"byte_end":359009,"line_start":786,"line_end":786,"column_start":5,"column_end":91}},{"value":"/ let sum = number_stream_with_err.try_fold(0, |acc, x| async move { Ok(acc + x) });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":359014,"byte_end":359100,"line_start":787,"line_end":787,"column_start":5,"column_end":91}},{"value":"/ assert_eq!(sum.await, Err(2));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":359105,"byte_end":359139,"line_start":788,"line_end":788,"column_start":5,"column_end":39}},{"value":"/ # })","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":359144,"byte_end":359152,"line_start":789,"line_end":789,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":359157,"byte_end":359164,"line_start":790,"line_end":790,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5540},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":360706,"byte_end":360716,"line_start":834,"line_end":834,"column_start":8,"column_end":18},"name":"try_concat","qualname":"::stream::try_stream::TryStreamExt::try_concat","value":"pub fn try_concat(Self) -> TryConcat<Self> where Self: Sized,\nSelf::Ok: Extend<<<Self as TryStream>::Ok as IntoIterator>::Item> +\nIntoIterator + Default","parent":{"krate":0,"index":5491},"children":[],"decl_id":null,"docs":" Attempt to concatenate all items of a stream into a single\n extendable destination, returning a future representing the end result.","sig":null,"attributes":[{"value":"/ Attempt to concatenate all items of a stream into a single","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":359460,"byte_end":359522,"line_start":800,"line_end":800,"column_start":5,"column_end":67}},{"value":"/ extendable destination, returning a future representing the end result.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":359527,"byte_end":359602,"line_start":801,"line_end":801,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":359607,"byte_end":359610,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with the contents of all","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":359615,"byte_end":359686,"line_start":803,"line_end":803,"column_start":5,"column_end":76}},{"value":"/ the subsequent successful results of the stream. If the stream is empty,","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":359691,"byte_end":359767,"line_start":804,"line_end":804,"column_start":5,"column_end":81}},{"value":"/ the default value will be returned.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":359772,"byte_end":359811,"line_start":805,"line_end":805,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":359816,"byte_end":359819,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ Works with all collections that implement the [`Extend`](std::iter::Extend) trait.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":359824,"byte_end":359910,"line_start":807,"line_end":807,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":359915,"byte_end":359918,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ This method is similar to [`concat`](crate::stream::StreamExt::concat), but will","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":359923,"byte_end":360007,"line_start":809,"line_end":809,"column_start":5,"column_end":89}},{"value":"/ exit early if an error is encountered in the stream.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":360012,"byte_end":360068,"line_start":810,"line_end":810,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":360073,"byte_end":360076,"line_start":811,"line_end":811,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":360081,"byte_end":360095,"line_start":812,"line_end":812,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":360100,"byte_end":360103,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":360108,"byte_end":360115,"line_start":814,"line_end":814,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":360120,"byte_end":360161,"line_start":815,"line_end":815,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":360166,"byte_end":360197,"line_start":816,"line_end":816,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":360202,"byte_end":360240,"line_start":817,"line_end":817,"column_start":5,"column_end":43}},{"value":"/ use std::thread;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":360245,"byte_end":360265,"line_start":818,"line_end":818,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":360270,"byte_end":360273,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded::<Result<Vec<i32>, ()>>();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":360278,"byte_end":360339,"line_start":820,"line_end":820,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":360344,"byte_end":360347,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":360352,"byte_end":360379,"line_start":822,"line_end":822,"column_start":5,"column_end":32}},{"value":"/     for i in (0..3).rev() {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":360384,"byte_end":360415,"line_start":823,"line_end":823,"column_start":5,"column_end":36}},{"value":"/         let n = i * 3;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":360420,"byte_end":360446,"line_start":824,"line_end":824,"column_start":5,"column_end":31}},{"value":"/         tx.unbounded_send(Ok(vec![n + 1, n + 2, n + 3])).unwrap();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":360451,"byte_end":360521,"line_start":825,"line_end":825,"column_start":5,"column_end":75}},{"value":"/     }","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":360526,"byte_end":360535,"line_start":826,"line_end":826,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":360540,"byte_end":360547,"line_start":827,"line_end":827,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":360552,"byte_end":360555,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ let result = rx.try_concat().await;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":360560,"byte_end":360599,"line_start":829,"line_end":829,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":360604,"byte_end":360607,"line_start":830,"line_end":830,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, Ok(vec![7, 8, 9, 4, 5, 6, 1, 2, 3]));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":360612,"byte_end":360672,"line_start":831,"line_end":831,"column_start":5,"column_end":65}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":360677,"byte_end":360686,"line_start":832,"line_end":832,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":360691,"byte_end":360698,"line_start":833,"line_end":833,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5541},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":363438,"byte_end":363458,"line_start":901,"line_end":901,"column_start":8,"column_end":28},"name":"try_buffer_unordered","qualname":"::stream::try_stream::TryStreamExt::try_buffer_unordered","value":"pub fn try_buffer_unordered(Self, usize) -> TryBufferUnordered<Self> where\nSelf::Ok: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":5491},"children":[],"decl_id":null,"docs":" Attempt to execute several futures from a stream concurrently (unordered).","sig":null,"attributes":[{"value":"/ Attempt to execute several futures from a stream concurrently (unordered).","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":360970,"byte_end":361048,"line_start":842,"line_end":842,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":361053,"byte_end":361056,"line_start":843,"line_end":843,"column_start":5,"column_end":8}},{"value":"/ This stream's `Ok` type must be a [`TryFuture`](futures_core::future::TryFuture) with an `Error` type","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":361061,"byte_end":361166,"line_start":844,"line_end":844,"column_start":5,"column_end":110}},{"value":"/ that matches the stream's `Error` type.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":361171,"byte_end":361214,"line_start":845,"line_end":845,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":361219,"byte_end":361222,"line_start":846,"line_end":846,"column_start":5,"column_end":8}},{"value":"/ This adaptor will buffer up to `n` futures and then return their","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":361227,"byte_end":361295,"line_start":847,"line_end":847,"column_start":5,"column_end":73}},{"value":"/ outputs in the order in which they complete. If the underlying stream","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":361300,"byte_end":361373,"line_start":848,"line_end":848,"column_start":5,"column_end":78}},{"value":"/ returns an error, it will be immediately propagated.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":361378,"byte_end":361434,"line_start":849,"line_end":849,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":361439,"byte_end":361442,"line_start":850,"line_end":850,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of results, each containing either","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":361447,"byte_end":361522,"line_start":851,"line_end":851,"column_start":5,"column_end":80}},{"value":"/ an error or a future's output. An error can be produced either by the","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":361527,"byte_end":361600,"line_start":852,"line_end":852,"column_start":5,"column_end":78}},{"value":"/ underlying stream itself or by one of the futures it yielded.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":361605,"byte_end":361670,"line_start":853,"line_end":853,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":361675,"byte_end":361678,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":361683,"byte_end":361758,"line_start":855,"line_end":855,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":361763,"byte_end":361820,"line_start":856,"line_end":856,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":361825,"byte_end":361828,"line_start":857,"line_end":857,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":361833,"byte_end":361847,"line_start":858,"line_end":858,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":361852,"byte_end":361855,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ Results are returned in the order of completion:","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":361860,"byte_end":361912,"line_start":860,"line_end":860,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":361917,"byte_end":361924,"line_start":861,"line_end":861,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":361929,"byte_end":361970,"line_start":862,"line_end":862,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":361975,"byte_end":362009,"line_start":863,"line_end":863,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":362014,"byte_end":362071,"line_start":864,"line_end":864,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":362076,"byte_end":362079,"line_start":865,"line_end":865,"column_start":5,"column_end":8}},{"value":"/ let (send_one, recv_one) = oneshot::channel();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":362084,"byte_end":362134,"line_start":866,"line_end":866,"column_start":5,"column_end":55}},{"value":"/ let (send_two, recv_two) = oneshot::channel();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":362139,"byte_end":362189,"line_start":867,"line_end":867,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":362194,"byte_end":362197,"line_start":868,"line_end":868,"column_start":5,"column_end":8}},{"value":"/ let stream_of_futures = stream::iter(vec![Ok(recv_one), Ok(recv_two)]);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":362202,"byte_end":362277,"line_start":869,"line_end":869,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":362282,"byte_end":362285,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ let mut buffered = stream_of_futures.try_buffer_unordered(10);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":362290,"byte_end":362356,"line_start":871,"line_end":871,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":362361,"byte_end":362364,"line_start":872,"line_end":872,"column_start":5,"column_end":8}},{"value":"/ send_two.send(2i32)?;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":362369,"byte_end":362394,"line_start":873,"line_end":873,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(2i32)));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":362399,"byte_end":362453,"line_start":874,"line_end":874,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":362458,"byte_end":362461,"line_start":875,"line_end":875,"column_start":5,"column_end":8}},{"value":"/ send_one.send(1i32)?;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":362466,"byte_end":362491,"line_start":876,"line_end":876,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(1i32)));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":362496,"byte_end":362550,"line_start":877,"line_end":877,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":362555,"byte_end":362558,"line_start":878,"line_end":878,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffered.next().await, None);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":362563,"byte_end":362607,"line_start":879,"line_end":879,"column_start":5,"column_end":49}},{"value":"/ # Ok::<(), i32>(()) }).unwrap();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":362612,"byte_end":362648,"line_start":880,"line_end":880,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":362653,"byte_end":362660,"line_start":881,"line_end":881,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":362665,"byte_end":362668,"line_start":882,"line_end":882,"column_start":5,"column_end":8}},{"value":"/ Errors from the underlying stream itself are propagated:","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":362673,"byte_end":362733,"line_start":883,"line_end":883,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":362738,"byte_end":362745,"line_start":884,"line_end":884,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":362750,"byte_end":362791,"line_start":885,"line_end":885,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":362796,"byte_end":362827,"line_start":886,"line_end":886,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":362832,"byte_end":362883,"line_start":887,"line_end":887,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":362888,"byte_end":362891,"line_start":888,"line_end":888,"column_start":5,"column_end":8}},{"value":"/ let (sink, stream_of_futures) = mpsc::unbounded();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":362896,"byte_end":362950,"line_start":889,"line_end":889,"column_start":5,"column_end":59}},{"value":"/ let mut buffered = stream_of_futures.try_buffer_unordered(10);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":362955,"byte_end":363021,"line_start":890,"line_end":890,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":363026,"byte_end":363029,"line_start":891,"line_end":891,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Ok(async { Ok(7i32) }))?;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":363034,"byte_end":363083,"line_start":892,"line_end":892,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(7i32)));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":363088,"byte_end":363142,"line_start":893,"line_end":893,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":363147,"byte_end":363150,"line_start":894,"line_end":894,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Err(\"error in the stream\"))?;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":363155,"byte_end":363208,"line_start":895,"line_end":895,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(buffered.next().await, Some(Err(\"error in the stream\")));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":363213,"byte_end":363285,"line_start":896,"line_end":896,"column_start":5,"column_end":77}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":363290,"byte_end":363349,"line_start":897,"line_end":897,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":363354,"byte_end":363361,"line_start":898,"line_end":898,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":363366,"byte_end":363400,"line_start":899,"line_end":899,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":363405,"byte_end":363430,"line_start":900,"line_end":900,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5542},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":366439,"byte_end":366451,"line_start":977,"line_end":977,"column_start":8,"column_end":20},"name":"try_buffered","qualname":"::stream::try_stream::TryStreamExt::try_buffered","value":"pub fn try_buffered(Self, usize) -> TryBuffered<Self> where\nSelf::Ok: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":5491},"children":[],"decl_id":null,"docs":" Attempt to execute several futures from a stream concurrently.","sig":null,"attributes":[{"value":"/ Attempt to execute several futures from a stream concurrently.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":363735,"byte_end":363801,"line_start":911,"line_end":911,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":363806,"byte_end":363809,"line_start":912,"line_end":912,"column_start":5,"column_end":8}},{"value":"/ This stream's `Ok` type must be a [`TryFuture`](futures_core::future::TryFuture) with an `Error` type","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":363814,"byte_end":363919,"line_start":913,"line_end":913,"column_start":5,"column_end":110}},{"value":"/ that matches the stream's `Error` type.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":363924,"byte_end":363967,"line_start":914,"line_end":914,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":363972,"byte_end":363975,"line_start":915,"line_end":915,"column_start":5,"column_end":8}},{"value":"/ This adaptor will buffer up to `n` futures and then return their","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":363980,"byte_end":364048,"line_start":916,"line_end":916,"column_start":5,"column_end":73}},{"value":"/ outputs in the order. If the underlying stream returns an error, it will","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":364053,"byte_end":364129,"line_start":917,"line_end":917,"column_start":5,"column_end":81}},{"value":"/ be immediately propagated.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":364134,"byte_end":364164,"line_start":918,"line_end":918,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":364169,"byte_end":364172,"line_start":919,"line_end":919,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of results, each containing either","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":364177,"byte_end":364252,"line_start":920,"line_end":920,"column_start":5,"column_end":80}},{"value":"/ an error or a future's output. An error can be produced either by the","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":364257,"byte_end":364330,"line_start":921,"line_end":921,"column_start":5,"column_end":78}},{"value":"/ underlying stream itself or by one of the futures it yielded.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":364335,"byte_end":364400,"line_start":922,"line_end":922,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":364405,"byte_end":364408,"line_start":923,"line_end":923,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":364413,"byte_end":364488,"line_start":924,"line_end":924,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":364493,"byte_end":364550,"line_start":925,"line_end":925,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":364555,"byte_end":364558,"line_start":926,"line_end":926,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":364563,"byte_end":364577,"line_start":927,"line_end":927,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":364582,"byte_end":364585,"line_start":928,"line_end":928,"column_start":5,"column_end":8}},{"value":"/ Results are returned in the order of addition:","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":364590,"byte_end":364640,"line_start":929,"line_end":929,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":364645,"byte_end":364652,"line_start":930,"line_end":930,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":364657,"byte_end":364698,"line_start":931,"line_end":931,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":364703,"byte_end":364737,"line_start":932,"line_end":932,"column_start":5,"column_end":39}},{"value":"/ use futures::future::lazy;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":364742,"byte_end":364772,"line_start":933,"line_end":933,"column_start":5,"column_end":35}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":364777,"byte_end":364834,"line_start":934,"line_end":934,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":364839,"byte_end":364842,"line_start":935,"line_end":935,"column_start":5,"column_end":8}},{"value":"/ let (send_one, recv_one) = oneshot::channel();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":364847,"byte_end":364897,"line_start":936,"line_end":936,"column_start":5,"column_end":55}},{"value":"/ let (send_two, recv_two) = oneshot::channel();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":364902,"byte_end":364952,"line_start":937,"line_end":937,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":364957,"byte_end":364960,"line_start":938,"line_end":938,"column_start":5,"column_end":8}},{"value":"/ let mut buffered = lazy(move |cx| {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":364965,"byte_end":365004,"line_start":939,"line_end":939,"column_start":5,"column_end":44}},{"value":"/     let stream_of_futures = stream::iter(vec![Ok(recv_one), Ok(recv_two)]);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":365009,"byte_end":365088,"line_start":940,"line_end":940,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":365093,"byte_end":365096,"line_start":941,"line_end":941,"column_start":5,"column_end":8}},{"value":"/     let mut buffered = stream_of_futures.try_buffered(10);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":365101,"byte_end":365163,"line_start":942,"line_end":942,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":365168,"byte_end":365171,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/     assert!(buffered.try_poll_next_unpin(cx).is_pending());","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":365176,"byte_end":365239,"line_start":944,"line_end":944,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":365244,"byte_end":365247,"line_start":945,"line_end":945,"column_start":5,"column_end":8}},{"value":"/     send_two.send(2i32)?;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":365252,"byte_end":365281,"line_start":946,"line_end":946,"column_start":5,"column_end":34}},{"value":"/     assert!(buffered.try_poll_next_unpin(cx).is_pending());","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":365286,"byte_end":365349,"line_start":947,"line_end":947,"column_start":5,"column_end":68}},{"value":"/     Ok::<_, i32>(buffered)","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":365354,"byte_end":365384,"line_start":948,"line_end":948,"column_start":5,"column_end":35}},{"value":"/ }).await?;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":365389,"byte_end":365403,"line_start":949,"line_end":949,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":365408,"byte_end":365411,"line_start":950,"line_end":950,"column_start":5,"column_end":8}},{"value":"/ send_one.send(1i32)?;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":365416,"byte_end":365441,"line_start":951,"line_end":951,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(1i32)));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":365446,"byte_end":365500,"line_start":952,"line_end":952,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(2i32)));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":365505,"byte_end":365559,"line_start":953,"line_end":953,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":365564,"byte_end":365567,"line_start":954,"line_end":954,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffered.next().await, None);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":365572,"byte_end":365616,"line_start":955,"line_end":955,"column_start":5,"column_end":49}},{"value":"/ # Ok::<(), i32>(()) }).unwrap();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":365621,"byte_end":365657,"line_start":956,"line_end":956,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":365662,"byte_end":365669,"line_start":957,"line_end":957,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":365674,"byte_end":365677,"line_start":958,"line_end":958,"column_start":5,"column_end":8}},{"value":"/ Errors from the underlying stream itself are propagated:","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":365682,"byte_end":365742,"line_start":959,"line_end":959,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":365747,"byte_end":365754,"line_start":960,"line_end":960,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":365759,"byte_end":365800,"line_start":961,"line_end":961,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":365805,"byte_end":365836,"line_start":962,"line_end":962,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":365841,"byte_end":365892,"line_start":963,"line_end":963,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":365897,"byte_end":365900,"line_start":964,"line_end":964,"column_start":5,"column_end":8}},{"value":"/ let (sink, stream_of_futures) = mpsc::unbounded();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":365905,"byte_end":365959,"line_start":965,"line_end":965,"column_start":5,"column_end":59}},{"value":"/ let mut buffered = stream_of_futures.try_buffered(10);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":365964,"byte_end":366022,"line_start":966,"line_end":966,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":366027,"byte_end":366030,"line_start":967,"line_end":967,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Ok(async { Ok(7i32) }))?;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":366035,"byte_end":366084,"line_start":968,"line_end":968,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(7i32)));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":366089,"byte_end":366143,"line_start":969,"line_end":969,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":366148,"byte_end":366151,"line_start":970,"line_end":970,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Err(\"error in the stream\"))?;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":366156,"byte_end":366209,"line_start":971,"line_end":971,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(buffered.next().await, Some(Err(\"error in the stream\")));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":366214,"byte_end":366286,"line_start":972,"line_end":972,"column_start":5,"column_end":77}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":366291,"byte_end":366350,"line_start":973,"line_end":973,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":366355,"byte_end":366362,"line_start":974,"line_end":974,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":366367,"byte_end":366401,"line_start":975,"line_end":975,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":366406,"byte_end":366431,"line_start":976,"line_end":976,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5543},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":366906,"byte_end":366925,"line_start":991,"line_end":991,"column_start":8,"column_end":27},"name":"try_poll_next_unpin","qualname":"::stream::try_stream::TryStreamExt::try_poll_next_unpin","value":"pub fn try_poll_next_unpin(&mut Self, &mut Context)\n-> Poll<Option<Result<Self::Ok, Self::Error>>> where Self: Unpin","parent":{"krate":0,"index":5491},"children":[],"decl_id":null,"docs":" A convenience method for calling [`TryStream::try_poll_next`] on [`Unpin`]\n stream types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`TryStream::try_poll_next`] on [`Unpin`]","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":366798,"byte_end":366876,"line_start":989,"line_end":989,"column_start":5,"column_end":83}},{"value":"/ stream types.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":366881,"byte_end":366898,"line_start":990,"line_end":990,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":14553},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":418440,"byte_end":418444,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::iter::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":14555}],"decl_id":null,"docs":" Stream for the [`iter`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`iter`] function.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":418318,"byte_end":418355,"line_start":6,"line_end":6,"column_start":1,"column_end":38}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":418380,"byte_end":418428,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":5644},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":418962,"byte_end":418966,"line_start":29,"line_end":29,"column_start":8,"column_end":12},"name":"iter","qualname":"::stream::iter::iter","value":"pub fn iter<I>(I) -> Iter<I::IntoIter> where I: IntoIterator","parent":null,"children":[],"decl_id":null,"docs":" Converts an `Iterator` into a `Stream` which is always ready\n to yield the next value.","sig":null,"attributes":[{"value":"/ Converts an `Iterator` into a `Stream` which is always ready","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":418496,"byte_end":418560,"line_start":15,"line_end":15,"column_start":1,"column_end":65}},{"value":"/ to yield the next value.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":418561,"byte_end":418589,"line_start":16,"line_end":16,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":418590,"byte_end":418593,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Iterators in Rust don't express the ability to block, so this adapter","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":418594,"byte_end":418667,"line_start":18,"line_end":18,"column_start":1,"column_end":74}},{"value":"/ simply always calls `iter.next()` and returns that.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":418668,"byte_end":418723,"line_start":19,"line_end":19,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":418724,"byte_end":418727,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":418728,"byte_end":418735,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":418736,"byte_end":418777,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":418778,"byte_end":418821,"line_start":23,"line_end":23,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":418822,"byte_end":418825,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::iter(vec![17, 19]);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":418826,"byte_end":418870,"line_start":25,"line_end":25,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(vec![17, 19], stream.collect::<Vec<i32>>().await);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":418871,"byte_end":418936,"line_start":26,"line_end":26,"column_start":1,"column_end":66}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":418937,"byte_end":418946,"line_start":27,"line_end":27,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":418947,"byte_end":418954,"line_start":28,"line_end":28,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":14562},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":419657,"byte_end":419663,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::stream::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":14564}],"decl_id":null,"docs":" Stream for the [`repeat`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`repeat`] function.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":419533,"byte_end":419572,"line_start":6,"line_end":6,"column_start":1,"column_end":40}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":419597,"byte_end":419645,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":5679},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":420187,"byte_end":420193,"line_start":27,"line_end":27,"column_start":8,"column_end":14},"name":"repeat","qualname":"::stream::repeat::repeat","value":"pub fn repeat<T>(T) -> Repeat<T> where T: Clone","parent":null,"children":[],"decl_id":null,"docs":" Create a stream which produces the same item repeatedly.","sig":null,"attributes":[{"value":"/ Create a stream which produces the same item repeatedly.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":419685,"byte_end":419745,"line_start":13,"line_end":13,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":419746,"byte_end":419749,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The stream never terminates. Note that you likely want to avoid","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":419750,"byte_end":419817,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/ usage of `collect` or such on the returned stream as it will exhaust","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":419818,"byte_end":419890,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"/ available memory as it tries to just fill up all RAM.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":419891,"byte_end":419948,"line_start":17,"line_end":17,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":419949,"byte_end":419952,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":419953,"byte_end":419960,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":419961,"byte_end":420002,"line_start":20,"line_end":20,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":420003,"byte_end":420046,"line_start":21,"line_end":21,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":420047,"byte_end":420050,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::repeat(9);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":420051,"byte_end":420086,"line_start":23,"line_end":23,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(vec![9, 9, 9], stream.take(3).collect::<Vec<i32>>().await);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":420087,"byte_end":420161,"line_start":24,"line_end":24,"column_start":1,"column_end":75}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":420162,"byte_end":420171,"line_start":25,"line_end":25,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":420172,"byte_end":420179,"line_start":26,"line_end":26,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":14571},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":421184,"byte_end":421194,"line_start":13,"line_end":13,"column_start":12,"column_end":22},"name":"RepeatWith","qualname":"::stream::repeat_with::RepeatWith","value":"RepeatWith {  }","parent":null,"children":[{"krate":0,"index":14573}],"decl_id":null,"docs":" An stream that repeats elements of type `A` endlessly by\n applying the provided closure `F: FnMut() -> A`.","sig":null,"attributes":[{"value":"/ An stream that repeats elements of type `A` endlessly by","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":420882,"byte_end":420942,"line_start":6,"line_end":6,"column_start":1,"column_end":61}},{"value":"/ applying the provided closure `F: FnMut() -> A`.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":420943,"byte_end":420995,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":420996,"byte_end":420999,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`repeat_with()`] function.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":421000,"byte_end":421063,"line_start":9,"line_end":9,"column_start":1,"column_end":64}},{"value":"/ See its documentation for more.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":421064,"byte_end":421099,"line_start":10,"line_end":10,"column_start":1,"column_end":36}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":421124,"byte_end":421172,"line_start":12,"line_end":12,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":5732},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":423482,"byte_end":423493,"line_start":91,"line_end":91,"column_start":8,"column_end":19},"name":"repeat_with","qualname":"::stream::repeat_with::repeat_with","value":"pub fn repeat_with<A, F: FnMut() -> A>(F) -> RepeatWith<F>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream that repeats elements of type `A` endlessly by\n applying the provided closure, the repeater, `F: FnMut() -> A`.","sig":null,"attributes":[{"value":"/ Creates a new stream that repeats elements of type `A` endlessly by","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":421710,"byte_end":421781,"line_start":37,"line_end":37,"column_start":1,"column_end":72}},{"value":"/ applying the provided closure, the repeater, `F: FnMut() -> A`.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":421782,"byte_end":421849,"line_start":38,"line_end":38,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":421850,"byte_end":421853,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ The `repeat_with()` function calls the repeater over and over again.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":421854,"byte_end":421926,"line_start":40,"line_end":40,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":421927,"byte_end":421930,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Infinite stream like `repeat_with()` are often used with adapters like","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":421931,"byte_end":422005,"line_start":42,"line_end":42,"column_start":1,"column_end":75}},{"value":"/ [`stream.take()`], in order to make them finite.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":422006,"byte_end":422058,"line_start":43,"line_end":43,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":422059,"byte_end":422062,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ If the element type of the stream you need implements [`Clone`], and","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":422063,"byte_end":422135,"line_start":45,"line_end":45,"column_start":1,"column_end":73}},{"value":"/ it is OK to keep the source element in memory, you should instead use","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":422136,"byte_end":422209,"line_start":46,"line_end":46,"column_start":1,"column_end":74}},{"value":"/ the [`stream.repeat()`] function.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":422210,"byte_end":422247,"line_start":47,"line_end":47,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":422248,"byte_end":422251,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":422252,"byte_end":422266,"line_start":49,"line_end":49,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":422267,"byte_end":422270,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":422271,"byte_end":422287,"line_start":51,"line_end":51,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":422288,"byte_end":422291,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":422292,"byte_end":422299,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":422300,"byte_end":422341,"line_start":54,"line_end":54,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":422342,"byte_end":422385,"line_start":55,"line_end":55,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":422386,"byte_end":422389,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ // let's assume we have some value of a type that is not `Clone`","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":422390,"byte_end":422458,"line_start":57,"line_end":57,"column_start":1,"column_end":69}},{"value":"/ // or which don't want to have in memory just yet because it is expensive:","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":422459,"byte_end":422537,"line_start":58,"line_end":58,"column_start":1,"column_end":79}},{"value":"/ #[derive(PartialEq, Debug)]","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":422538,"byte_end":422569,"line_start":59,"line_end":59,"column_start":1,"column_end":32}},{"value":"/ struct Expensive;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":422570,"byte_end":422591,"line_start":60,"line_end":60,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":422592,"byte_end":422595,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ // a particular value forever:","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":422596,"byte_end":422630,"line_start":62,"line_end":62,"column_start":1,"column_end":35}},{"value":"/ let mut things = stream::repeat_with(|| Expensive);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":422631,"byte_end":422686,"line_start":63,"line_end":63,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":422687,"byte_end":422690,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(Some(Expensive), things.next().await);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":422691,"byte_end":422744,"line_start":65,"line_end":65,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(Some(Expensive), things.next().await);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":422745,"byte_end":422798,"line_start":66,"line_end":66,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(Some(Expensive), things.next().await);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":422799,"byte_end":422852,"line_start":67,"line_end":67,"column_start":1,"column_end":54}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":422853,"byte_end":422862,"line_start":68,"line_end":68,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":422863,"byte_end":422870,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":422871,"byte_end":422874,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ Using mutation and going finite:","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":422875,"byte_end":422911,"line_start":71,"line_end":71,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":422912,"byte_end":422915,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":422916,"byte_end":422927,"line_start":73,"line_end":73,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":422928,"byte_end":422969,"line_start":74,"line_end":74,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":422970,"byte_end":423013,"line_start":75,"line_end":75,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":423014,"byte_end":423017,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ // From the zeroth to the third power of two:","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":423018,"byte_end":423067,"line_start":77,"line_end":77,"column_start":1,"column_end":50}},{"value":"/ let mut curr = 1;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":423068,"byte_end":423089,"line_start":78,"line_end":78,"column_start":1,"column_end":22}},{"value":"/ let mut pow2 = stream::repeat_with(|| { let tmp = curr; curr *= 2; tmp })","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":423090,"byte_end":423167,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"/                     .take(4);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":423168,"byte_end":423201,"line_start":80,"line_end":80,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":423202,"byte_end":423205,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(Some(1), pow2.next().await);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":423206,"byte_end":423249,"line_start":82,"line_end":82,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(Some(2), pow2.next().await);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":423250,"byte_end":423293,"line_start":83,"line_end":83,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(Some(4), pow2.next().await);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":423294,"byte_end":423337,"line_start":84,"line_end":84,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(Some(8), pow2.next().await);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":423338,"byte_end":423381,"line_start":85,"line_end":85,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":423382,"byte_end":423385,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ // ... and now we're done","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":423386,"byte_end":423415,"line_start":87,"line_end":87,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(None, pow2.next().await);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":423416,"byte_end":423456,"line_start":88,"line_end":88,"column_start":1,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":423457,"byte_end":423466,"line_start":89,"line_end":89,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":423467,"byte_end":423474,"line_start":90,"line_end":90,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":14580},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/empty.rs","byte_start":423884,"byte_end":423889,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Empty","qualname":"::stream::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":14582}],"decl_id":null,"docs":" Stream for the [`empty`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`empty`] function.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/empty.rs","byte_start":423768,"byte_end":423806,"line_start":7,"line_end":7,"column_start":1,"column_end":39}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/empty.rs","byte_start":423824,"byte_end":423872,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":5766},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/empty.rs","byte_start":424058,"byte_end":424063,"line_start":17,"line_end":17,"column_start":8,"column_end":13},"name":"empty","qualname":"::stream::empty::empty","value":"pub fn empty<T>() -> Empty<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream which contains no elements.","sig":null,"attributes":[{"value":"/ Creates a stream which contains no elements.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/empty.rs","byte_start":423928,"byte_end":423976,"line_start":14,"line_end":14,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/empty.rs","byte_start":423977,"byte_end":423980,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Ready(None)` when polled.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/empty.rs","byte_start":423981,"byte_end":424050,"line_start":16,"line_end":16,"column_start":1,"column_end":70}}]},{"kind":"Function","id":{"krate":0,"index":5818},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/once.rs","byte_start":425148,"byte_end":425152,"line_start":20,"line_end":20,"column_start":8,"column_end":12},"name":"once","qualname":"::stream::once::once","value":"pub fn once<Fut: Future>(Fut) -> Once<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream of a single element.","sig":null,"attributes":[{"value":"/ Creates a stream of a single element.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/once.rs","byte_start":424841,"byte_end":424882,"line_start":9,"line_end":9,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/once.rs","byte_start":424883,"byte_end":424886,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/once.rs","byte_start":424887,"byte_end":424894,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/once.rs","byte_start":424895,"byte_end":424936,"line_start":12,"line_end":12,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/once.rs","byte_start":424937,"byte_end":424980,"line_start":13,"line_end":13,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/once.rs","byte_start":424981,"byte_end":424984,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::once(async { 17 });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/once.rs","byte_start":424985,"byte_end":425029,"line_start":15,"line_end":15,"column_start":1,"column_end":45}},{"value":"/ let collected = stream.collect::<Vec<i32>>().await;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/once.rs","byte_start":425030,"byte_end":425085,"line_start":16,"line_end":16,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(collected, vec![17]);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/once.rs","byte_start":425086,"byte_end":425122,"line_start":17,"line_end":17,"column_start":1,"column_end":37}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/once.rs","byte_start":425123,"byte_end":425132,"line_start":18,"line_end":18,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/once.rs","byte_start":425133,"byte_end":425140,"line_start":19,"line_end":19,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":14586},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/once.rs","byte_start":425414,"byte_end":425418,"line_start":28,"line_end":28,"column_start":16,"column_end":20},"name":"Once","qualname":"::stream::once::Once","value":"Once {  }","parent":null,"children":[{"krate":0,"index":14588}],"decl_id":null,"docs":" A stream which emits single element and then EOF.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14622},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/pending.rs","byte_start":426594,"byte_end":426601,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Pending","qualname":"::stream::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":14624}],"decl_id":null,"docs":" Stream for the [`pending()`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`pending()`] function.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/pending.rs","byte_start":426474,"byte_end":426516,"line_start":7,"line_end":7,"column_start":1,"column_end":43}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/pending.rs","byte_start":426534,"byte_end":426582,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":5862},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/pending.rs","byte_start":426777,"byte_end":426784,"line_start":17,"line_end":17,"column_start":8,"column_end":15},"name":"pending","qualname":"::stream::pending::pending","value":"pub fn pending<T>() -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream which never returns any elements.","sig":null,"attributes":[{"value":"/ Creates a stream which never returns any elements.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/pending.rs","byte_start":426645,"byte_end":426699,"line_start":14,"line_end":14,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/pending.rs","byte_start":426700,"byte_end":426703,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Pending` when polled.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/pending.rs","byte_start":426704,"byte_end":426769,"line_start":16,"line_end":16,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":5904},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":427627,"byte_end":427633,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::stream::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":5906}],"decl_id":null,"docs":" Stream for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`poll_fn`] function.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":427526,"byte_end":427566,"line_start":9,"line_end":9,"column_start":1,"column_end":41}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":427567,"byte_end":427615,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":5912},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":428321,"byte_end":428328,"line_start":41,"line_end":41,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::stream::poll_fn::poll_fn","value":"pub fn poll_fn<T, F>(F) -> PollFn<F> where F: FnMut(&mut Context) ->\nPoll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream wrapping a function returning `Poll<Option<T>>`.","sig":null,"attributes":[{"value":"/ Creates a new stream wrapping a function returning `Poll<Option<T>>`.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":427833,"byte_end":427906,"line_start":23,"line_end":23,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":427907,"byte_end":427910,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Polling the returned stream calls the wrapped function.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":427911,"byte_end":427970,"line_start":25,"line_end":25,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":427971,"byte_end":427974,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":427975,"byte_end":427989,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":427990,"byte_end":427993,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":427994,"byte_end":428001,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ use futures::stream::poll_fn;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":428002,"byte_end":428035,"line_start":30,"line_end":30,"column_start":1,"column_end":34}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":428036,"byte_end":428064,"line_start":31,"line_end":31,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":428065,"byte_end":428068,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let mut counter = 1usize;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":428069,"byte_end":428098,"line_start":33,"line_end":33,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":428099,"byte_end":428102,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let read_stream = poll_fn(move |_| -> Poll<Option<String>> {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":428103,"byte_end":428167,"line_start":35,"line_end":35,"column_start":1,"column_end":65}},{"value":"/     if counter == 0 { return Poll::Ready(None); }","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":428168,"byte_end":428221,"line_start":36,"line_end":36,"column_start":1,"column_end":54}},{"value":"/     counter -= 1;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":428222,"byte_end":428243,"line_start":37,"line_end":37,"column_start":1,"column_end":22}},{"value":"/     Poll::Ready(Some(\"Hello, World!\".to_owned()))","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":428244,"byte_end":428297,"line_start":38,"line_end":38,"column_start":1,"column_end":54}},{"value":"/ });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":428298,"byte_end":428305,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":428306,"byte_end":428313,"line_start":40,"line_end":40,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":14628},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":429089,"byte_end":429102,"line_start":12,"line_end":12,"column_start":16,"column_end":29},"name":"PollImmediate","qualname":"::stream::poll_immediate::PollImmediate","value":"PollImmediate {  }","parent":null,"children":[{"krate":0,"index":14630}],"decl_id":null,"docs":" Stream for the [poll_immediate](poll_immediate()) function.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":5953},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":431083,"byte_end":431097,"line_start":78,"line_end":78,"column_start":8,"column_end":22},"name":"poll_immediate","qualname":"::stream::poll_immediate::poll_immediate","value":"pub fn poll_immediate<S: Stream>(S) -> PollImmediate<S>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream that always immediately returns [Poll::Ready](core::task::Poll::Ready) when awaiting it.","sig":null,"attributes":[{"value":"/ Creates a new stream that always immediately returns [Poll::Ready](core::task::Poll::Ready) when awaiting it.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":430202,"byte_end":430315,"line_start":53,"line_end":53,"column_start":1,"column_end":114}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":430316,"byte_end":430319,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ This is useful when immediacy is more important than waiting for the next item to be ready.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":430320,"byte_end":430415,"line_start":55,"line_end":55,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":430416,"byte_end":430419,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":430420,"byte_end":430434,"line_start":57,"line_end":57,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":430435,"byte_end":430438,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":430439,"byte_end":430446,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":430447,"byte_end":430488,"line_start":60,"line_end":60,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":430489,"byte_end":430532,"line_start":61,"line_end":61,"column_start":1,"column_end":44}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":430533,"byte_end":430561,"line_start":62,"line_end":62,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":430562,"byte_end":430565,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ let mut r = stream::poll_immediate(Box::pin(stream::iter(1_u32..3)));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":430566,"byte_end":430639,"line_start":64,"line_end":64,"column_start":1,"column_end":74}},{"value":"/ assert_eq!(r.next().await, Some(Poll::Ready(1)));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":430640,"byte_end":430693,"line_start":65,"line_end":65,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(r.next().await, Some(Poll::Ready(2)));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":430694,"byte_end":430747,"line_start":66,"line_end":66,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(r.next().await, None);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":430748,"byte_end":430785,"line_start":67,"line_end":67,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":430786,"byte_end":430789,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ let mut p = stream::poll_immediate(Box::pin(stream::once(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":430790,"byte_end":430858,"line_start":69,"line_end":69,"column_start":1,"column_end":69}},{"value":"/     futures::pending!();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":430859,"byte_end":430887,"line_start":70,"line_end":70,"column_start":1,"column_end":29}},{"value":"/     42_u8","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":430888,"byte_end":430901,"line_start":71,"line_end":71,"column_start":1,"column_end":14}},{"value":"/ })));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":430902,"byte_end":430911,"line_start":72,"line_end":72,"column_start":1,"column_end":10}},{"value":"/ assert_eq!(p.next().await, Some(Poll::Pending));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":430912,"byte_end":430964,"line_start":73,"line_end":73,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(p.next().await, Some(Poll::Ready(42)));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":430965,"byte_end":431019,"line_start":74,"line_end":74,"column_start":1,"column_end":55}},{"value":"/ assert_eq!(p.next().await, None);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":431020,"byte_end":431057,"line_start":75,"line_end":75,"column_start":1,"column_end":38}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":431058,"byte_end":431067,"line_start":76,"line_end":76,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":431068,"byte_end":431075,"line_start":77,"line_end":77,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":14667},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":431630,"byte_end":431636,"line_start":12,"line_end":12,"column_start":16,"column_end":22},"name":"Select","qualname":"::stream::select::Select","value":"Select {  }","parent":null,"children":[{"krate":0,"index":14670}],"decl_id":null,"docs":" Stream for the [`select()`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":5996},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":432662,"byte_end":432668,"line_start":47,"line_end":47,"column_start":8,"column_end":14},"name":"select","qualname":"::stream::select::select","value":"pub fn select<St1, St2>(St1, St2) -> Select<St1, St2> where St1: Stream,\nSt2: Stream<Item = St1::Item>","parent":null,"children":[],"decl_id":null,"docs":" This function will attempt to pull items from both streams. Each\n stream will be polled in a round-robin fashion, and whenever a stream is\n ready to yield an item that item is yielded.","sig":null,"attributes":[{"value":"/ This function will attempt to pull items from both streams. Each","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":431758,"byte_end":431826,"line_start":18,"line_end":18,"column_start":1,"column_end":69}},{"value":"/ stream will be polled in a round-robin fashion, and whenever a stream is","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":431827,"byte_end":431903,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ ready to yield an item that item is yielded.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":431904,"byte_end":431952,"line_start":20,"line_end":20,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":431953,"byte_end":431956,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ After one of the two input streams completes, the remaining one will be","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":431957,"byte_end":432032,"line_start":22,"line_end":22,"column_start":1,"column_end":76}},{"value":"/ polled exclusively. The returned stream completes when both input","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":432033,"byte_end":432102,"line_start":23,"line_end":23,"column_start":1,"column_end":70}},{"value":"/ streams have completed.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":432103,"byte_end":432130,"line_start":24,"line_end":24,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":432131,"byte_end":432134,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes both streams and returns a wrapped","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":432135,"byte_end":432206,"line_start":26,"line_end":26,"column_start":1,"column_end":72}},{"value":"/ version of them.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":432207,"byte_end":432227,"line_start":27,"line_end":27,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":432228,"byte_end":432231,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":432232,"byte_end":432247,"line_start":29,"line_end":29,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":432248,"byte_end":432251,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":432252,"byte_end":432263,"line_start":31,"line_end":31,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":432264,"byte_end":432305,"line_start":32,"line_end":32,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{ repeat, select, StreamExt };","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":432306,"byte_end":432361,"line_start":33,"line_end":33,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":432362,"byte_end":432365,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let left = repeat(1);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":432366,"byte_end":432391,"line_start":35,"line_end":35,"column_start":1,"column_end":26}},{"value":"/ let right = repeat(2);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":432392,"byte_end":432418,"line_start":36,"line_end":36,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":432419,"byte_end":432422,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ let mut out = select(left, right);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":432423,"byte_end":432461,"line_start":38,"line_end":38,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":432462,"byte_end":432465,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ for _ in 0..100 {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":432466,"byte_end":432487,"line_start":40,"line_end":40,"column_start":1,"column_end":22}},{"value":"/     // We should be alternating.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":432488,"byte_end":432524,"line_start":41,"line_end":41,"column_start":1,"column_end":37}},{"value":"/     assert_eq!(1, out.select_next_some().await);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":432525,"byte_end":432577,"line_start":42,"line_end":42,"column_start":1,"column_end":53}},{"value":"/     assert_eq!(2, out.select_next_some().await);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":432578,"byte_end":432630,"line_start":43,"line_end":43,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":432631,"byte_end":432636,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":432637,"byte_end":432646,"line_start":45,"line_end":45,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":432647,"byte_end":432654,"line_start":46,"line_end":46,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6003},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":433137,"byte_end":433144,"line_start":64,"line_end":64,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Select<St1, St2>>::get_ref","value":"pub fn get_ref(&Self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":433029,"byte_end":433103,"line_start":62,"line_end":62,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":433108,"byte_end":433125,"line_start":63,"line_end":63,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":6004},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":433472,"byte_end":433479,"line_start":73,"line_end":73,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Select<St1, St2>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":433210,"byte_end":433278,"line_start":68,"line_end":68,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":433283,"byte_end":433314,"line_start":69,"line_end":69,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":433319,"byte_end":433322,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":433327,"byte_end":433400,"line_start":71,"line_end":71,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":433405,"byte_end":433460,"line_start":72,"line_end":72,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":6005},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":433826,"byte_end":433837,"line_start":82,"line_end":82,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Select<St1, St2>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":433557,"byte_end":433632,"line_start":77,"line_end":77,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":433637,"byte_end":433668,"line_start":78,"line_end":78,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":433673,"byte_end":433676,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":433681,"byte_end":433754,"line_start":80,"line_end":80,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":433759,"byte_end":433814,"line_start":81,"line_end":81,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":6006},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":434211,"byte_end":434221,"line_start":91,"line_end":91,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Select<St1, St2>>::into_inner","value":"pub fn into_inner(Self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":433975,"byte_end":434038,"line_start":87,"line_end":87,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":434043,"byte_end":434046,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":434051,"byte_end":434123,"line_start":89,"line_end":89,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":434128,"byte_end":434199,"line_start":90,"line_end":90,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":14713},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":435163,"byte_end":435167,"line_start":12,"line_end":12,"column_start":5,"column_end":9},"name":"Left","qualname":"::stream::select_with_strategy::PollNext::Left","value":"PollNext::Left","parent":{"krate":0,"index":14712},"children":[],"decl_id":null,"docs":" Poll the first stream.\n","sig":null,"attributes":[{"value":"/ Poll the first stream.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":435132,"byte_end":435158,"line_start":11,"line_end":11,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":14715},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":435205,"byte_end":435210,"line_start":14,"line_end":14,"column_start":5,"column_end":10},"name":"Right","qualname":"::stream::select_with_strategy::PollNext::Right","value":"PollNext::Right","parent":{"krate":0,"index":14712},"children":[],"decl_id":null,"docs":" Poll the second stream.\n","sig":null,"attributes":[{"value":"/ Poll the second stream.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":435173,"byte_end":435200,"line_start":13,"line_end":13,"column_start":5,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":14712},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":435117,"byte_end":435125,"line_start":10,"line_end":10,"column_start":10,"column_end":18},"name":"PollNext","qualname":"::stream::select_with_strategy::PollNext","value":"pub enum PollNext { Left, Right, }","parent":null,"children":[{"krate":0,"index":14713},{"krate":0,"index":14715}],"decl_id":null,"docs":" Type to tell [`SelectWithStrategy`] which stream to poll next.\n","sig":null,"attributes":[{"value":"/ Type to tell [`SelectWithStrategy`] which stream to poll next.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":434990,"byte_end":435056,"line_start":8,"line_end":8,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":6059},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":435291,"byte_end":435297,"line_start":19,"line_end":19,"column_start":12,"column_end":18},"name":"toggle","qualname":"<PollNext>::toggle","value":"pub fn toggle(&mut Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Toggle the value and return the old one.\n","sig":null,"attributes":[{"value":"/ Toggle the value and return the old one.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":435235,"byte_end":435279,"line_start":18,"line_end":18,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":14731},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":435769,"byte_end":435787,"line_start":40,"line_end":40,"column_start":16,"column_end":34},"name":"SelectWithStrategy","qualname":"::stream::select_with_strategy::SelectWithStrategy","value":"SelectWithStrategy {  }","parent":null,"children":[{"krate":0,"index":14736},{"krate":0,"index":14737},{"krate":0,"index":14738},{"krate":0,"index":14739}],"decl_id":null,"docs":" Stream for the [`select_with_strategy()`] function. See function docs for details.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":6062},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":438079,"byte_end":438099,"line_start":111,"line_end":111,"column_start":8,"column_end":28},"name":"select_with_strategy","qualname":"::stream::select_with_strategy::select_with_strategy","value":"pub fn select_with_strategy<St1, St2, Clos, State>(St1, St2, Clos)\n-> SelectWithStrategy<St1, St2, Clos, State> where St1: Stream,\nSt2: Stream<Item = St1::Item>, Clos: FnMut(&mut State) -> PollNext,\nState: Default","parent":null,"children":[],"decl_id":null,"docs":" This function will attempt to pull items from both streams. You provide a\n closure to tell [`SelectWithStrategy`] which stream to poll. The closure can\n store state on `SelectWithStrategy` to which it will receive a `&mut` on every\n invocation. This allows basing the strategy on prior choices.","sig":null,"attributes":[{"value":"/ This function will attempt to pull items from both streams. You provide a","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":435950,"byte_end":436027,"line_start":50,"line_end":50,"column_start":1,"column_end":78}},{"value":"/ closure to tell [`SelectWithStrategy`] which stream to poll. The closure can","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":436028,"byte_end":436108,"line_start":51,"line_end":51,"column_start":1,"column_end":81}},{"value":"/ store state on `SelectWithStrategy` to which it will receive a `&mut` on every","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":436109,"byte_end":436191,"line_start":52,"line_end":52,"column_start":1,"column_end":83}},{"value":"/ invocation. This allows basing the strategy on prior choices.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":436192,"byte_end":436257,"line_start":53,"line_end":53,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":436258,"byte_end":436261,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ After one of the two input streams completes, the remaining one will be","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":436262,"byte_end":436337,"line_start":55,"line_end":55,"column_start":1,"column_end":76}},{"value":"/ polled exclusively. The returned stream completes when both input","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":436338,"byte_end":436407,"line_start":56,"line_end":56,"column_start":1,"column_end":70}},{"value":"/ streams have completed.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":436408,"byte_end":436435,"line_start":57,"line_end":57,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":436436,"byte_end":436439,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes both streams and returns a wrapped","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":436440,"byte_end":436511,"line_start":59,"line_end":59,"column_start":1,"column_end":72}},{"value":"/ version of them.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":436512,"byte_end":436532,"line_start":60,"line_end":60,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":436533,"byte_end":436536,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":436537,"byte_end":436552,"line_start":62,"line_end":62,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":436553,"byte_end":436556,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ ### Priority","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":436557,"byte_end":436573,"line_start":64,"line_end":64,"column_start":1,"column_end":17}},{"value":"/ This example shows how to always prioritize the left stream.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":436574,"byte_end":436638,"line_start":65,"line_end":65,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":436639,"byte_end":436642,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":436643,"byte_end":436654,"line_start":67,"line_end":67,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":436655,"byte_end":436696,"line_start":68,"line_end":68,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{ repeat, select_with_strategy, PollNext, StreamExt };","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":436697,"byte_end":436776,"line_start":69,"line_end":69,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":436777,"byte_end":436780,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ let left = repeat(1);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":436781,"byte_end":436806,"line_start":71,"line_end":71,"column_start":1,"column_end":26}},{"value":"/ let right = repeat(2);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":436807,"byte_end":436833,"line_start":72,"line_end":72,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":436834,"byte_end":436837,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ // We don't need any state, so let's make it an empty tuple.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":436838,"byte_end":436902,"line_start":74,"line_end":74,"column_start":1,"column_end":65}},{"value":"/ // We must provide some type here, as there is no way for the compiler","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":436903,"byte_end":436977,"line_start":75,"line_end":75,"column_start":1,"column_end":75}},{"value":"/ // to infer it. As we don't need to capture variables, we can just","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":436978,"byte_end":437048,"line_start":76,"line_end":76,"column_start":1,"column_end":71}},{"value":"/ // use a function pointer instead of a closure.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":437049,"byte_end":437100,"line_start":77,"line_end":77,"column_start":1,"column_end":52}},{"value":"/ fn prio_left(_: &mut ()) -> PollNext { PollNext::Left }","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":437101,"byte_end":437160,"line_start":78,"line_end":78,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":437161,"byte_end":437164,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ let mut out = select_with_strategy(left, right, prio_left);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":437165,"byte_end":437228,"line_start":80,"line_end":80,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":437229,"byte_end":437232,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ for _ in 0..100 {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":437233,"byte_end":437254,"line_start":82,"line_end":82,"column_start":1,"column_end":22}},{"value":"/     // Whenever we poll out, we will alwas get `1`.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":437255,"byte_end":437310,"line_start":83,"line_end":83,"column_start":1,"column_end":56}},{"value":"/     assert_eq!(1, out.select_next_some().await);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":437311,"byte_end":437363,"line_start":84,"line_end":84,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":437364,"byte_end":437369,"line_start":85,"line_end":85,"column_start":1,"column_end":6}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":437370,"byte_end":437379,"line_start":86,"line_end":86,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":437380,"byte_end":437387,"line_start":87,"line_end":87,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":437388,"byte_end":437391,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ ### Round Robin","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":437392,"byte_end":437411,"line_start":89,"line_end":89,"column_start":1,"column_end":20}},{"value":"/ This example shows how to select from both streams round robin.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":437412,"byte_end":437479,"line_start":90,"line_end":90,"column_start":1,"column_end":68}},{"value":"/ Note: this special case is provided by [`futures-util::stream::select`].","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":437480,"byte_end":437556,"line_start":91,"line_end":91,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":437557,"byte_end":437560,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":437561,"byte_end":437572,"line_start":93,"line_end":93,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":437573,"byte_end":437614,"line_start":94,"line_end":94,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{ repeat, select_with_strategy, PollNext, StreamExt };","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":437615,"byte_end":437694,"line_start":95,"line_end":95,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":437695,"byte_end":437698,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ let left = repeat(1);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":437699,"byte_end":437724,"line_start":97,"line_end":97,"column_start":1,"column_end":26}},{"value":"/ let right = repeat(2);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":437725,"byte_end":437751,"line_start":98,"line_end":98,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":437752,"byte_end":437755,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ let rrobin = |last: &mut PollNext| last.toggle();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":437756,"byte_end":437809,"line_start":100,"line_end":100,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":437810,"byte_end":437813,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ let mut out = select_with_strategy(left, right, rrobin);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":437814,"byte_end":437874,"line_start":102,"line_end":102,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":437875,"byte_end":437878,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ for _ in 0..100 {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":437879,"byte_end":437900,"line_start":104,"line_end":104,"column_start":1,"column_end":22}},{"value":"/     // We should be alternating now.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":437901,"byte_end":437941,"line_start":105,"line_end":105,"column_start":1,"column_end":41}},{"value":"/     assert_eq!(1, out.select_next_some().await);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":437942,"byte_end":437994,"line_start":106,"line_end":106,"column_start":1,"column_end":53}},{"value":"/     assert_eq!(2, out.select_next_some().await);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":437995,"byte_end":438047,"line_start":107,"line_end":107,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":438048,"byte_end":438053,"line_start":108,"line_end":108,"column_start":1,"column_end":6}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":438054,"byte_end":438063,"line_start":109,"line_end":109,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":438064,"byte_end":438071,"line_start":110,"line_end":110,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6072},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":438716,"byte_end":438723,"line_start":133,"line_end":133,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<SelectWithStrategy<St1, St2, Clos, State>>::get_ref","value":"pub fn get_ref(&Self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":438608,"byte_end":438682,"line_start":131,"line_end":131,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":438687,"byte_end":438704,"line_start":132,"line_end":132,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":6073},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":439079,"byte_end":439086,"line_start":142,"line_end":142,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<SelectWithStrategy<St1, St2, Clos, State>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":438817,"byte_end":438885,"line_start":137,"line_end":137,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":438890,"byte_end":438921,"line_start":138,"line_end":138,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":438926,"byte_end":438929,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":438934,"byte_end":439007,"line_start":140,"line_end":140,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":439012,"byte_end":439067,"line_start":141,"line_end":141,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":6074},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":439461,"byte_end":439472,"line_start":151,"line_end":151,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<SelectWithStrategy<St1, St2, Clos, State>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":439192,"byte_end":439267,"line_start":146,"line_end":146,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":439272,"byte_end":439303,"line_start":147,"line_end":147,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":439308,"byte_end":439311,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":439316,"byte_end":439389,"line_start":149,"line_end":149,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":439394,"byte_end":439449,"line_start":150,"line_end":150,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":6075},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":439878,"byte_end":439888,"line_start":160,"line_end":160,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<SelectWithStrategy<St1, St2, Clos, State>>::into_inner","value":"pub fn into_inner(Self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":439642,"byte_end":439705,"line_start":156,"line_end":156,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":439710,"byte_end":439713,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":439718,"byte_end":439790,"line_start":158,"line_end":158,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":439795,"byte_end":439866,"line_start":159,"line_end":159,"column_start":5,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":6144},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":443566,"byte_end":443572,"line_start":50,"line_end":50,"column_start":8,"column_end":14},"name":"unfold","qualname":"::stream::unfold::unfold","value":"pub fn unfold<T, F, Fut, Item>(T, F) -> Unfold<T, F, Fut> where F: FnMut(T) ->\nFut, Fut: Future<Output = Option<(Item, T)>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Stream` from a seed and a closure returning a `Future`.","sig":null,"attributes":[{"value":"/ Creates a `Stream` from a seed and a closure returning a `Future`.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":442124,"byte_end":442194,"line_start":11,"line_end":11,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":442195,"byte_end":442198,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This function is the dual for the `Stream::fold()` adapter: while","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":442199,"byte_end":442268,"line_start":13,"line_end":13,"column_start":1,"column_end":70}},{"value":"/ `Stream::fold()` reduces a `Stream` to one single value, `unfold()` creates a","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":442269,"byte_end":442350,"line_start":14,"line_end":14,"column_start":1,"column_end":82}},{"value":"/ `Stream` from a seed value.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":442351,"byte_end":442382,"line_start":15,"line_end":15,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":442383,"byte_end":442386,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ `unfold()` will call the provided closure with the provided seed, then wait","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":442387,"byte_end":442466,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ for the returned `Future` to complete with `(a, b)`. It will then yield the","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":442467,"byte_end":442546,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ value `a`, and use `b` as the next internal state.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":442547,"byte_end":442601,"line_start":19,"line_end":19,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":442602,"byte_end":442605,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ If the closure returns `None` instead of `Some(Future)`, then the `unfold()`","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":442606,"byte_end":442686,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ will stop producing items and return `Poll::Ready(None)` in future","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":442687,"byte_end":442757,"line_start":22,"line_end":22,"column_start":1,"column_end":71}},{"value":"/ calls to `poll()`.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":442758,"byte_end":442780,"line_start":23,"line_end":23,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":442781,"byte_end":442784,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ This function can typically be used when wanting to go from the \"world of","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":442785,"byte_end":442862,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/ futures\" to the \"world of streams\": the provided closure can build a","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":442863,"byte_end":442935,"line_start":26,"line_end":26,"column_start":1,"column_end":73}},{"value":"/ `Future` using other library functions working on futures, and `unfold()`","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":442936,"byte_end":443013,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ will turn it into a `Stream` by repeating the operation.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":443014,"byte_end":443074,"line_start":28,"line_end":28,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":443075,"byte_end":443078,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":443079,"byte_end":443092,"line_start":30,"line_end":30,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":443093,"byte_end":443096,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":443097,"byte_end":443104,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":443105,"byte_end":443146,"line_start":33,"line_end":33,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":443147,"byte_end":443190,"line_start":34,"line_end":34,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":443191,"byte_end":443194,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::unfold(0, |state| async move {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":443195,"byte_end":443250,"line_start":36,"line_end":36,"column_start":1,"column_end":56}},{"value":"/     if state <= 2 {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":443251,"byte_end":443274,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/         let next_state = state + 1;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":443275,"byte_end":443314,"line_start":38,"line_end":38,"column_start":1,"column_end":40}},{"value":"/         let yielded = state  * 2;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":443315,"byte_end":443352,"line_start":39,"line_end":39,"column_start":1,"column_end":38}},{"value":"/         Some((yielded, next_state))","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":443353,"byte_end":443392,"line_start":40,"line_end":40,"column_start":1,"column_end":40}},{"value":"/     } else {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":443393,"byte_end":443409,"line_start":41,"line_end":41,"column_start":1,"column_end":17}},{"value":"/         None","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":443410,"byte_end":443426,"line_start":42,"line_end":42,"column_start":1,"column_end":17}},{"value":"/     }","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":443427,"byte_end":443436,"line_start":43,"line_end":43,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":443437,"byte_end":443444,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":443445,"byte_end":443448,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ let result = stream.collect::<Vec<i32>>().await;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":443449,"byte_end":443501,"line_start":46,"line_end":46,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(result, vec![0, 2, 4]);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":443502,"byte_end":443540,"line_start":47,"line_end":47,"column_start":1,"column_end":39}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":443541,"byte_end":443550,"line_start":48,"line_end":48,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":443551,"byte_end":443558,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":14800},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":443919,"byte_end":443925,"line_start":61,"line_end":61,"column_start":16,"column_end":22},"name":"Unfold","qualname":"::stream::unfold::Unfold","value":"Unfold {  }","parent":null,"children":[{"krate":0,"index":14804},{"krate":0,"index":14805}],"decl_id":null,"docs":" Stream for the [`unfold`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6244},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":448976,"byte_end":448990,"line_start":95,"line_end":95,"column_start":12,"column_end":26},"name":"FuturesOrdered","qualname":"::stream::futures_ordered::FuturesOrdered","value":"FuturesOrdered {  }","parent":null,"children":[{"krate":0,"index":6246},{"krate":0,"index":6247},{"krate":0,"index":6248},{"krate":0,"index":6249}],"decl_id":null,"docs":" An unbounded queue of futures.","sig":null,"attributes":[{"value":"/ An unbounded queue of futures.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":446910,"byte_end":446944,"line_start":59,"line_end":59,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":446945,"byte_end":446948,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ This \"combinator\" is similar to `FuturesUnordered`, but it imposes an order","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":446949,"byte_end":447028,"line_start":61,"line_end":61,"column_start":1,"column_end":80}},{"value":"/ on top of the set of futures. While futures in the set will race to","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":447029,"byte_end":447100,"line_start":62,"line_end":62,"column_start":1,"column_end":72}},{"value":"/ completion in parallel, results will only be returned in the order their","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":447101,"byte_end":447177,"line_start":63,"line_end":63,"column_start":1,"column_end":77}},{"value":"/ originating futures were added to the queue.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":447178,"byte_end":447226,"line_start":64,"line_end":64,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":447227,"byte_end":447230,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Futures are pushed into this queue and their realized values are yielded in","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":447231,"byte_end":447310,"line_start":66,"line_end":66,"column_start":1,"column_end":80}},{"value":"/ order. This structure is optimized to manage a large number of futures.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":447311,"byte_end":447386,"line_start":67,"line_end":67,"column_start":1,"column_end":76}},{"value":"/ Futures managed by `FuturesOrdered` will only be polled when they generate","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":447387,"byte_end":447465,"line_start":68,"line_end":68,"column_start":1,"column_end":79}},{"value":"/ notifications. This reduces the required amount of work needed to coordinate","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":447466,"byte_end":447546,"line_start":69,"line_end":69,"column_start":1,"column_end":81}},{"value":"/ large numbers of futures.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":447547,"byte_end":447576,"line_start":70,"line_end":70,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":447577,"byte_end":447580,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ When a `FuturesOrdered` is first created, it does not contain any futures.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":447581,"byte_end":447659,"line_start":72,"line_end":72,"column_start":1,"column_end":79}},{"value":"/ Calling `poll` in this state will result in `Poll::Ready(None))` to be","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":447660,"byte_end":447734,"line_start":73,"line_end":73,"column_start":1,"column_end":75}},{"value":"/ returned. Futures are submitted to the queue using `push`; however, the","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":447735,"byte_end":447810,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"/ future will **not** be polled at this point. `FuturesOrdered` will only","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":447811,"byte_end":447886,"line_start":75,"line_end":75,"column_start":1,"column_end":76}},{"value":"/ poll managed futures when `FuturesOrdered::poll` is called. As such, it","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":447887,"byte_end":447962,"line_start":76,"line_end":76,"column_start":1,"column_end":76}},{"value":"/ is important to call `poll` after pushing new futures.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":447963,"byte_end":448021,"line_start":77,"line_end":77,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":448022,"byte_end":448025,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ If `FuturesOrdered::poll` returns `Poll::Ready(None)` this means that","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":448026,"byte_end":448099,"line_start":79,"line_end":79,"column_start":1,"column_end":74}},{"value":"/ the queue is currently not managing any futures. A future may be submitted","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":448100,"byte_end":448178,"line_start":80,"line_end":80,"column_start":1,"column_end":79}},{"value":"/ to the queue at a later time. At that point, a call to","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":448179,"byte_end":448237,"line_start":81,"line_end":81,"column_start":1,"column_end":59}},{"value":"/ `FuturesOrdered::poll` will either return the future's resolved value","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":448238,"byte_end":448311,"line_start":82,"line_end":82,"column_start":1,"column_end":74}},{"value":"/ **or** `Poll::Pending` if the future has not yet completed. When","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":448312,"byte_end":448380,"line_start":83,"line_end":83,"column_start":1,"column_end":69}},{"value":"/ multiple futures are submitted to the queue, `FuturesOrdered::poll` will","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":448381,"byte_end":448457,"line_start":84,"line_end":84,"column_start":1,"column_end":77}},{"value":"/ return `Poll::Pending` until the first future completes, even if","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":448458,"byte_end":448526,"line_start":85,"line_end":85,"column_start":1,"column_end":69}},{"value":"/ some of the later futures have already completed.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":448527,"byte_end":448580,"line_start":86,"line_end":86,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":448581,"byte_end":448584,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ Note that you can create a ready-made `FuturesOrdered` via the","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":448585,"byte_end":448651,"line_start":88,"line_end":88,"column_start":1,"column_end":67}},{"value":"/ [`collect`](Iterator::collect) method, or you can start with an empty queue","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":448652,"byte_end":448731,"line_start":89,"line_end":89,"column_start":1,"column_end":80}},{"value":"/ with the `FuturesOrdered::new` constructor.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":448732,"byte_end":448779,"line_start":90,"line_end":90,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":448780,"byte_end":448783,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ This type is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":448784,"byte_end":448857,"line_start":92,"line_end":92,"column_start":1,"column_end":74}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":448858,"byte_end":448915,"line_start":93,"line_end":93,"column_start":1,"column_end":58}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":448916,"byte_end":448964,"line_start":94,"line_end":94,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":6254},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":449498,"byte_end":449501,"line_start":109,"line_end":109,"column_start":12,"column_end":15},"name":"new","qualname":"<FuturesOrdered<Fut>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty `FuturesOrdered`","sig":null,"attributes":[{"value":"/ Constructs a new, empty `FuturesOrdered`","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":449278,"byte_end":449322,"line_start":105,"line_end":105,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":449327,"byte_end":449330,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ The returned `FuturesOrdered` does not contain any futures and, in this","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":449335,"byte_end":449410,"line_start":107,"line_end":107,"column_start":5,"column_end":80}},{"value":"/ state, `FuturesOrdered::poll_next` will return `Poll::Ready(None)`.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":449415,"byte_end":449486,"line_start":108,"line_end":108,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":6255},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":449998,"byte_end":450001,"line_start":123,"line_end":123,"column_start":12,"column_end":15},"name":"len","qualname":"<FuturesOrdered<Fut>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of futures contained in the queue.","sig":null,"attributes":[{"value":"/ Returns the number of futures contained in the queue.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":449725,"byte_end":449782,"line_start":118,"line_end":118,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":449787,"byte_end":449790,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight futures, both","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":449795,"byte_end":449858,"line_start":120,"line_end":120,"column_start":5,"column_end":68}},{"value":"/ those currently processing and those that have completed but","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":449863,"byte_end":449927,"line_start":121,"line_end":121,"column_start":5,"column_end":69}},{"value":"/ which are waiting for earlier futures to complete.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":449932,"byte_end":449986,"line_start":122,"line_end":122,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":6256},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":450159,"byte_end":450167,"line_start":128,"line_end":128,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<FuturesOrdered<Fut>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the queue contains no futures\n","sig":null,"attributes":[{"value":"/ Returns `true` if the queue contains no futures","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":450096,"byte_end":450147,"line_start":127,"line_end":127,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":6257},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":450591,"byte_end":450595,"line_start":138,"line_end":138,"column_start":12,"column_end":16},"name":"push","qualname":"<FuturesOrdered<Fut>>::push","value":"pub fn push(&mut Self, Fut)","parent":null,"children":[],"decl_id":null,"docs":" Push a future into the queue.","sig":null,"attributes":[{"value":"/ Push a future into the queue.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":450272,"byte_end":450305,"line_start":132,"line_end":132,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":450310,"byte_end":450313,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ This function submits the given future to the internal set for managing.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":450318,"byte_end":450394,"line_start":134,"line_end":134,"column_start":5,"column_end":81}},{"value":"/ This function will not call `poll` on the submitted future. The caller","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":450399,"byte_end":450473,"line_start":135,"line_end":135,"column_start":5,"column_end":79}},{"value":"/ must ensure that `FuturesOrdered::poll` is called in order to receive","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":450478,"byte_end":450551,"line_start":136,"line_end":136,"column_start":5,"column_end":78}},{"value":"/ task notifications.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":450556,"byte_end":450579,"line_start":137,"line_end":137,"column_start":5,"column_end":28}}]},{"kind":"Mod","id":{"krate":0,"index":6284},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"futures_unordered","qualname":"::stream::futures_unordered","value":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","parent":null,"children":[{"krate":0,"index":6285},{"krate":0,"index":6288},{"krate":0,"index":6289},{"krate":0,"index":6292},{"krate":0,"index":6295},{"krate":0,"index":6298},{"krate":0,"index":6301},{"krate":0,"index":6302},{"krate":0,"index":6305},{"krate":0,"index":6306},{"krate":0,"index":6308},{"krate":0,"index":6311},{"krate":0,"index":6312},{"krate":0,"index":6314},{"krate":0,"index":6317},{"krate":0,"index":6320},{"krate":0,"index":6323},{"krate":0,"index":6324},{"krate":0,"index":6325},{"krate":0,"index":6327},{"krate":0,"index":6328},{"krate":0,"index":6330},{"krate":0,"index":6331},{"krate":0,"index":6333},{"krate":0,"index":6334},{"krate":0,"index":6336},{"krate":0,"index":6337},{"krate":0,"index":6339},{"krate":0,"index":6340},{"krate":0,"index":6343},{"krate":0,"index":6346},{"krate":0,"index":6349},{"krate":0,"index":6350},{"krate":0,"index":6353},{"krate":0,"index":6356},{"krate":0,"index":6357},{"krate":0,"index":6360},{"krate":0,"index":6363},{"krate":0,"index":6364},{"krate":0,"index":6367},{"krate":0,"index":6370},{"krate":0,"index":6373},{"krate":0,"index":6376},{"krate":0,"index":6379},{"krate":0,"index":6385},{"krate":0,"index":6452},{"krate":0,"index":6453},{"krate":0,"index":6456},{"krate":0,"index":6457},{"krate":0,"index":6459},{"krate":0,"index":6460},{"krate":0,"index":6462},{"krate":0,"index":6465},{"krate":0,"index":6468},{"krate":0,"index":6532},{"krate":0,"index":6535},{"krate":0,"index":6594},{"krate":0,"index":6595},{"krate":0,"index":6598},{"krate":0,"index":6601},{"krate":0,"index":6602},{"krate":0,"index":6607},{"krate":0,"index":6609},{"krate":0,"index":6611},{"krate":0,"index":6613},{"krate":0,"index":6615},{"krate":0,"index":6617},{"krate":0,"index":6620},{"krate":0,"index":6635},{"krate":0,"index":6648},{"krate":0,"index":6651},{"krate":0,"index":6655},{"krate":0,"index":6658},{"krate":0,"index":6664},{"krate":0,"index":6670},{"krate":0,"index":6675},{"krate":0,"index":6680},{"krate":0,"index":6683}],"decl_id":null,"docs":" An unbounded set of futures.","sig":null,"attributes":[{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":173675,"byte_end":173709,"line_start":110,"line_end":110,"column_start":1,"column_end":35}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":173710,"byte_end":173735,"line_start":111,"line_end":111,"column_start":1,"column_end":26}},{"value":"/ An unbounded set of futures.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":452960,"byte_end":452992,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":452993,"byte_end":452996,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":452997,"byte_end":453072,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":453073,"byte_end":453130,"line_start":4,"line_end":4,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":14893},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":480977,"byte_end":480987,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"IterPinMut","qualname":"::stream::futures_unordered::iter::IterPinMut","value":"IterPinMut {  }","parent":null,"children":[{"krate":0,"index":14896},{"krate":0,"index":14897},{"krate":0,"index":14898}],"decl_id":null,"docs":" Mutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over all futures in the unordered set.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":480889,"byte_end":480948,"line_start":7,"line_end":7,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":14903},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":481224,"byte_end":481231,"line_start":17,"line_end":17,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::stream::futures_unordered::iter::IterMut","value":"","parent":null,"children":[],"decl_id":null,"docs":" Mutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over all futures in the unordered set.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":481136,"byte_end":481195,"line_start":15,"line_end":15,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":14912},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":481372,"byte_end":481382,"line_start":21,"line_end":21,"column_start":12,"column_end":22},"name":"IterPinRef","qualname":"::stream::futures_unordered::iter::IterPinRef","value":"IterPinRef {  }","parent":null,"children":[{"krate":0,"index":14915},{"krate":0,"index":14916},{"krate":0,"index":14917},{"krate":0,"index":14918}],"decl_id":null,"docs":" Immutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Immutable iterator over all futures in the unordered set.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":481282,"byte_end":481343,"line_start":19,"line_end":19,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":14923},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":481670,"byte_end":481674,"line_start":30,"line_end":30,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::futures_unordered::iter::Iter","value":"","parent":null,"children":[],"decl_id":null,"docs":" Immutable iterator over all the futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Immutable iterator over all the futures in the unordered set.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":481576,"byte_end":481641,"line_start":28,"line_end":28,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":14932},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":481811,"byte_end":481819,"line_start":34,"line_end":34,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::stream::futures_unordered::iter::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":14934},{"krate":0,"index":14935}],"decl_id":null,"docs":" Owned iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Owned iterator over all futures in the unordered set.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":481725,"byte_end":481782,"line_start":32,"line_end":32,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":6602},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":456400,"byte_end":456416,"line_start":82,"line_end":82,"column_start":12,"column_end":28},"name":"FuturesUnordered","qualname":"::stream::futures_unordered::FuturesUnordered","value":"FuturesUnordered {  }","parent":null,"children":[{"krate":0,"index":6604},{"krate":0,"index":6605},{"krate":0,"index":6606}],"decl_id":null,"docs":" A set of futures which may complete in any order.","sig":null,"attributes":[{"value":"/ A set of futures which may complete in any order.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":455305,"byte_end":455358,"line_start":61,"line_end":61,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":455359,"byte_end":455362,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ This structure is optimized to manage a large number of futures.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":455363,"byte_end":455431,"line_start":63,"line_end":63,"column_start":1,"column_end":69}},{"value":"/ Futures managed by [`FuturesUnordered`] will only be polled when they","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":455432,"byte_end":455505,"line_start":64,"line_end":64,"column_start":1,"column_end":74}},{"value":"/ generate wake-up notifications. This reduces the required amount of work","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":455506,"byte_end":455582,"line_start":65,"line_end":65,"column_start":1,"column_end":77}},{"value":"/ needed to poll large numbers of futures.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":455583,"byte_end":455627,"line_start":66,"line_end":66,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":455628,"byte_end":455631,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ [`FuturesUnordered`] can be filled by [`collect`](Iterator::collect)ing an","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":455632,"byte_end":455710,"line_start":68,"line_end":68,"column_start":1,"column_end":79}},{"value":"/ iterator of futures into a [`FuturesUnordered`], or by","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":455711,"byte_end":455769,"line_start":69,"line_end":69,"column_start":1,"column_end":59}},{"value":"/ [`push`](FuturesUnordered::push)ing futures onto an existing","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":455770,"byte_end":455834,"line_start":70,"line_end":70,"column_start":1,"column_end":65}},{"value":"/ [`FuturesUnordered`]. When new futures are added,","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":455835,"byte_end":455888,"line_start":71,"line_end":71,"column_start":1,"column_end":54}},{"value":"/ [`poll_next`](Stream::poll_next) must be called in order to begin receiving","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":455889,"byte_end":455968,"line_start":72,"line_end":72,"column_start":1,"column_end":80}},{"value":"/ wake-ups for new futures.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":455969,"byte_end":455998,"line_start":73,"line_end":73,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":455999,"byte_end":456002,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ Note that you can create a ready-made [`FuturesUnordered`] via the","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":456003,"byte_end":456073,"line_start":75,"line_end":75,"column_start":1,"column_end":71}},{"value":"/ [`collect`](Iterator::collect) method, or you can start with an empty set","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":456074,"byte_end":456151,"line_start":76,"line_end":76,"column_start":1,"column_end":78}},{"value":"/ with the [`FuturesUnordered::new`] constructor.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":456152,"byte_end":456203,"line_start":77,"line_end":77,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":456204,"byte_end":456207,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ This type is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":456208,"byte_end":456281,"line_start":79,"line_end":79,"column_start":1,"column_end":74}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":456282,"byte_end":456339,"line_start":80,"line_end":80,"column_start":1,"column_end":58}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":456340,"byte_end":456388,"line_start":81,"line_end":81,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":6622},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":459033,"byte_end":459036,"line_start":143,"line_end":143,"column_start":12,"column_end":15},"name":"new","qualname":"<FuturesUnordered<Fut>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty [`FuturesUnordered`].","sig":null,"attributes":[{"value":"/ Constructs a new, empty [`FuturesUnordered`].","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":458762,"byte_end":458811,"line_start":138,"line_end":138,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":458816,"byte_end":458819,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ The returned [`FuturesUnordered`] does not contain any futures.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":458824,"byte_end":458891,"line_start":140,"line_end":140,"column_start":5,"column_end":72}},{"value":"/ In this state, [`FuturesUnordered::poll_next`](Stream::poll_next) will","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":458896,"byte_end":458970,"line_start":141,"line_end":141,"column_start":5,"column_end":79}},{"value":"/ return [`Poll::Ready(None)`](Poll::Ready).","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":458975,"byte_end":459021,"line_start":142,"line_end":142,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":6623},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":460031,"byte_end":460034,"line_start":171,"line_end":171,"column_start":12,"column_end":15},"name":"len","qualname":"<FuturesUnordered<Fut>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of futures contained in the set.","sig":null,"attributes":[{"value":"/ Returns the number of futures contained in the set.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":459893,"byte_end":459948,"line_start":168,"line_end":168,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":459953,"byte_end":459956,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight futures.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":459961,"byte_end":460019,"line_start":170,"line_end":170,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":6624},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":460198,"byte_end":460206,"line_start":177,"line_end":177,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<FuturesUnordered<Fut>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains no futures.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains no futures.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":460136,"byte_end":460186,"line_start":176,"line_end":176,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":6625},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":460789,"byte_end":460793,"line_start":189,"line_end":189,"column_start":12,"column_end":16},"name":"push","qualname":"<FuturesUnordered<Fut>>::push","value":"pub fn push(&Self, Fut)","parent":null,"children":[],"decl_id":null,"docs":" Push a future into the set.","sig":null,"attributes":[{"value":"/ Push a future into the set.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":460419,"byte_end":460450,"line_start":183,"line_end":183,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":460455,"byte_end":460458,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ This method adds the given future to the set. This method will not","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":460463,"byte_end":460533,"line_start":185,"line_end":185,"column_start":5,"column_end":75}},{"value":"/ call [`poll`](core::future::Future::poll) on the submitted future. The caller must","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":460538,"byte_end":460624,"line_start":186,"line_end":186,"column_start":5,"column_end":91}},{"value":"/ ensure that [`FuturesUnordered::poll_next`](Stream::poll_next) is called","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":460629,"byte_end":460705,"line_start":187,"line_end":187,"column_start":5,"column_end":81}},{"value":"/ in order to receive wake-up notifications for the given future.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":460710,"byte_end":460777,"line_start":188,"line_end":188,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":6626},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":462068,"byte_end":462072,"line_start":217,"line_end":217,"column_start":12,"column_end":16},"name":"iter","qualname":"<FuturesUnordered<Fut>>::iter","value":"pub fn iter(&Self) -> Iter<, Fut> where Fut: Unpin","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows inspecting each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows inspecting each future in the set.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":461986,"byte_end":462056,"line_start":216,"line_end":216,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":6627},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":462270,"byte_end":462282,"line_start":225,"line_end":225,"column_start":12,"column_end":24},"name":"iter_pin_ref","qualname":"<FuturesUnordered<Fut>>::iter_pin_ref","value":"pub fn iter_pin_ref(Pin<&Self>) -> IterPinRef<, Fut>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows inspecting each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows inspecting each future in the set.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":462188,"byte_end":462258,"line_start":224,"line_end":224,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":6628},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":462611,"byte_end":462619,"line_start":233,"line_end":233,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<FuturesUnordered<Fut>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut<, Fut> where Fut: Unpin","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows modifying each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows modifying each future in the set.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":462530,"byte_end":462599,"line_start":232,"line_end":232,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":6629},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":462826,"byte_end":462838,"line_start":241,"line_end":241,"column_start":12,"column_end":24},"name":"iter_pin_mut","qualname":"<FuturesUnordered<Fut>>::iter_pin_mut","value":"pub fn iter_pin_mut(Pin<&mut Self>) -> IterPinMut<, Fut>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows modifying each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows modifying each future in the set.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":462745,"byte_end":462814,"line_start":240,"line_end":240,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":6653},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":477213,"byte_end":477218,"line_start":573,"line_end":573,"column_start":12,"column_end":17},"name":"clear","qualname":"<FuturesUnordered<Fut>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the set, removing all futures.\n","sig":null,"attributes":[{"value":"/ Clears the set, removing all futures.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":477160,"byte_end":477201,"line_start":572,"line_end":572,"column_start":5,"column_end":46}}]},{"kind":"Mod","id":{"krate":0,"index":6690},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"select_all","qualname":"::stream::select_all","value":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","parent":null,"children":[{"krate":0,"index":6691},{"krate":0,"index":6692},{"krate":0,"index":6695},{"krate":0,"index":6696},{"krate":0,"index":6698},{"krate":0,"index":6701},{"krate":0,"index":6704},{"krate":0,"index":6707},{"krate":0,"index":6708},{"krate":0,"index":6711},{"krate":0,"index":6714},{"krate":0,"index":6715},{"krate":0,"index":6718},{"krate":0,"index":6721},{"krate":0,"index":6724},{"krate":0,"index":6727},{"krate":0,"index":6728},{"krate":0,"index":6731},{"krate":0,"index":6734},{"krate":0,"index":6737},{"krate":0,"index":14939},{"krate":0,"index":14942},{"krate":0,"index":6740},{"krate":0,"index":6743},{"krate":0,"index":6752},{"krate":0,"index":6755},{"krate":0,"index":6759},{"krate":0,"index":6762},{"krate":0,"index":6764},{"krate":0,"index":6768},{"krate":0,"index":6772},{"krate":0,"index":6777},{"krate":0,"index":6783},{"krate":0,"index":14972},{"krate":0,"index":14977},{"krate":0,"index":14981},{"krate":0,"index":14986},{"krate":0,"index":14990},{"krate":0,"index":14994},{"krate":0,"index":6789},{"krate":0,"index":6795},{"krate":0,"index":6797},{"krate":0,"index":6803},{"krate":0,"index":6805},{"krate":0,"index":6810}],"decl_id":null,"docs":" An unbounded set of streams\n","sig":null,"attributes":[{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":173891,"byte_end":173925,"line_start":118,"line_end":118,"column_start":1,"column_end":35}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":173926,"byte_end":173951,"line_start":119,"line_end":119,"column_start":1,"column_end":26}},{"value":"/ An unbounded set of streams","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":494164,"byte_end":494195,"line_start":1,"line_end":1,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":14939},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":495235,"byte_end":495244,"line_start":30,"line_end":30,"column_start":16,"column_end":25},"name":"SelectAll","qualname":"::stream::select_all::SelectAll","value":"SelectAll {  }","parent":null,"children":[{"krate":0,"index":14941}],"decl_id":null,"docs":" An unbounded set of streams","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":6745},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":495726,"byte_end":495729,"line_start":47,"line_end":47,"column_start":12,"column_end":15},"name":"new","qualname":"<SelectAll<St>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty `SelectAll`","sig":null,"attributes":[{"value":"/ Constructs a new, empty `SelectAll`","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":495526,"byte_end":495565,"line_start":43,"line_end":43,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":495570,"byte_end":495573,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ The returned `SelectAll` does not contain any streams and, in this","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":495578,"byte_end":495648,"line_start":45,"line_end":45,"column_start":5,"column_end":75}},{"value":"/ state, `SelectAll::poll` will return `Poll::Ready(None)`.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":495653,"byte_end":495714,"line_start":46,"line_end":46,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":6746},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":495939,"byte_end":495942,"line_start":54,"line_end":54,"column_start":12,"column_end":15},"name":"len","qualname":"<SelectAll<St>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of streams contained in the set.","sig":null,"attributes":[{"value":"/ Returns the number of streams contained in the set.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":495801,"byte_end":495856,"line_start":51,"line_end":51,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":495861,"byte_end":495864,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight streams.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":495869,"byte_end":495927,"line_start":53,"line_end":53,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":6747},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":496058,"byte_end":496066,"line_start":59,"line_end":59,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<SelectAll<St>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains no streams\n","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains no streams","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":495997,"byte_end":496046,"line_start":58,"line_end":58,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":6748},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":496428,"byte_end":496432,"line_start":69,"line_end":69,"column_start":12,"column_end":16},"name":"push","qualname":"<SelectAll<St>>::push","value":"pub fn push(&mut Self, St)","parent":null,"children":[],"decl_id":null,"docs":" Push a stream into the set.","sig":null,"attributes":[{"value":"/ Push a stream into the set.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":496125,"byte_end":496156,"line_start":63,"line_end":63,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":496161,"byte_end":496164,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ This function submits the given stream to the set for managing. This","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":496169,"byte_end":496241,"line_start":65,"line_end":65,"column_start":5,"column_end":77}},{"value":"/ function will not call `poll` on the submitted stream. The caller must","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":496246,"byte_end":496320,"line_start":66,"line_end":66,"column_start":5,"column_end":79}},{"value":"/ ensure that `SelectAll::poll` is called in order to receive task","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":496325,"byte_end":496393,"line_start":67,"line_end":67,"column_start":5,"column_end":73}},{"value":"/ notifications.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":496398,"byte_end":496416,"line_start":68,"line_end":68,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":6749},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":496598,"byte_end":496602,"line_start":74,"line_end":74,"column_start":12,"column_end":16},"name":"iter","qualname":"<SelectAll<St>>::iter","value":"pub fn iter(&Self) -> Iter<, St>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows inspecting each stream in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows inspecting each stream in the set.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":496516,"byte_end":496586,"line_start":73,"line_end":73,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":6750},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":496752,"byte_end":496760,"line_start":79,"line_end":79,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<SelectAll<St>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut<, St>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows modifying each stream in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows modifying each stream in the set.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":496671,"byte_end":496740,"line_start":78,"line_end":78,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":6751},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":496896,"byte_end":496901,"line_start":84,"line_end":84,"column_start":12,"column_end":17},"name":"clear","qualname":"<SelectAll<St>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the set, removing all streams.\n","sig":null,"attributes":[{"value":"/ Clears the set, removing all streams.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":496843,"byte_end":496884,"line_start":83,"line_end":83,"column_start":5,"column_end":46}}]},{"kind":"Function","id":{"krate":0,"index":6762},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":498608,"byte_end":498618,"line_start":135,"line_end":135,"column_start":8,"column_end":18},"name":"select_all","qualname":"::stream::select_all::select_all","value":"pub fn select_all<I>(I) -> SelectAll<I::Item> where I: IntoIterator,\nI::Item: Stream + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Convert a list of streams into a `Stream` of results from the streams.","sig":null,"attributes":[{"value":"/ Convert a list of streams into a `Stream` of results from the streams.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":497987,"byte_end":498061,"line_start":123,"line_end":123,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":498062,"byte_end":498065,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ This essentially takes a list of streams (e.g. a vector, an iterator, etc.)","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":498066,"byte_end":498145,"line_start":125,"line_end":125,"column_start":1,"column_end":80}},{"value":"/ and bundles them together into a single stream.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":498146,"byte_end":498197,"line_start":126,"line_end":126,"column_start":1,"column_end":52}},{"value":"/ The stream will yield items as they become available on the underlying","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":498198,"byte_end":498272,"line_start":127,"line_end":127,"column_start":1,"column_end":75}},{"value":"/ streams internally, in the order they become available.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":498273,"byte_end":498332,"line_start":128,"line_end":128,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":498333,"byte_end":498336,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ Note that the returned set can also be used to dynamically push more","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":498337,"byte_end":498409,"line_start":130,"line_end":130,"column_start":1,"column_end":73}},{"value":"/ streams into the set as they become available.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":498410,"byte_end":498460,"line_start":131,"line_end":131,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":498461,"byte_end":498464,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":498465,"byte_end":498542,"line_start":133,"line_end":133,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":498543,"byte_end":498600,"line_start":134,"line_end":134,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":14972},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":499925,"byte_end":499929,"line_start":192,"line_end":192,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::select_all::Iter","value":"","parent":null,"children":[],"decl_id":null,"docs":" Immutable iterator over all streams in the unordered set.\n","sig":null,"attributes":[{"value":"/ Immutable iterator over all streams in the unordered set.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":499835,"byte_end":499896,"line_start":190,"line_end":190,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":14981},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":500082,"byte_end":500089,"line_start":196,"line_end":196,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::stream::select_all::IterMut","value":"","parent":null,"children":[],"decl_id":null,"docs":" Mutable iterator over all streams in the unordered set.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over all streams in the unordered set.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":499994,"byte_end":500053,"line_start":194,"line_end":194,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":14990},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":500243,"byte_end":500251,"line_start":200,"line_end":200,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::stream::select_all::IntoIter","value":"","parent":null,"children":[],"decl_id":null,"docs":" Owned iterator over all streams in the unordered set.\n","sig":null,"attributes":[{"value":"/ Owned iterator over all streams in the unordered set.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":500157,"byte_end":500214,"line_start":198,"line_end":198,"column_start":1,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":6833},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/abortable.rs","byte_start":502266,"byte_end":502275,"line_start":12,"line_end":12,"column_start":8,"column_end":17},"name":"abortable","qualname":"::stream::abortable::abortable","value":"pub fn abortable<St>(St) -> (Abortable<St>, AbortHandle) where St: Stream","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Abortable` stream and an `AbortHandle` which can be used to stop it.","sig":null,"attributes":[{"value":"/ Creates a new `Abortable` stream and an `AbortHandle` which can be used to stop it.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/abortable.rs","byte_start":501896,"byte_end":501983,"line_start":5,"line_end":5,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/abortable.rs","byte_start":501984,"byte_end":501987,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This function is a convenient (but less flexible) alternative to calling","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/abortable.rs","byte_start":501988,"byte_end":502064,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ `AbortHandle::new` and `Abortable::new` manually.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/abortable.rs","byte_start":502065,"byte_end":502118,"line_start":8,"line_end":8,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/abortable.rs","byte_start":502119,"byte_end":502122,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/abortable.rs","byte_start":502123,"byte_end":502200,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/abortable.rs","byte_start":502201,"byte_end":502258,"line_start":11,"line_end":11,"column_start":1,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":6867},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sink","qualname":"::sink","value":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","parent":null,"children":[{"krate":0,"index":6868},{"krate":0,"index":6869},{"krate":0,"index":6872},{"krate":0,"index":6875},{"krate":0,"index":6878},{"krate":0,"index":6881},{"krate":0,"index":6882},{"krate":0,"index":6885},{"krate":0,"index":6888},{"krate":0,"index":6889},{"krate":0,"index":6892},{"krate":0,"index":6895},{"krate":0,"index":6898},{"krate":0,"index":6931},{"krate":0,"index":6934},{"krate":0,"index":6968},{"krate":0,"index":6969},{"krate":0,"index":6972},{"krate":0,"index":6975},{"krate":0,"index":7023},{"krate":0,"index":7026},{"krate":0,"index":7061},{"krate":0,"index":7064},{"krate":0,"index":7097},{"krate":0,"index":7100},{"krate":0,"index":7141},{"krate":0,"index":7144},{"krate":0,"index":7195},{"krate":0,"index":7198},{"krate":0,"index":7234},{"krate":0,"index":7237},{"krate":0,"index":7306},{"krate":0,"index":7309},{"krate":0,"index":7356},{"krate":0,"index":7357},{"krate":0,"index":7360},{"krate":0,"index":7363},{"krate":0,"index":7444},{"krate":0,"index":7447},{"krate":0,"index":7520},{"krate":0,"index":7523},{"krate":0,"index":7576},{"krate":0,"index":7579},{"krate":0,"index":7582},{"krate":0,"index":7616}],"decl_id":null,"docs":" Asynchronous sinks.","sig":null,"attributes":[{"value":"cfg(feature = \"sink\")","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":10823,"byte_end":10847,"line_start":302,"line_end":302,"column_start":1,"column_end":25}},{"value":"/ Asynchronous sinks.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":502503,"byte_end":502526,"line_start":1,"line_end":1,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":502527,"byte_end":502530,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":502531,"byte_end":502556,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":502557,"byte_end":502560,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - The [`Sink`] trait, which allows you to asynchronously write data.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":502561,"byte_end":502633,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"/ - The [`SinkExt`] trait, which provides adapters for chaining and composing","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":502634,"byte_end":502713,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"/   sinks.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":502714,"byte_end":502726,"line_start":7,"line_end":7,"column_start":1,"column_end":13}}]},{"kind":"Struct","id":{"krate":0,"index":14997},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/close.rs","byte_start":514007,"byte_end":514012,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Close","qualname":"::sink::close::Close","value":"Close {  }","parent":null,"children":[{"krate":0,"index":15001},{"krate":0,"index":15002}],"decl_id":null,"docs":" Future for the [`close`](super::SinkExt::close) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`close`](super::SinkExt::close) method.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/close.rs","byte_start":513851,"byte_end":513910,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/close.rs","byte_start":513928,"byte_end":513995,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":15008},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/drain.rs","byte_start":515003,"byte_end":515008,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"Drain","qualname":"::sink::drain::Drain","value":"Drain {  }","parent":null,"children":[{"krate":0,"index":15010}],"decl_id":null,"docs":" Sink for the [`drain`] function.\n","sig":null,"attributes":[{"value":"/ Sink for the [`drain`] function.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/drain.rs","byte_start":514891,"byte_end":514927,"line_start":8,"line_end":8,"column_start":1,"column_end":37}},{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/drain.rs","byte_start":514945,"byte_end":514991,"line_start":10,"line_end":10,"column_start":1,"column_end":47}}]},{"kind":"Function","id":{"krate":0,"index":6957},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/drain.rs","byte_start":515407,"byte_end":515412,"line_start":29,"line_end":29,"column_start":8,"column_end":13},"name":"drain","qualname":"::sink::drain::drain","value":"pub fn drain<T>() -> Drain<T>","parent":null,"children":[],"decl_id":null,"docs":" Create a sink that will just discard all items given to it.","sig":null,"attributes":[{"value":"/ Create a sink that will just discard all items given to it.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/drain.rs","byte_start":515045,"byte_end":515108,"line_start":15,"line_end":15,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/drain.rs","byte_start":515109,"byte_end":515112,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Similar to [`io::Sink`](::std::io::Sink).","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/drain.rs","byte_start":515113,"byte_end":515158,"line_start":17,"line_end":17,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/drain.rs","byte_start":515159,"byte_end":515162,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/drain.rs","byte_start":515163,"byte_end":515177,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/drain.rs","byte_start":515178,"byte_end":515181,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/drain.rs","byte_start":515182,"byte_end":515189,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/drain.rs","byte_start":515190,"byte_end":515231,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ use futures::sink::{self, SinkExt};","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/drain.rs","byte_start":515232,"byte_end":515271,"line_start":23,"line_end":23,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/drain.rs","byte_start":515272,"byte_end":515275,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let mut drain = sink::drain();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/drain.rs","byte_start":515276,"byte_end":515310,"line_start":25,"line_end":25,"column_start":1,"column_end":35}},{"value":"/ drain.send(5).await?;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/drain.rs","byte_start":515311,"byte_end":515336,"line_start":26,"line_end":26,"column_start":1,"column_end":26}},{"value":"/ # Ok::<(), futures::never::Never>(()) }).unwrap();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/drain.rs","byte_start":515337,"byte_end":515391,"line_start":27,"line_end":27,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/drain.rs","byte_start":515392,"byte_end":515399,"line_start":28,"line_end":28,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":15014},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/fanout.rs","byte_start":516602,"byte_end":516608,"line_start":13,"line_end":13,"column_start":16,"column_end":22},"name":"Fanout","qualname":"::sink::fanout::Fanout","value":"Fanout {  }","parent":null,"children":[{"krate":0,"index":15017},{"krate":0,"index":15018}],"decl_id":null,"docs":" Sink that clones incoming items and forwards them to two sinks at the same time.","sig":null,"attributes":[{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7006},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/fanout.rs","byte_start":516888,"byte_end":516895,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Fanout<Si1, Si2>>::get_ref","value":"pub fn get_ref(&Self) -> (&Si1, &Si2)","parent":null,"children":[],"decl_id":null,"docs":" Get a shared reference to the inner sinks.\n","sig":null,"attributes":[{"value":"/ Get a shared reference to the inner sinks.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/fanout.rs","byte_start":516830,"byte_end":516876,"line_start":26,"line_end":26,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":7007},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/fanout.rs","byte_start":517026,"byte_end":517033,"line_start":32,"line_end":32,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Fanout<Si1, Si2>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut Si1, &mut Si2)","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the inner sinks.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the inner sinks.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/fanout.rs","byte_start":516967,"byte_end":517014,"line_start":31,"line_end":31,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":7008},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/fanout.rs","byte_start":517191,"byte_end":517202,"line_start":37,"line_end":37,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Fanout<Si1, Si2>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut Si1>, Pin<&mut Si2>)","parent":null,"children":[],"decl_id":null,"docs":" Get a pinned mutable reference to the inner sinks.\n","sig":null,"attributes":[{"value":"/ Get a pinned mutable reference to the inner sinks.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/fanout.rs","byte_start":517125,"byte_end":517179,"line_start":36,"line_end":36,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":7009},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/fanout.rs","byte_start":517574,"byte_end":517584,"line_start":46,"line_end":46,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Fanout<Si1, Si2>>::into_inner","value":"pub fn into_inner(Self) -> (Si1, Si2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying sinks.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying sinks.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/fanout.rs","byte_start":517340,"byte_end":517401,"line_start":42,"line_end":42,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/fanout.rs","byte_start":517406,"byte_end":517409,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator,","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/fanout.rs","byte_start":517414,"byte_end":517483,"line_start":44,"line_end":44,"column_start":5,"column_end":74}},{"value":"/ so care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/fanout.rs","byte_start":517488,"byte_end":517562,"line_start":45,"line_end":45,"column_start":5,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":15059},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/feed.rs","byte_start":519830,"byte_end":519834,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Feed","qualname":"::sink::feed::Feed","value":"Feed {  }","parent":null,"children":[{"krate":0,"index":15063},{"krate":0,"index":15064}],"decl_id":null,"docs":" Future for the [`feed`](super::SinkExt::feed) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`feed`](super::SinkExt::feed) method.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/feed.rs","byte_start":519676,"byte_end":519733,"line_start":7,"line_end":7,"column_start":1,"column_end":58}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/feed.rs","byte_start":519751,"byte_end":519818,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":15070},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/flush.rs","byte_start":521165,"byte_end":521170,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Flush","qualname":"::sink::flush::Flush","value":"Flush {  }","parent":null,"children":[{"krate":0,"index":15074},{"krate":0,"index":15075}],"decl_id":null,"docs":" Future for the [`flush`](super::SinkExt::flush) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`flush`](super::SinkExt::flush) method.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/flush.rs","byte_start":521009,"byte_end":521068,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/flush.rs","byte_start":521086,"byte_end":521153,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":15081},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/err_into.rs","byte_start":522407,"byte_end":522418,"line_start":10,"line_end":10,"column_start":16,"column_end":27},"name":"SinkErrInto","qualname":"::sink::err_into::SinkErrInto","value":"SinkErrInto {  }","parent":null,"children":[{"krate":0,"index":15085}],"decl_id":null,"docs":" Sink for the [`sink_err_into`](super::SinkExt::sink_err_into) method.\n","sig":null,"attributes":[{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":15145},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/map_err.rs","byte_start":523718,"byte_end":523728,"line_start":11,"line_end":11,"column_start":16,"column_end":26},"name":"SinkMapErr","qualname":"::sink::map_err::SinkMapErr","value":"SinkMapErr {  }","parent":null,"children":[{"krate":0,"index":15148},{"krate":0,"index":15149}],"decl_id":null,"docs":" Sink for the [`sink_map_err`](super::SinkExt::sink_map_err) method.\n","sig":null,"attributes":[{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":15204},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/send.rs","byte_start":525625,"byte_end":525629,"line_start":11,"line_end":11,"column_start":12,"column_end":16},"name":"Send","qualname":"::sink::send::Send","value":"Send {  }","parent":null,"children":[{"krate":0,"index":15208}],"decl_id":null,"docs":" Future for the [`send`](super::SinkExt::send) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`send`](super::SinkExt::send) method.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/send.rs","byte_start":525471,"byte_end":525528,"line_start":8,"line_end":8,"column_start":1,"column_end":58}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/send.rs","byte_start":525546,"byte_end":525613,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":7277},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/send_all.rs","byte_start":527058,"byte_end":527065,"line_start":13,"line_end":13,"column_start":12,"column_end":19},"name":"SendAll","qualname":"::sink::send_all::SendAll","value":"SendAll {  }","parent":null,"children":[{"krate":0,"index":7281},{"krate":0,"index":7282},{"krate":0,"index":7283}],"decl_id":null,"docs":" Future for the [`send_all`](super::SinkExt::send_all) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`send_all`](super::SinkExt::send_all) method.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/send_all.rs","byte_start":526822,"byte_end":526887,"line_start":10,"line_end":10,"column_start":1,"column_end":66}},{"value":"allow(explicit_outlives_requirements)","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/send_all.rs","byte_start":526888,"byte_end":526928,"line_start":11,"line_end":11,"column_start":1,"column_end":41}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/send_all.rs","byte_start":526979,"byte_end":527046,"line_start":12,"line_end":12,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":15214},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/unfold.rs","byte_start":530016,"byte_end":530022,"line_start":13,"line_end":13,"column_start":16,"column_end":22},"name":"Unfold","qualname":"::sink::unfold::Unfold","value":"Unfold {  }","parent":null,"children":[{"krate":0,"index":15218},{"krate":0,"index":15219}],"decl_id":null,"docs":" Sink for the [`unfold`] function.\n","sig":null,"attributes":[{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":7339},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/unfold.rs","byte_start":530622,"byte_end":530628,"line_start":39,"line_end":39,"column_start":8,"column_end":14},"name":"unfold","qualname":"::sink::unfold::unfold","value":"pub fn unfold<T, F, R, Item, E>(T, F) -> Unfold<T, F, R> where\nF: FnMut(T, Item) -> R, R: Future<Output = Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a sink from a function which processes one item at a time.","sig":null,"attributes":[{"value":"/ Create a sink from a function which processes one item at a time.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/unfold.rs","byte_start":530113,"byte_end":530182,"line_start":20,"line_end":20,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/unfold.rs","byte_start":530183,"byte_end":530186,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/unfold.rs","byte_start":530187,"byte_end":530201,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/unfold.rs","byte_start":530202,"byte_end":530205,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/unfold.rs","byte_start":530206,"byte_end":530213,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/unfold.rs","byte_start":530214,"byte_end":530255,"line_start":25,"line_end":25,"column_start":1,"column_end":42}},{"value":"/ use futures::sink::{self, SinkExt};","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/unfold.rs","byte_start":530256,"byte_end":530295,"line_start":26,"line_end":26,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/unfold.rs","byte_start":530296,"byte_end":530299,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ let unfold = sink::unfold(0, |mut sum, i: i32| {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/unfold.rs","byte_start":530300,"byte_end":530352,"line_start":28,"line_end":28,"column_start":1,"column_end":53}},{"value":"/     async move {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/unfold.rs","byte_start":530353,"byte_end":530373,"line_start":29,"line_end":29,"column_start":1,"column_end":21}},{"value":"/         sum += i;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/unfold.rs","byte_start":530374,"byte_end":530395,"line_start":30,"line_end":30,"column_start":1,"column_end":22}},{"value":"/         eprintln!(\"{}\", i);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/unfold.rs","byte_start":530396,"byte_end":530427,"line_start":31,"line_end":31,"column_start":1,"column_end":32}},{"value":"/         Ok::<_, futures::never::Never>(sum)","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/unfold.rs","byte_start":530428,"byte_end":530475,"line_start":32,"line_end":32,"column_start":1,"column_end":48}},{"value":"/     }","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/unfold.rs","byte_start":530476,"byte_end":530485,"line_start":33,"line_end":33,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/unfold.rs","byte_start":530486,"byte_end":530493,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ futures::pin_mut!(unfold);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/unfold.rs","byte_start":530494,"byte_end":530524,"line_start":35,"line_end":35,"column_start":1,"column_end":31}},{"value":"/ unfold.send(5).await?;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/unfold.rs","byte_start":530525,"byte_end":530551,"line_start":36,"line_end":36,"column_start":1,"column_end":27}},{"value":"/ # Ok::<(), futures::never::Never>(()) }).unwrap();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/unfold.rs","byte_start":530552,"byte_end":530606,"line_start":37,"line_end":37,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/unfold.rs","byte_start":530607,"byte_end":530614,"line_start":38,"line_end":38,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":15272},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/with.rs","byte_start":532606,"byte_end":532610,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"With","qualname":"::sink::with::With","value":"With {  }","parent":null,"children":[{"krate":0,"index":15278},{"krate":0,"index":15279},{"krate":0,"index":15280},{"krate":0,"index":15281}],"decl_id":null,"docs":" Sink for the [`with`](super::SinkExt::with) method.\n","sig":null,"attributes":[{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":15355},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/with_flat_map.rs","byte_start":536153,"byte_end":536164,"line_start":13,"line_end":13,"column_start":16,"column_end":27},"name":"WithFlatMap","qualname":"::sink::with_flat_map::WithFlatMap","value":"WithFlatMap {  }","parent":null,"children":[{"krate":0,"index":15361},{"krate":0,"index":15362},{"krate":0,"index":15363},{"krate":0,"index":15364},{"krate":0,"index":15365}],"decl_id":null,"docs":" Sink for the [`with_flat_map`](super::SinkExt::with_flat_map) method.\n","sig":null,"attributes":[{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":15442},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/buffer.rs","byte_start":539899,"byte_end":539905,"line_start":13,"line_end":13,"column_start":16,"column_end":22},"name":"Buffer","qualname":"::sink::buffer::Buffer","value":"Buffer {  }","parent":null,"children":[{"krate":0,"index":15445},{"krate":0,"index":15446},{"krate":0,"index":15447}],"decl_id":null,"docs":" Sink for the [`buffer`](super::SinkExt::buffer) method.\n","sig":null,"attributes":[{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":7582},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":503820,"byte_end":503827,"line_start":65,"line_end":65,"column_start":11,"column_end":18},"name":"SinkExt","qualname":"::sink::SinkExt","value":"SinkExt<Item>: Sink<Item>","parent":null,"children":[{"krate":0,"index":7584},{"krate":0,"index":7589},{"krate":0,"index":7593},{"krate":0,"index":7596},{"krate":0,"index":7598},{"krate":0,"index":7599},{"krate":0,"index":7600},{"krate":0,"index":7602},{"krate":0,"index":7603},{"krate":0,"index":7604},{"krate":0,"index":7605},{"krate":0,"index":7608},{"krate":0,"index":7610},{"krate":0,"index":7612},{"krate":0,"index":7613},{"krate":0,"index":7614},{"krate":0,"index":7615}],"decl_id":null,"docs":" An extension trait for `Sink`s that provides a variety of convenient\n combinator functions.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Sink`s that provides a variety of convenient","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":503711,"byte_end":503783,"line_start":63,"line_end":63,"column_start":1,"column_end":73}},{"value":"/ combinator functions.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":503784,"byte_end":503809,"line_start":64,"line_end":64,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":7584},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":504419,"byte_end":504423,"line_start":77,"line_end":77,"column_start":8,"column_end":12},"name":"with","qualname":"::sink::SinkExt::with","value":"pub fn with<U, Fut, F, E>(Self, F) -> With<Self, Item, U, Fut, F> where\nF: FnMut(U) -> Fut, Fut: Future<Output = Result<Item, E>>,\nE: From<Self::Error>, Self: Sized","parent":{"krate":0,"index":7582},"children":[],"decl_id":null,"docs":" Composes a function *in front of* the sink.","sig":null,"attributes":[{"value":"/ Composes a function *in front of* the sink.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":503852,"byte_end":503899,"line_start":66,"line_end":66,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":503904,"byte_end":503907,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ This adapter produces a new sink that passes each value through the","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":503912,"byte_end":503983,"line_start":68,"line_end":68,"column_start":5,"column_end":76}},{"value":"/ given function `f` before sending it to `self`.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":503988,"byte_end":504039,"line_start":69,"line_end":69,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":504044,"byte_end":504047,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ To process each value, `f` produces a *future*, which is then polled to","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":504052,"byte_end":504127,"line_start":71,"line_end":71,"column_start":5,"column_end":80}},{"value":"/ completion before passing its result down to the underlying sink. If the","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":504132,"byte_end":504208,"line_start":72,"line_end":72,"column_start":5,"column_end":81}},{"value":"/ future produces an error, that error is returned by the new sink.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":504213,"byte_end":504282,"line_start":73,"line_end":73,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":504287,"byte_end":504290,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the given sink, returning a wrapped","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":504295,"byte_end":504367,"line_start":75,"line_end":75,"column_start":5,"column_end":77}},{"value":"/ version, much like `Iterator::map`.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":504372,"byte_end":504411,"line_start":76,"line_end":76,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":7589},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":505779,"byte_end":505792,"line_start":119,"line_end":119,"column_start":8,"column_end":21},"name":"with_flat_map","qualname":"::sink::SinkExt::with_flat_map","value":"pub fn with_flat_map<U, St, F>(Self, F) -> WithFlatMap<Self, Item, U, St, F>\nwhere F: FnMut(U) -> St, St: Stream<Item = Result<Item, Self::Error>>,\nSelf: Sized","parent":{"krate":0,"index":7582},"children":[],"decl_id":null,"docs":" Composes a function *in front of* the sink.","sig":null,"attributes":[{"value":"/ Composes a function *in front of* the sink.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":504685,"byte_end":504732,"line_start":87,"line_end":87,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":504737,"byte_end":504740,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ This adapter produces a new sink that passes each value through the","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":504745,"byte_end":504816,"line_start":89,"line_end":89,"column_start":5,"column_end":76}},{"value":"/ given function `f` before sending it to `self`.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":504821,"byte_end":504872,"line_start":90,"line_end":90,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":504877,"byte_end":504880,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ To process each value, `f` produces a *stream*, of which each value","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":504885,"byte_end":504956,"line_start":92,"line_end":92,"column_start":5,"column_end":76}},{"value":"/ is passed to the underlying sink. A new value will not be accepted until","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":504961,"byte_end":505037,"line_start":93,"line_end":93,"column_start":5,"column_end":81}},{"value":"/ the stream has been drained","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":505042,"byte_end":505073,"line_start":94,"line_end":94,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":505078,"byte_end":505081,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the given sink, returning a wrapped","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":505086,"byte_end":505158,"line_start":96,"line_end":96,"column_start":5,"column_end":77}},{"value":"/ version, much like `Iterator::flat_map`.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":505163,"byte_end":505207,"line_start":97,"line_end":97,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":505212,"byte_end":505215,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":505220,"byte_end":505234,"line_start":99,"line_end":99,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":505239,"byte_end":505242,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":505247,"byte_end":505254,"line_start":101,"line_end":101,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":505259,"byte_end":505300,"line_start":102,"line_end":102,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":505305,"byte_end":505336,"line_start":103,"line_end":103,"column_start":5,"column_end":36}},{"value":"/ use futures::sink::SinkExt;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":505341,"byte_end":505372,"line_start":104,"line_end":104,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":505377,"byte_end":505420,"line_start":105,"line_end":105,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":505425,"byte_end":505428,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::channel(5);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":505433,"byte_end":505469,"line_start":107,"line_end":107,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":505474,"byte_end":505477,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ let mut tx = tx.with_flat_map(|x| {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":505482,"byte_end":505521,"line_start":109,"line_end":109,"column_start":5,"column_end":44}},{"value":"/     stream::iter(vec![Ok(42); x])","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":505526,"byte_end":505563,"line_start":110,"line_end":110,"column_start":5,"column_end":42}},{"value":"/ });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":505568,"byte_end":505575,"line_start":111,"line_end":111,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":505580,"byte_end":505583,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ tx.send(5).await.unwrap();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":505588,"byte_end":505618,"line_start":113,"line_end":113,"column_start":5,"column_end":35}},{"value":"/ drop(tx);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":505623,"byte_end":505636,"line_start":114,"line_end":114,"column_start":5,"column_end":18}},{"value":"/ let received: Vec<i32> = rx.collect().await;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":505641,"byte_end":505689,"line_start":115,"line_end":115,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(received, vec![42, 42, 42, 42, 42]);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":505694,"byte_end":505745,"line_start":116,"line_end":116,"column_start":5,"column_end":56}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":505750,"byte_end":505759,"line_start":117,"line_end":117,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":505764,"byte_end":505771,"line_start":118,"line_end":118,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7593},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":506532,"byte_end":506544,"line_start":143,"line_end":143,"column_start":8,"column_end":20},"name":"sink_map_err","qualname":"::sink::SinkExt::sink_map_err","value":"pub fn sink_map_err<E, F>(Self, F) -> SinkMapErr<Self, F> where\nF: FnOnce(Self::Error) -> E, Self: Sized","parent":{"krate":0,"index":7582},"children":[],"decl_id":null,"docs":" Transforms the error returned by the sink.\n","sig":null,"attributes":[{"value":"/ Transforms the error returned by the sink.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":506478,"byte_end":506524,"line_start":142,"line_end":142,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":7596},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":506912,"byte_end":506925,"line_start":154,"line_end":154,"column_start":8,"column_end":21},"name":"sink_err_into","qualname":"::sink::SinkExt::sink_err_into","value":"pub fn sink_err_into<E>(Self) -> err_into::SinkErrInto<Self, Item, E> where\nSelf: Sized, Self::Error: Into<E>","parent":{"krate":0,"index":7582},"children":[],"decl_id":null,"docs":" Map this sink's error to a different error type using the `Into` trait.","sig":null,"attributes":[{"value":"/ Map this sink's error to a different error type using the `Into` trait.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":506731,"byte_end":506806,"line_start":151,"line_end":151,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":506811,"byte_end":506814,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ If wanting to map errors of a `Sink + Stream`, use `.sink_err_into().err_into()`.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":506819,"byte_end":506904,"line_start":153,"line_end":153,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":7598},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":507760,"byte_end":507766,"line_start":175,"line_end":175,"column_start":8,"column_end":14},"name":"buffer","qualname":"::sink::SinkExt::buffer","value":"pub fn buffer(Self, usize) -> Buffer<Self, Item> where Self: Sized","parent":{"krate":0,"index":7582},"children":[],"decl_id":null,"docs":" Adds a fixed-size buffer to the current sink.","sig":null,"attributes":[{"value":"/ Adds a fixed-size buffer to the current sink.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":507111,"byte_end":507160,"line_start":162,"line_end":162,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":507165,"byte_end":507168,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ The resulting sink will buffer up to `capacity` items when the","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":507173,"byte_end":507239,"line_start":164,"line_end":164,"column_start":5,"column_end":71}},{"value":"/ underlying sink is unwilling to accept additional items. Calling `flush`","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":507244,"byte_end":507320,"line_start":165,"line_end":165,"column_start":5,"column_end":81}},{"value":"/ on the buffered sink will attempt to both empty the buffer and complete","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":507325,"byte_end":507400,"line_start":166,"line_end":166,"column_start":5,"column_end":80}},{"value":"/ processing on the underlying sink.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":507405,"byte_end":507443,"line_start":167,"line_end":167,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":507448,"byte_end":507451,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the given sink, returning a wrapped","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":507456,"byte_end":507528,"line_start":169,"line_end":169,"column_start":5,"column_end":77}},{"value":"/ version, much like `Iterator::map`.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":507533,"byte_end":507572,"line_start":170,"line_end":170,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":507577,"byte_end":507580,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":507585,"byte_end":507660,"line_start":172,"line_end":172,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":507665,"byte_end":507722,"line_start":173,"line_end":173,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":507727,"byte_end":507752,"line_start":174,"line_end":174,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":7599},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":507960,"byte_end":507965,"line_start":183,"line_end":183,"column_start":8,"column_end":13},"name":"close","qualname":"::sink::SinkExt::close","value":"pub fn close(&mut Self) -> Close<, Self, Item> where Self: Unpin","parent":{"krate":0,"index":7582},"children":[],"decl_id":null,"docs":" Close the sink.\n","sig":null,"attributes":[{"value":"/ Close the sink.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":507933,"byte_end":507952,"line_start":182,"line_end":182,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":7600},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":508299,"byte_end":508305,"line_start":194,"line_end":194,"column_start":8,"column_end":14},"name":"fanout","qualname":"::sink::SinkExt::fanout","value":"pub fn fanout<Si>(Self, Si) -> Fanout<Self, Si> where Self: Sized,\nItem: Clone, Si: Sink<Item, Error = Self::Error>","parent":{"krate":0,"index":7582},"children":[],"decl_id":null,"docs":" Fanout items to multiple sinks.","sig":null,"attributes":[{"value":"/ Fanout items to multiple sinks.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":508120,"byte_end":508155,"line_start":190,"line_end":190,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":508160,"byte_end":508163,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ This adapter clones each incoming item and forwards it to both this as well as","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":508168,"byte_end":508250,"line_start":192,"line_end":192,"column_start":5,"column_end":87}},{"value":"/ the other sink at the same time.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":508255,"byte_end":508291,"line_start":193,"line_end":193,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":7602},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":508732,"byte_end":508737,"line_start":207,"line_end":207,"column_start":8,"column_end":13},"name":"flush","qualname":"::sink::SinkExt::flush","value":"pub fn flush(&mut Self) -> Flush<, Self, Item> where Self: Unpin","parent":{"krate":0,"index":7582},"children":[],"decl_id":null,"docs":" Flush the sink, processing all pending items.","sig":null,"attributes":[{"value":"/ Flush the sink, processing all pending items.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":508531,"byte_end":508580,"line_start":203,"line_end":203,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":508585,"byte_end":508588,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ This adapter is intended to be used when you want to stop sending to the sink","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":508593,"byte_end":508674,"line_start":205,"line_end":205,"column_start":5,"column_end":86}},{"value":"/ until all current requests are processed.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":508679,"byte_end":508724,"line_start":206,"line_end":206,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":7603},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":509219,"byte_end":509223,"line_start":220,"line_end":220,"column_start":8,"column_end":12},"name":"send","qualname":"::sink::SinkExt::send","value":"pub fn send(&mut Self, Item) -> Send<, Self, Item> where Self: Unpin","parent":{"krate":0,"index":7582},"children":[],"decl_id":null,"docs":" A future that completes after the given item has been fully processed\n into the sink, including flushing.","sig":null,"attributes":[{"value":"/ A future that completes after the given item has been fully processed","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":508892,"byte_end":508965,"line_start":214,"line_end":214,"column_start":5,"column_end":78}},{"value":"/ into the sink, including flushing.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":508970,"byte_end":509008,"line_start":215,"line_end":215,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":509013,"byte_end":509016,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ Note that, **because of the flushing requirement, it is usually better","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":509021,"byte_end":509095,"line_start":217,"line_end":217,"column_start":5,"column_end":79}},{"value":"/ to batch together items to send via `feed` or `send_all`,","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":509100,"byte_end":509161,"line_start":218,"line_end":218,"column_start":5,"column_end":66}},{"value":"/ rather than flushing between each item.**","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":509166,"byte_end":509211,"line_start":219,"line_end":219,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":7604},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":509700,"byte_end":509704,"line_start":233,"line_end":233,"column_start":8,"column_end":12},"name":"feed","qualname":"::sink::SinkExt::feed","value":"pub fn feed(&mut Self, Item) -> Feed<, Self, Item> where Self: Unpin","parent":{"krate":0,"index":7582},"children":[],"decl_id":null,"docs":" A future that completes after the given item has been received\n by the sink.","sig":null,"attributes":[{"value":"/ A future that completes after the given item has been received","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":509394,"byte_end":509460,"line_start":227,"line_end":227,"column_start":5,"column_end":71}},{"value":"/ by the sink.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":509465,"byte_end":509481,"line_start":228,"line_end":228,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":509486,"byte_end":509489,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ Unlike `send`, the returned future does not flush the sink.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":509494,"byte_end":509557,"line_start":230,"line_end":230,"column_start":5,"column_end":68}},{"value":"/ It is the caller's responsibility to ensure all pending items","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":509562,"byte_end":509627,"line_start":231,"line_end":231,"column_start":5,"column_end":70}},{"value":"/ are processed, which can be done via `flush` or `close`.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":509632,"byte_end":509692,"line_start":232,"line_end":232,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":7605},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":510611,"byte_end":510619,"line_start":252,"line_end":252,"column_start":8,"column_end":16},"name":"send_all","qualname":"::sink::SinkExt::send_all","value":"pub fn send_all<'a, St>(&'a mut Self, &'a mut St) -> SendAll where\nSt: TryStream<Ok = Item, Error = Item> + Stream + Unpin + ?Sized, Self: Unpin","parent":{"krate":0,"index":7582},"children":[],"decl_id":null,"docs":" A future that completes after the given stream has been fully processed\n into the sink, including flushing.","sig":null,"attributes":[{"value":"/ A future that completes after the given stream has been fully processed","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":509875,"byte_end":509950,"line_start":240,"line_end":240,"column_start":5,"column_end":80}},{"value":"/ into the sink, including flushing.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":509955,"byte_end":509993,"line_start":241,"line_end":241,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":509998,"byte_end":510001,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ This future will drive the stream to keep producing items until it is","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":510006,"byte_end":510079,"line_start":243,"line_end":243,"column_start":5,"column_end":78}},{"value":"/ exhausted, sending each item to the sink. It will complete once both the","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":510084,"byte_end":510160,"line_start":244,"line_end":244,"column_start":5,"column_end":81}},{"value":"/ stream is exhausted, the sink has received all items, and the sink has","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":510165,"byte_end":510239,"line_start":245,"line_end":245,"column_start":5,"column_end":79}},{"value":"/ been flushed. Note that the sink is **not** closed. If the stream produces","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":510244,"byte_end":510322,"line_start":246,"line_end":246,"column_start":5,"column_end":83}},{"value":"/ an error, that error will be returned by this future without flushing the sink.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":510327,"byte_end":510410,"line_start":247,"line_end":247,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":510415,"byte_end":510418,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ Doing `sink.send_all(stream)` is roughly equivalent to","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":510423,"byte_end":510481,"line_start":249,"line_end":249,"column_start":5,"column_end":63}},{"value":"/ `stream.forward(sink)`. The returned future will exhaust all items from","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":510486,"byte_end":510561,"line_start":250,"line_end":250,"column_start":5,"column_end":80}},{"value":"/ `stream` and send them to `self`.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":510566,"byte_end":510603,"line_start":251,"line_end":251,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":7608},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":511417,"byte_end":511426,"line_start":268,"line_end":268,"column_start":8,"column_end":17},"name":"left_sink","qualname":"::sink::SinkExt::left_sink","value":"pub fn left_sink<Si2>(Self) -> Either<Self, Si2> where Si2: Sink<Item, Error =\nSelf::Error>, Self: Sized","parent":{"krate":0,"index":7582},"children":[],"decl_id":null,"docs":" Wrap this sink in an `Either` sink, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this sink in an `Either` sink, making it the left-hand variant","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":511144,"byte_end":511215,"line_start":263,"line_end":263,"column_start":5,"column_end":76}},{"value":"/ of that `Either`.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":511220,"byte_end":511241,"line_start":264,"line_end":264,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":511246,"byte_end":511249,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_sink` method to write `if`","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":511254,"byte_end":511332,"line_start":266,"line_end":266,"column_start":5,"column_end":83}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":511337,"byte_end":511409,"line_start":267,"line_end":267,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":7610},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":511894,"byte_end":511904,"line_start":281,"line_end":281,"column_start":8,"column_end":18},"name":"right_sink","qualname":"::sink::SinkExt::right_sink","value":"pub fn right_sink<Si1>(Self) -> Either<Si1, Self> where Si1: Sink<Item, Error\n= Self::Error>, Self: Sized","parent":{"krate":0,"index":7582},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the right-hand variant","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":511617,"byte_end":511693,"line_start":276,"line_end":276,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":511698,"byte_end":511719,"line_start":277,"line_end":277,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":511724,"byte_end":511727,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_sink` method to write `if`","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":511732,"byte_end":511809,"line_start":279,"line_end":279,"column_start":5,"column_end":82}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":511814,"byte_end":511886,"line_start":280,"line_end":280,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":7612},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":512549,"byte_end":512565,"line_start":302,"line_end":302,"column_start":8,"column_end":24},"name":"poll_ready_unpin","qualname":"::sink::SinkExt::poll_ready_unpin","value":"pub fn poll_ready_unpin(&mut Self, &mut Context)\n-> Poll<Result<(), Self::Error>> where Self: Unpin","parent":{"krate":0,"index":7582},"children":[],"decl_id":null,"docs":" A convenience method for calling [`Sink::poll_ready`] on [`Unpin`]\n sink types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`Sink::poll_ready`] on [`Unpin`]","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":512451,"byte_end":512521,"line_start":300,"line_end":300,"column_start":5,"column_end":75}},{"value":"/ sink types.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":512526,"byte_end":512541,"line_start":301,"line_end":301,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7613},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":512816,"byte_end":512832,"line_start":311,"line_end":311,"column_start":8,"column_end":24},"name":"start_send_unpin","qualname":"::sink::SinkExt::start_send_unpin","value":"pub fn start_send_unpin(&mut Self, Item) -> Result<(), Self::Error> where\nSelf: Unpin","parent":{"krate":0,"index":7582},"children":[],"decl_id":null,"docs":" A convenience method for calling [`Sink::start_send`] on [`Unpin`]\n sink types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`Sink::start_send`] on [`Unpin`]","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":512718,"byte_end":512788,"line_start":309,"line_end":309,"column_start":5,"column_end":75}},{"value":"/ sink types.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":512793,"byte_end":512808,"line_start":310,"line_end":310,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7614},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":513069,"byte_end":513085,"line_start":320,"line_end":320,"column_start":8,"column_end":24},"name":"poll_flush_unpin","qualname":"::sink::SinkExt::poll_flush_unpin","value":"pub fn poll_flush_unpin(&mut Self, &mut Context)\n-> Poll<Result<(), Self::Error>> where Self: Unpin","parent":{"krate":0,"index":7582},"children":[],"decl_id":null,"docs":" A convenience method for calling [`Sink::poll_flush`] on [`Unpin`]\n sink types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`Sink::poll_flush`] on [`Unpin`]","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":512971,"byte_end":513041,"line_start":318,"line_end":318,"column_start":5,"column_end":75}},{"value":"/ sink types.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":513046,"byte_end":513061,"line_start":319,"line_end":319,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7615},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":513336,"byte_end":513352,"line_start":329,"line_end":329,"column_start":8,"column_end":24},"name":"poll_close_unpin","qualname":"::sink::SinkExt::poll_close_unpin","value":"pub fn poll_close_unpin(&mut Self, &mut Context)\n-> Poll<Result<(), Self::Error>> where Self: Unpin","parent":{"krate":0,"index":7582},"children":[],"decl_id":null,"docs":" A convenience method for calling [`Sink::poll_close`] on [`Unpin`]\n sink types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`Sink::poll_close`] on [`Unpin`]","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":513238,"byte_end":513308,"line_start":327,"line_end":327,"column_start":5,"column_end":75}},{"value":"/ sink types.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":513313,"byte_end":513328,"line_start":328,"line_end":328,"column_start":5,"column_end":20}}]},{"kind":"Mod","id":{"krate":0,"index":7627},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","parent":null,"children":[{"krate":0,"index":7628},{"krate":0,"index":7629},{"krate":0,"index":7632},{"krate":0,"index":7635},{"krate":0,"index":7638},{"krate":0,"index":7641},{"krate":0,"index":7644},{"krate":0,"index":7645},{"krate":0,"index":7648},{"krate":0,"index":7651},{"krate":0,"index":7654},{"krate":0,"index":7657},{"krate":0,"index":7660},{"krate":0,"index":7663},{"krate":0,"index":7666},{"krate":0,"index":7669},{"krate":0,"index":7672},{"krate":0,"index":7675},{"krate":0,"index":7676},{"krate":0,"index":7679},{"krate":0,"index":7682},{"krate":0,"index":7685},{"krate":0,"index":7719},{"krate":0,"index":7720},{"krate":0,"index":7723}],"decl_id":null,"docs":" Tools for working with tasks.","sig":null,"attributes":[{"value":"/ Tools for working with tasks.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":542573,"byte_end":542606,"line_start":1,"line_end":1,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":542607,"byte_end":542610,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":542611,"byte_end":542636,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":542637,"byte_end":542640,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - [`Spawn`], a trait for spawning new tasks.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":542641,"byte_end":542689,"line_start":5,"line_end":5,"column_start":1,"column_end":49}},{"value":"/ - [`Context`], a context of an asynchronous task,","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":542690,"byte_end":542743,"line_start":6,"line_end":6,"column_start":1,"column_end":54}},{"value":"/   including a handle for waking up the task.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":542744,"byte_end":542792,"line_start":7,"line_end":7,"column_start":1,"column_end":49}},{"value":"/ - [`Waker`], a handle for waking up a task.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":542793,"byte_end":542840,"line_start":8,"line_end":8,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":542841,"byte_end":542844,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The remaining types and traits in the module are used for implementing","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":542845,"byte_end":542919,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ executors or dealing with synchronization issues around task wakeup.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":542920,"byte_end":542992,"line_start":11,"line_end":11,"column_start":1,"column_end":73}}]},{"kind":"Trait","id":{"krate":0,"index":7713},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":544242,"byte_end":544250,"line_start":20,"line_end":20,"column_start":11,"column_end":19},"name":"SpawnExt","qualname":"::task::spawn::SpawnExt","value":"SpawnExt: Spawn","parent":null,"children":[{"krate":0,"index":7714}],"decl_id":null,"docs":" Extension trait for `Spawn`.\n","sig":null,"attributes":[{"value":"/ Extension trait for `Spawn`.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":544199,"byte_end":544231,"line_start":19,"line_end":19,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":7714},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":545247,"byte_end":545252,"line_start":46,"line_end":46,"column_start":8,"column_end":13},"name":"spawn","qualname":"::task::spawn::SpawnExt::spawn","value":"pub fn spawn<Fut>(&Self, Fut) -> Result<(), SpawnError> where\nFut: Future<Output = ()> + Send + 'static","parent":{"krate":0,"index":7713},"children":[],"decl_id":null,"docs":" Spawns a task that polls the given future with output `()` to\n completion.","sig":null,"attributes":[{"value":"/ Spawns a task that polls the given future with output `()` to","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":544264,"byte_end":544329,"line_start":21,"line_end":21,"column_start":5,"column_end":70}},{"value":"/ completion.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":544334,"byte_end":544349,"line_start":22,"line_end":22,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":544354,"byte_end":544357,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ This method returns a [`Result`] that contains a [`SpawnError`] if","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":544362,"byte_end":544432,"line_start":24,"line_end":24,"column_start":5,"column_end":75}},{"value":"/ spawning fails.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":544437,"byte_end":544456,"line_start":25,"line_end":25,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":544461,"byte_end":544464,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ You can use [`spawn_with_handle`](SpawnExt::spawn_with_handle) if","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":544469,"byte_end":544538,"line_start":27,"line_end":27,"column_start":5,"column_end":74}},{"value":"/ you want to spawn a future with output other than `()` or if you want","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":544543,"byte_end":544616,"line_start":28,"line_end":28,"column_start":5,"column_end":78}},{"value":"/ to be able to await its completion.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":544621,"byte_end":544660,"line_start":29,"line_end":29,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":544665,"byte_end":544668,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ Note this method will eventually be replaced with the upcoming","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":544673,"byte_end":544739,"line_start":31,"line_end":31,"column_start":5,"column_end":71}},{"value":"/ `Spawn::spawn` method which will take a `dyn Future` as input.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":544744,"byte_end":544810,"line_start":32,"line_end":32,"column_start":5,"column_end":71}},{"value":"/ Technical limitations prevent `Spawn::spawn` from being implemented","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":544815,"byte_end":544886,"line_start":33,"line_end":33,"column_start":5,"column_end":76}},{"value":"/ today. Feel free to use this method in the meantime.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":544891,"byte_end":544947,"line_start":34,"line_end":34,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":544952,"byte_end":544955,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":544960,"byte_end":544967,"line_start":36,"line_end":36,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::ThreadPool;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":544972,"byte_end":545010,"line_start":37,"line_end":37,"column_start":5,"column_end":43}},{"value":"/ use futures::task::SpawnExt;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":545015,"byte_end":545047,"line_start":38,"line_end":38,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":545052,"byte_end":545055,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ let executor = ThreadPool::new().unwrap();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":545060,"byte_end":545106,"line_start":40,"line_end":40,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":545111,"byte_end":545114,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ let future = async { /* ... */ };","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":545119,"byte_end":545156,"line_start":42,"line_end":42,"column_start":5,"column_end":42}},{"value":"/ executor.spawn(future).unwrap();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":545161,"byte_end":545197,"line_start":43,"line_end":43,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":545202,"byte_end":545209,"line_start":44,"line_end":44,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":545214,"byte_end":545239,"line_start":45,"line_end":45,"column_start":5,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":7716},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":547006,"byte_end":547019,"line_start":97,"line_end":97,"column_start":11,"column_end":24},"name":"LocalSpawnExt","qualname":"::task::spawn::LocalSpawnExt","value":"LocalSpawnExt: LocalSpawn","parent":null,"children":[{"krate":0,"index":7717}],"decl_id":null,"docs":" Extension trait for `LocalSpawn`.\n","sig":null,"attributes":[{"value":"/ Extension trait for `LocalSpawn`.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":546958,"byte_end":546995,"line_start":96,"line_end":96,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":7717},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":548062,"byte_end":548073,"line_start":124,"line_end":124,"column_start":8,"column_end":19},"name":"spawn_local","qualname":"::task::spawn::LocalSpawnExt::spawn_local","value":"pub fn spawn_local<Fut>(&Self, Fut) -> Result<(), SpawnError> where\nFut: Future<Output = ()> + 'static","parent":{"krate":0,"index":7716},"children":[],"decl_id":null,"docs":" Spawns a task that polls the given future with output `()` to\n completion.","sig":null,"attributes":[{"value":"/ Spawns a task that polls the given future with output `()` to","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":547038,"byte_end":547103,"line_start":98,"line_end":98,"column_start":5,"column_end":70}},{"value":"/ completion.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":547108,"byte_end":547123,"line_start":99,"line_end":99,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":547128,"byte_end":547131,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ This method returns a [`Result`] that contains a [`SpawnError`] if","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":547136,"byte_end":547206,"line_start":101,"line_end":101,"column_start":5,"column_end":75}},{"value":"/ spawning fails.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":547211,"byte_end":547230,"line_start":102,"line_end":102,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":547235,"byte_end":547238,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ You can use [`spawn_with_handle`](SpawnExt::spawn_with_handle) if","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":547243,"byte_end":547312,"line_start":104,"line_end":104,"column_start":5,"column_end":74}},{"value":"/ you want to spawn a future with output other than `()` or if you want","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":547317,"byte_end":547390,"line_start":105,"line_end":105,"column_start":5,"column_end":78}},{"value":"/ to be able to await its completion.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":547395,"byte_end":547434,"line_start":106,"line_end":106,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":547439,"byte_end":547442,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ Note this method will eventually be replaced with the upcoming","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":547447,"byte_end":547513,"line_start":108,"line_end":108,"column_start":5,"column_end":71}},{"value":"/ `Spawn::spawn` method which will take a `dyn Future` as input.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":547518,"byte_end":547584,"line_start":109,"line_end":109,"column_start":5,"column_end":71}},{"value":"/ Technical limitations prevent `Spawn::spawn` from being implemented","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":547589,"byte_end":547660,"line_start":110,"line_end":110,"column_start":5,"column_end":76}},{"value":"/ today. Feel free to use this method in the meantime.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":547665,"byte_end":547721,"line_start":111,"line_end":111,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":547726,"byte_end":547729,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":547734,"byte_end":547741,"line_start":113,"line_end":113,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::LocalPool;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":547746,"byte_end":547783,"line_start":114,"line_end":114,"column_start":5,"column_end":42}},{"value":"/ use futures::task::LocalSpawnExt;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":547788,"byte_end":547825,"line_start":115,"line_end":115,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":547830,"byte_end":547833,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ let executor = LocalPool::new();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":547838,"byte_end":547874,"line_start":117,"line_end":117,"column_start":5,"column_end":41}},{"value":"/ let spawner = executor.spawner();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":547879,"byte_end":547916,"line_start":118,"line_end":118,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":547921,"byte_end":547924,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ let future = async { /* ... */ };","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":547929,"byte_end":547966,"line_start":120,"line_end":120,"column_start":5,"column_end":42}},{"value":"/ spawner.spawn_local(future).unwrap();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":547971,"byte_end":548012,"line_start":121,"line_end":121,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":548017,"byte_end":548024,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":548029,"byte_end":548054,"line_start":123,"line_end":123,"column_start":5,"column_end":30}}]},{"kind":"Mod","id":{"krate":0,"index":7726},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/never.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"never","qualname":"::never","value":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/never.rs","parent":null,"children":[{"krate":0,"index":7727}],"decl_id":null,"docs":" This module contains the `Never` type.","sig":null,"attributes":[{"value":"/ This module contains the `Never` type.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/never.rs","byte_start":549478,"byte_end":549520,"line_start":1,"line_end":1,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/never.rs","byte_start":549521,"byte_end":549524,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Values of this type can never be created and will never exist.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/never.rs","byte_start":549525,"byte_end":549591,"line_start":3,"line_end":3,"column_start":1,"column_end":67}}]},{"kind":"Type","id":{"krate":0,"index":7727},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/never.rs","byte_start":550228,"byte_end":550233,"line_start":18,"line_end":18,"column_start":10,"column_end":15},"name":"Never","qualname":"::never::Never","value":"core::convert::Infallible","parent":null,"children":[],"decl_id":null,"docs":" A type with no possible values.","sig":null,"attributes":[{"value":"/ A type with no possible values.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/never.rs","byte_start":549593,"byte_end":549628,"line_start":5,"line_end":5,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/never.rs","byte_start":549629,"byte_end":549632,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This is used to indicate values which can never be created, such as the","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/never.rs","byte_start":549633,"byte_end":549708,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ error type of infallible futures.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/never.rs","byte_start":549709,"byte_end":549746,"line_start":8,"line_end":8,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/never.rs","byte_start":549747,"byte_end":549750,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This type is a stable equivalent to the `!` type from `std`.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/never.rs","byte_start":549751,"byte_end":549815,"line_start":10,"line_end":10,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/never.rs","byte_start":549816,"byte_end":549819,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is currently an alias for [`std::convert::Infallible`], but in","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/never.rs","byte_start":549820,"byte_end":549891,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ the future it may be an alias for [`!`][never].","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/never.rs","byte_start":549892,"byte_end":549943,"line_start":13,"line_end":13,"column_start":1,"column_end":52}},{"value":"/ See [\"Future compatibility\" section of `std::convert::Infallible`][infallible] for more.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/never.rs","byte_start":549944,"byte_end":550036,"line_start":14,"line_end":14,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/never.rs","byte_start":550037,"byte_end":550040,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [never]: https://doc.rust-lang.org/nightly/std/primitive.never.html","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/never.rs","byte_start":550041,"byte_end":550112,"line_start":16,"line_end":16,"column_start":1,"column_end":72}},{"value":"/ [infallible]: https://doc.rust-lang.org/nightly/std/convert/enum.Infallible.html#future-compatibility","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/never.rs","byte_start":550113,"byte_end":550218,"line_start":17,"line_end":17,"column_start":1,"column_end":106}}]},{"kind":"Mod","id":{"krate":0,"index":7728},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"lock","qualname":"::lock","value":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mod.rs","parent":null,"children":[{"krate":0,"index":7729},{"krate":0,"index":7911},{"krate":0,"index":7912},{"krate":0,"index":7915},{"krate":0,"index":7918},{"krate":0,"index":7921},{"krate":0,"index":7924},{"krate":0,"index":8006}],"decl_id":null,"docs":" Futures-powered synchronization primitives.","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":11428,"byte_end":11453,"line_start":329,"line_end":329,"column_start":1,"column_end":26}},{"value":"/ Futures-powered synchronization primitives.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mod.rs","byte_start":550264,"byte_end":550311,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mod.rs","byte_start":550312,"byte_end":550315,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mod.rs","byte_start":550316,"byte_end":550391,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mod.rs","byte_start":550392,"byte_end":550449,"line_start":4,"line_end":4,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":7783},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":551872,"byte_end":551877,"line_start":20,"line_end":20,"column_start":12,"column_end":17},"name":"Mutex","qualname":"::lock::mutex::Mutex","value":"Mutex {  }","parent":null,"children":[{"krate":0,"index":7785},{"krate":0,"index":7786},{"krate":0,"index":7787}],"decl_id":null,"docs":" A futures-aware mutex.","sig":null,"attributes":[{"value":"/ A futures-aware mutex.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":551545,"byte_end":551571,"line_start":12,"line_end":12,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":551572,"byte_end":551575,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Fairness","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":551576,"byte_end":551590,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":551591,"byte_end":551594,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This mutex provides no fairness guarantees. Tasks may not acquire the mutex","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":551595,"byte_end":551674,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"/ in the order that they requested the lock, and it's possible for a single task","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":551675,"byte_end":551757,"line_start":17,"line_end":17,"column_start":1,"column_end":83}},{"value":"/ which repeatedly takes the lock to starve other tasks, which may be left waiting","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":551758,"byte_end":551842,"line_start":18,"line_end":18,"column_start":1,"column_end":85}},{"value":"/ indefinitely.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":551843,"byte_end":551860,"line_start":19,"line_end":19,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":7810},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":553103,"byte_end":553106,"line_start":74,"line_end":74,"column_start":12,"column_end":15},"name":"new","qualname":"<Mutex<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new futures-aware mutex.\n","sig":null,"attributes":[{"value":"/ Creates a new futures-aware mutex.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":553053,"byte_end":553091,"line_start":73,"line_end":73,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":7811},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":553533,"byte_end":553543,"line_start":92,"line_end":92,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Mutex<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this mutex, returning the underlying data.","sig":null,"attributes":[{"value":"/ Consumes this mutex, returning the underlying data.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":553287,"byte_end":553342,"line_start":82,"line_end":82,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":553347,"byte_end":553350,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":553355,"byte_end":553369,"line_start":84,"line_end":84,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":553374,"byte_end":553377,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":553382,"byte_end":553389,"line_start":86,"line_end":86,"column_start":5,"column_end":12}},{"value":"/ use futures::lock::Mutex;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":553394,"byte_end":553423,"line_start":87,"line_end":87,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":553428,"byte_end":553431,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ let mutex = Mutex::new(0);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":553436,"byte_end":553466,"line_start":89,"line_end":89,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(mutex.into_inner(), 0);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":553471,"byte_end":553509,"line_start":90,"line_end":90,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":553514,"byte_end":553521,"line_start":91,"line_end":91,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7814},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":553757,"byte_end":553765,"line_start":101,"line_end":101,"column_start":12,"column_end":20},"name":"try_lock","qualname":"<Mutex<T>>::try_lock","value":"pub fn try_lock(&Self) -> Option<MutexGuard<, T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to acquire the lock immediately.","sig":null,"attributes":[{"value":"/ Attempt to acquire the lock immediately.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":553629,"byte_end":553673,"line_start":98,"line_end":98,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":553678,"byte_end":553681,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ If the lock is currently held, this will return `None`.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":553686,"byte_end":553745,"line_start":100,"line_end":100,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":7815},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":554186,"byte_end":554190,"line_start":114,"line_end":114,"column_start":12,"column_end":16},"name":"lock","qualname":"<Mutex<T>>::lock","value":"pub fn lock(&Self) -> MutexLockFuture<, T>","parent":null,"children":[],"decl_id":null,"docs":" Acquire the lock asynchronously.","sig":null,"attributes":[{"value":"/ Acquire the lock asynchronously.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":554021,"byte_end":554057,"line_start":110,"line_end":110,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":554062,"byte_end":554065,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ This method returns a future that will resolve once the lock has been","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":554070,"byte_end":554143,"line_start":112,"line_end":112,"column_start":5,"column_end":78}},{"value":"/ successfully acquired.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":554148,"byte_end":554174,"line_start":113,"line_end":113,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":7816},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":554818,"byte_end":554825,"line_start":134,"line_end":134,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Mutex<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying data.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying data.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":554308,"byte_end":554363,"line_start":118,"line_end":118,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":554368,"byte_end":554371,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the `Mutex` mutably, no actual locking needs to","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":554376,"byte_end":554451,"line_start":120,"line_end":120,"column_start":5,"column_end":80}},{"value":"/ take place -- the mutable borrow statically guarantees no locks exist.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":554456,"byte_end":554530,"line_start":121,"line_end":121,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":554535,"byte_end":554538,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":554543,"byte_end":554557,"line_start":123,"line_end":123,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":554562,"byte_end":554565,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":554570,"byte_end":554577,"line_start":125,"line_end":125,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":554582,"byte_end":554623,"line_start":126,"line_end":126,"column_start":5,"column_end":46}},{"value":"/ use futures::lock::Mutex;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":554628,"byte_end":554657,"line_start":127,"line_end":127,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":554662,"byte_end":554665,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ let mut mutex = Mutex::new(0);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":554670,"byte_end":554704,"line_start":129,"line_end":129,"column_start":5,"column_end":39}},{"value":"/ *mutex.get_mut() = 10;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":554709,"byte_end":554735,"line_start":130,"line_end":130,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(*mutex.lock().await, 10);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":554740,"byte_end":554780,"line_start":131,"line_end":131,"column_start":5,"column_end":45}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":554785,"byte_end":554794,"line_start":132,"line_end":132,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":554799,"byte_end":554806,"line_start":133,"line_end":133,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":7820},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":556547,"byte_end":556562,"line_start":179,"line_end":179,"column_start":12,"column_end":27},"name":"MutexLockFuture","qualname":"::lock::mutex::MutexLockFuture","value":"MutexLockFuture {  }","parent":null,"children":[{"krate":0,"index":7823},{"krate":0,"index":7824}],"decl_id":null,"docs":" A future which resolves when the target mutex has been successfully acquired.\n","sig":null,"attributes":[{"value":"/ A future which resolves when the target mutex has been successfully acquired.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":556454,"byte_end":556535,"line_start":178,"line_end":178,"column_start":1,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":7839},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":559097,"byte_end":559107,"line_start":255,"line_end":255,"column_start":12,"column_end":22},"name":"MutexGuard","qualname":"::lock::mutex::MutexGuard","value":"MutexGuard {  }","parent":null,"children":[{"krate":0,"index":7842}],"decl_id":null,"docs":" An RAII guard returned by the `lock` and `try_lock` methods.\n When this structure is dropped (falls out of scope), the lock will be\n unlocked.\n","sig":null,"attributes":[{"value":"/ An RAII guard returned by the `lock` and `try_lock` methods.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":558933,"byte_end":558997,"line_start":252,"line_end":252,"column_start":1,"column_end":65}},{"value":"/ When this structure is dropped (falls out of scope), the lock will be","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":558998,"byte_end":559071,"line_start":253,"line_end":253,"column_start":1,"column_end":74}},{"value":"/ unlocked.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":559072,"byte_end":559085,"line_start":254,"line_end":254,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7846},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":559676,"byte_end":559679,"line_start":276,"line_end":276,"column_start":12,"column_end":15},"name":"map","qualname":"<MutexGuard>::map","value":"pub fn map<U: ?Sized, F>(Self, F) -> MappedMutexGuard where F: FnOnce(&mut T)\n-> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a locked view over a portion of the locked data.","sig":null,"attributes":[{"value":"/ Returns a locked view over a portion of the locked data.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":559197,"byte_end":559257,"line_start":260,"line_end":260,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":559262,"byte_end":559265,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":559270,"byte_end":559283,"line_start":262,"line_end":262,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":559288,"byte_end":559291,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":559296,"byte_end":559303,"line_start":264,"line_end":264,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":559308,"byte_end":559349,"line_start":265,"line_end":265,"column_start":5,"column_end":46}},{"value":"/ use futures::lock::{Mutex, MutexGuard};","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":559354,"byte_end":559397,"line_start":266,"line_end":266,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":559402,"byte_end":559405,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ let data = Mutex::new(Some(\"value\".to_string()));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":559410,"byte_end":559463,"line_start":268,"line_end":268,"column_start":5,"column_end":58}},{"value":"/ {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":559468,"byte_end":559473,"line_start":269,"line_end":269,"column_start":5,"column_end":10}},{"value":"/     let locked_str = MutexGuard::map(data.lock().await, |opt| opt.as_mut().unwrap());","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":559478,"byte_end":559567,"line_start":270,"line_end":270,"column_start":5,"column_end":94}},{"value":"/     assert_eq!(&*locked_str, \"value\");","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":559572,"byte_end":559614,"line_start":271,"line_end":271,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":559619,"byte_end":559624,"line_start":272,"line_end":272,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":559629,"byte_end":559638,"line_start":273,"line_end":273,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":559643,"byte_end":559650,"line_start":274,"line_end":274,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":559655,"byte_end":559664,"line_start":275,"line_end":275,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":7862},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":560971,"byte_end":560987,"line_start":316,"line_end":316,"column_start":12,"column_end":28},"name":"MappedMutexGuard","qualname":"::lock::mutex::MappedMutexGuard","value":"MappedMutexGuard {  }","parent":null,"children":[{"krate":0,"index":7866},{"krate":0,"index":7867},{"krate":0,"index":7868}],"decl_id":null,"docs":" An RAII guard returned by the `MutexGuard::map` and `MappedMutexGuard::map` methods.\n When this structure is dropped (falls out of scope), the lock will be unlocked.\n","sig":null,"attributes":[{"value":"/ An RAII guard returned by the `MutexGuard::map` and `MappedMutexGuard::map` methods.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":560787,"byte_end":560875,"line_start":314,"line_end":314,"column_start":1,"column_end":89}},{"value":"/ When this structure is dropped (falls out of scope), the lock will be unlocked.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":560876,"byte_end":560959,"line_start":315,"line_end":315,"column_start":1,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":7873},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":561753,"byte_end":561756,"line_start":340,"line_end":340,"column_start":12,"column_end":15},"name":"map","qualname":"<MappedMutexGuard>::map","value":"pub fn map<V: ?Sized, F>(Self, F) -> MappedMutexGuard where F: FnOnce(&mut U)\n-> &mut V","parent":null,"children":[],"decl_id":null,"docs":" Returns a locked view over a portion of the locked data.","sig":null,"attributes":[{"value":"/ Returns a locked view over a portion of the locked data.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":561164,"byte_end":561224,"line_start":323,"line_end":323,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":561229,"byte_end":561232,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":561237,"byte_end":561250,"line_start":325,"line_end":325,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":561255,"byte_end":561258,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":561263,"byte_end":561270,"line_start":327,"line_end":327,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":561275,"byte_end":561316,"line_start":328,"line_end":328,"column_start":5,"column_end":46}},{"value":"/ use futures::lock::{MappedMutexGuard, Mutex, MutexGuard};","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":561321,"byte_end":561382,"line_start":329,"line_end":329,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":561387,"byte_end":561390,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ let data = Mutex::new(Some(\"value\".to_string()));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":561395,"byte_end":561448,"line_start":331,"line_end":331,"column_start":5,"column_end":58}},{"value":"/ {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":561453,"byte_end":561458,"line_start":332,"line_end":332,"column_start":5,"column_end":10}},{"value":"/     let locked_str = MutexGuard::map(data.lock().await, |opt| opt.as_mut().unwrap());","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":561463,"byte_end":561552,"line_start":333,"line_end":333,"column_start":5,"column_end":94}},{"value":"/     let locked_char = MappedMutexGuard::map(locked_str, |s| s.get_mut(0..1).unwrap());","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":561557,"byte_end":561647,"line_start":334,"line_end":334,"column_start":5,"column_end":95}},{"value":"/     assert_eq!(&*locked_char, \"v\");","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":561652,"byte_end":561691,"line_start":335,"line_end":335,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":561696,"byte_end":561701,"line_start":336,"line_end":336,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":561706,"byte_end":561715,"line_start":337,"line_end":337,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":561720,"byte_end":561727,"line_start":338,"line_end":338,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":561732,"byte_end":561741,"line_start":339,"line_end":339,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":15520},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":574810,"byte_end":574819,"line_start":15,"line_end":15,"column_start":16,"column_end":25},"name":"Abortable","qualname":"::abortable::Abortable","value":"Abortable {  }","parent":null,"children":[{"krate":0,"index":15522},{"krate":0,"index":15523}],"decl_id":null,"docs":" A future/stream which can be remotely short-circuited using an `AbortHandle`.\n","sig":null,"attributes":[{"value":"must_use = \"futures/streams do nothing unless you poll them\"","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":10341228,"byte_end":10341237,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":8047},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":576229,"byte_end":576232,"line_start":58,"line_end":58,"column_start":12,"column_end":15},"name":"new","qualname":"<Abortable<T>>::new","value":"pub fn new(T, AbortRegistration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Abortable` future/stream using an existing `AbortRegistration`.\n `AbortRegistration`s can be acquired through `AbortHandle::new`.","sig":null,"attributes":[{"value":"/ Creates a new `Abortable` future/stream using an existing `AbortRegistration`.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":574925,"byte_end":575007,"line_start":23,"line_end":23,"column_start":5,"column_end":87}},{"value":"/ `AbortRegistration`s can be acquired through `AbortHandle::new`.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":575012,"byte_end":575080,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":575085,"byte_end":575088,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ When `abort` is called on the handle tied to `reg` or if `abort` has","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":575093,"byte_end":575165,"line_start":26,"line_end":26,"column_start":5,"column_end":77}},{"value":"/ already been called, the future/stream will complete immediately without making","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":575170,"byte_end":575253,"line_start":27,"line_end":27,"column_start":5,"column_end":88}},{"value":"/ any further progress.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":575258,"byte_end":575283,"line_start":28,"line_end":28,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":575288,"byte_end":575291,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":575296,"byte_end":575311,"line_start":30,"line_end":30,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":575316,"byte_end":575319,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ Usage with futures:","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":575324,"byte_end":575347,"line_start":32,"line_end":32,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":575352,"byte_end":575355,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":575360,"byte_end":575367,"line_start":34,"line_end":34,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":575372,"byte_end":575413,"line_start":35,"line_end":35,"column_start":5,"column_end":46}},{"value":"/ use futures::future::{Abortable, AbortHandle, Aborted};","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":575418,"byte_end":575477,"line_start":36,"line_end":36,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":575482,"byte_end":575485,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ let (abort_handle, abort_registration) = AbortHandle::new_pair();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":575490,"byte_end":575559,"line_start":38,"line_end":38,"column_start":5,"column_end":74}},{"value":"/ let future = Abortable::new(async { 2 }, abort_registration);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":575564,"byte_end":575629,"line_start":39,"line_end":39,"column_start":5,"column_end":70}},{"value":"/ abort_handle.abort();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":575634,"byte_end":575659,"line_start":40,"line_end":40,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(future.await, Err(Aborted));","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":575664,"byte_end":575707,"line_start":41,"line_end":41,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":575712,"byte_end":575721,"line_start":42,"line_end":42,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":575726,"byte_end":575733,"line_start":43,"line_end":43,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":575738,"byte_end":575741,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Usage with streams:","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":575746,"byte_end":575769,"line_start":45,"line_end":45,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":575774,"byte_end":575777,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":575782,"byte_end":575789,"line_start":47,"line_end":47,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":575794,"byte_end":575835,"line_start":48,"line_end":48,"column_start":5,"column_end":46}},{"value":"/ # use futures::future::{Abortable, AbortHandle};","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":575840,"byte_end":575892,"line_start":49,"line_end":49,"column_start":5,"column_end":57}},{"value":"/ # use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":575897,"byte_end":575942,"line_start":50,"line_end":50,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":575947,"byte_end":575950,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ let (abort_handle, abort_registration) = AbortHandle::new_pair();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":575955,"byte_end":576024,"line_start":52,"line_end":52,"column_start":5,"column_end":74}},{"value":"/ let mut stream = Abortable::new(stream::iter(vec![1, 2, 3]), abort_registration);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":576029,"byte_end":576114,"line_start":53,"line_end":53,"column_start":5,"column_end":90}},{"value":"/ abort_handle.abort();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":576119,"byte_end":576144,"line_start":54,"line_end":54,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":576149,"byte_end":576191,"line_start":55,"line_end":55,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":576196,"byte_end":576205,"line_start":56,"line_end":56,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":576210,"byte_end":576217,"line_start":57,"line_end":57,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8048},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":576737,"byte_end":576747,"line_start":68,"line_end":68,"column_start":12,"column_end":22},"name":"is_aborted","qualname":"<Abortable<T>>::is_aborted","value":"pub fn is_aborted(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the task has been aborted. Note that all this\n method indicates is whether [`AbortHandle::abort`] was *called*.\n This means that it will return `true` even if:\n * `abort` was called after the task had completed.\n * `abort` was called while the task was being polled - the task may still be running and\n will not be stopped until `poll` returns.\n","sig":null,"attributes":[{"value":"/ Checks whether the task has been aborted. Note that all this","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":576327,"byte_end":576391,"line_start":62,"line_end":62,"column_start":5,"column_end":69}},{"value":"/ method indicates is whether [`AbortHandle::abort`] was *called*.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":576396,"byte_end":576464,"line_start":63,"line_end":63,"column_start":5,"column_end":73}},{"value":"/ This means that it will return `true` even if:","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":576469,"byte_end":576519,"line_start":64,"line_end":64,"column_start":5,"column_end":55}},{"value":"/ * `abort` was called after the task had completed.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":576524,"byte_end":576578,"line_start":65,"line_end":65,"column_start":5,"column_end":59}},{"value":"/ * `abort` was called while the task was being polled - the task may still be running and","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":576583,"byte_end":576675,"line_start":66,"line_end":66,"column_start":5,"column_end":97}},{"value":"/ will not be stopped until `poll` returns.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":576680,"byte_end":576725,"line_start":67,"line_end":67,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":15563},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":577015,"byte_end":577032,"line_start":77,"line_end":77,"column_start":12,"column_end":29},"name":"AbortRegistration","qualname":"::abortable::AbortRegistration","value":"AbortRegistration {  }","parent":null,"children":[{"krate":0,"index":15564}],"decl_id":null,"docs":" A registration handle for an `Abortable` task.\n Values of this type can be acquired from `AbortHandle::new` and are used\n in calls to `Abortable::new`.\n","sig":null,"attributes":[{"value":"/ A registration handle for an `Abortable` task.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":576825,"byte_end":576875,"line_start":73,"line_end":73,"column_start":1,"column_end":51}},{"value":"/ Values of this type can be acquired from `AbortHandle::new` and are used","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":576876,"byte_end":576952,"line_start":74,"line_end":74,"column_start":1,"column_end":77}},{"value":"/ in calls to `Abortable::new`.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":576953,"byte_end":576986,"line_start":75,"line_end":75,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":15567},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":577138,"byte_end":577149,"line_start":83,"line_end":83,"column_start":12,"column_end":23},"name":"AbortHandle","qualname":"::abortable::AbortHandle","value":"AbortHandle {  }","parent":null,"children":[{"krate":0,"index":15568}],"decl_id":null,"docs":" A handle to an `Abortable` task.\n","sig":null,"attributes":[{"value":"/ A handle to an `Abortable` task.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":577066,"byte_end":577102,"line_start":81,"line_end":81,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":8050},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":577420,"byte_end":577428,"line_start":92,"line_end":92,"column_start":12,"column_end":20},"name":"new_pair","qualname":"<AbortHandle>::new_pair","value":"pub fn new_pair() -> (Self, AbortRegistration)","parent":null,"children":[],"decl_id":null,"docs":" Creates an (`AbortHandle`, `AbortRegistration`) pair which can be used\n to abort a running future or stream.","sig":null,"attributes":[{"value":"/ Creates an (`AbortHandle`, `AbortRegistration`) pair which can be used","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":577206,"byte_end":577280,"line_start":88,"line_end":88,"column_start":5,"column_end":79}},{"value":"/ to abort a running future or stream.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":577285,"byte_end":577325,"line_start":89,"line_end":89,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":577330,"byte_end":577333,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with a call to [`Abortable::new`].","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":577338,"byte_end":577408,"line_start":91,"line_end":91,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":15578},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":577950,"byte_end":577957,"line_start":110,"line_end":110,"column_start":12,"column_end":19},"name":"Aborted","qualname":"::abortable::Aborted","value":"","parent":null,"children":[],"decl_id":null,"docs":" Indicator that the `Abortable` task was aborted.\n","sig":null,"attributes":[{"value":"/ Indicator that the `Abortable` task was aborted.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":577841,"byte_end":577893,"line_start":108,"line_end":108,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":8070},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":580091,"byte_end":580096,"line_start":181,"line_end":181,"column_start":12,"column_end":17},"name":"abort","qualname":"<AbortHandle>::abort","value":"pub fn abort(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Abort the `Abortable` stream/future associated with this handle.","sig":null,"attributes":[{"value":"/ Abort the `Abortable` stream/future associated with this handle.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":579724,"byte_end":579792,"line_start":175,"line_end":175,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":579797,"byte_end":579800,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ Notifies the Abortable task associated with this handle that it","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":579805,"byte_end":579872,"line_start":177,"line_end":177,"column_start":5,"column_end":72}},{"value":"/ should abort. Note that if the task is currently being polled on","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":579877,"byte_end":579945,"line_start":178,"line_end":178,"column_start":5,"column_end":73}},{"value":"/ another thread, it will not immediately stop running. Instead, it will","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":579950,"byte_end":580024,"line_start":179,"line_end":179,"column_start":5,"column_end":79}},{"value":"/ continue to run until its poll method returns.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":580029,"byte_end":580079,"line_start":180,"line_end":180,"column_start":5,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":8082},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":580279,"byte_end":580286,"line_start":4,"line_end":4,"column_start":11,"column_end":18},"name":"FnOnce1","qualname":"::fns::FnOnce1","value":"FnOnce1<A>","parent":null,"children":[{"krate":0,"index":8084},{"krate":0,"index":8085}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":8084},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":580301,"byte_end":580307,"line_start":5,"line_end":5,"column_start":10,"column_end":16},"name":"Output","qualname":"::fns::FnOnce1::Output","value":"type Output;","parent":{"krate":0,"index":8082},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8085},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":580316,"byte_end":580325,"line_start":6,"line_end":6,"column_start":8,"column_end":17},"name":"call_once","qualname":"::fns::FnOnce1::call_once","value":"pub fn call_once(Self, A) -> Self::Output","parent":{"krate":0,"index":8082},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":8092},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":580518,"byte_end":580524,"line_start":19,"line_end":19,"column_start":11,"column_end":17},"name":"FnMut1","qualname":"::fns::FnMut1","value":"FnMut1<A>: FnOnce1<A>","parent":null,"children":[{"krate":0,"index":8094}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8094},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":580549,"byte_end":580557,"line_start":20,"line_end":20,"column_start":8,"column_end":16},"name":"call_mut","qualname":"::fns::FnMut1::call_mut","value":"pub fn call_mut(&mut Self, A) -> Self::Output","parent":{"krate":0,"index":8092},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8109},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":581863,"byte_end":581867,"line_start":74,"line_end":74,"column_start":12,"column_end":16},"name":"OkFn","qualname":"::fns::OkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15609},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":582223,"byte_end":582230,"line_start":92,"line_end":92,"column_start":12,"column_end":19},"name":"ChainFn","qualname":"::fns::ChainFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15630},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":582964,"byte_end":582977,"line_start":127,"line_end":127,"column_start":12,"column_end":25},"name":"MergeResultFn","qualname":"::fns::MergeResultFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15646},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":583319,"byte_end":583328,"line_start":141,"line_end":141,"column_start":12,"column_end":21},"name":"InspectFn","qualname":"::fns::InspectFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15661},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":584283,"byte_end":584290,"line_start":179,"line_end":179,"column_start":12,"column_end":19},"name":"MapOkFn","qualname":"::fns::MapOkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15676},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":585001,"byte_end":585009,"line_start":211,"line_end":211,"column_start":12,"column_end":20},"name":"MapErrFn","qualname":"::fns::MapErrFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15691},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":585729,"byte_end":585740,"line_start":243,"line_end":243,"column_start":12,"column_end":23},"name":"InspectOkFn","qualname":"::fns::InspectOkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15703},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":586625,"byte_end":586637,"line_start":281,"line_end":281,"column_start":12,"column_end":24},"name":"InspectErrFn","qualname":"::fns::InspectErrFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15715},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":587785,"byte_end":587799,"line_start":324,"line_end":324,"column_start":12,"column_end":26},"name":"UnwrapOrElseFn","qualname":"::fns::UnwrapOrElseFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8273},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":588564,"byte_end":588570,"line_start":355,"line_end":355,"column_start":12,"column_end":18},"name":"IntoFn","qualname":"::fns::IntoFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/async_await/poll.rs","byte_start":14228,"byte_end":14236,"line_start":34,"line_end":34,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":50},{"krate":0,"index":51}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/async_await/pending.rs","byte_start":15404,"byte_end":15415,"line_start":33,"line_end":33,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":72},{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/flatten.rs","byte_start":59225,"byte_end":59232,"line_start":20,"line_end":20,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/flatten.rs","byte_start":59362,"byte_end":59369,"line_start":26,"line_end":26,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/flatten.rs","byte_start":59594,"byte_end":59601,"line_start":39,"line_end":39,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":299},{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/flatten.rs","byte_start":60375,"byte_end":60382,"line_start":64,"line_end":64,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/flatten.rs","byte_start":60607,"byte_end":60614,"line_start":77,"line_end":77,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":306},{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/flatten.rs","byte_start":61467,"byte_end":61474,"line_start":105,"line_end":105,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":63628,"byte_end":63632,"line_start":17,"line_end":17,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":342}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":63739,"byte_end":63743,"line_start":23,"line_end":23,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":345}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":65472,"byte_end":65476,"line_start":74,"line_end":74,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":348}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":65589,"byte_end":65593,"line_start":80,"line_end":80,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":351},{"krate":0,"index":352}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/map.rs","byte_start":66571,"byte_end":66574,"line_start":25,"line_end":25,"column_start":14,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/map.rs","byte_start":66743,"byte_end":66746,"line_start":32,"line_end":32,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/map.rs","byte_start":67008,"byte_end":67011,"line_start":45,"line_end":45,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":393},{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/catch_unwind.rs","byte_start":68217,"byte_end":68228,"line_start":19,"line_end":19,"column_start":11,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":430}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/catch_unwind.rs","byte_start":68371,"byte_end":68382,"line_start":28,"line_end":28,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":433},{"krate":0,"index":434}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":69609,"byte_end":69619,"line_start":32,"line_end":32,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":513}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":69820,"byte_end":69826,"line_start":40,"line_end":40,"column_start":29,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":69869,"byte_end":69875,"line_start":42,"line_end":42,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":518}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":70133,"byte_end":70138,"line_start":51,"line_end":51,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":521}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":70292,"byte_end":70302,"line_start":57,"line_end":57,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":524}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":70534,"byte_end":70539,"line_start":68,"line_end":68,"column_start":27,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":70636,"byte_end":70641,"line_start":75,"line_end":75,"column_start":27,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":70885,"byte_end":70891,"line_start":89,"line_end":89,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":544}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":71315,"byte_end":71321,"line_start":103,"line_end":103,"column_start":11,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":547},{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":551}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":73387,"byte_end":73392,"line_start":160,"line_end":160,"column_start":11,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":555},{"krate":0,"index":556},{"krate":0,"index":557}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":75088,"byte_end":75094,"line_start":209,"line_end":209,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":560}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":75246,"byte_end":75252,"line_start":219,"line_end":219,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":563},{"krate":0,"index":564}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":76841,"byte_end":76846,"line_start":267,"line_end":267,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":571}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":78553,"byte_end":78559,"line_start":324,"line_end":324,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":577}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":78718,"byte_end":78724,"line_start":333,"line_end":333,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":580}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":79152,"byte_end":79160,"line_start":350,"line_end":350,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":582}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":79519,"byte_end":79529,"line_start":363,"line_end":363,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":585}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":42376,"byte_end":42377,"line_start":119,"line_end":119,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/into_future.rs","byte_start":101955,"byte_end":101965,"line_start":16,"line_end":16,"column_start":11,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":771}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/into_future.rs","byte_start":102116,"byte_end":102126,"line_start":23,"line_end":23,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":774}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/into_future.rs","byte_start":102249,"byte_end":102259,"line_start":29,"line_end":29,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":777},{"krate":0,"index":778}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten.rs","byte_start":102968,"byte_end":102978,"line_start":20,"line_end":20,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":822}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten.rs","byte_start":103108,"byte_end":103118,"line_start":26,"line_end":26,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":825}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten.rs","byte_start":103361,"byte_end":103371,"line_start":39,"line_end":39,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":828},{"krate":0,"index":829}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten.rs","byte_start":104324,"byte_end":104334,"line_start":67,"line_end":67,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":832}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten.rs","byte_start":104577,"byte_end":104587,"line_start":80,"line_end":80,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":835},{"krate":0,"index":836}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten.rs","byte_start":105624,"byte_end":105634,"line_start":111,"line_end":111,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":840},{"krate":0,"index":841},{"krate":0,"index":842},{"krate":0,"index":843},{"krate":0,"index":844}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten_err.rs","byte_start":107911,"byte_end":107924,"line_start":17,"line_end":17,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":875}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten_err.rs","byte_start":108054,"byte_end":108067,"line_start":23,"line_end":23,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":878}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten_err.rs","byte_start":108310,"byte_end":108323,"line_start":36,"line_end":36,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":881},{"krate":0,"index":882}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":84501,"byte_end":84504,"line_start":134,"line_end":134,"column_start":48,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":109632,"byte_end":109636,"line_start":14,"line_end":14,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":110232,"byte_end":110236,"line_start":42,"line_end":42,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":996}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":110380,"byte_end":110384,"line_start":51,"line_end":51,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1000},{"krate":0,"index":1001}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":110987,"byte_end":110994,"line_start":14,"line_end":14,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1035}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":111555,"byte_end":111562,"line_start":40,"line_end":40,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1040},{"krate":0,"index":1041}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":111707,"byte_end":111714,"line_start":48,"line_end":48,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":111740,"byte_end":111747,"line_start":50,"line_end":50,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1046}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":112501,"byte_end":112510,"line_start":24,"line_end":24,"column_start":37,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":113113,"byte_end":113122,"line_start":47,"line_end":47,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1087},{"krate":0,"index":1088}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":114220,"byte_end":114229,"line_start":79,"line_end":79,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1091}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":114430,"byte_end":114439,"line_start":88,"line_end":88,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1094},{"krate":0,"index":1095}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":115759,"byte_end":115771,"line_start":25,"line_end":25,"column_start":40,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":115997,"byte_end":116009,"line_start":32,"line_end":32,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1139},{"krate":0,"index":1140}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":117122,"byte_end":117134,"line_start":64,"line_end":64,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1143}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":117338,"byte_end":117350,"line_start":73,"line_end":73,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1146},{"krate":0,"index":1147}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/option.rs","byte_start":119000,"byte_end":119012,"line_start":34,"line_end":34,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1178}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/option.rs","byte_start":119110,"byte_end":119122,"line_start":40,"line_end":40,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1181},{"krate":0,"index":1182}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/option.rs","byte_start":119436,"byte_end":119448,"line_start":51,"line_end":51,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1185}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/option.rs","byte_start":119635,"byte_end":119647,"line_start":60,"line_end":60,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1188}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":120085,"byte_end":120091,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":120785,"byte_end":120791,"line_start":43,"line_end":43,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1222}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":120933,"byte_end":120939,"line_start":49,"line_end":49,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1226},{"krate":0,"index":1227}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":121667,"byte_end":121680,"line_start":19,"line_end":19,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1265},{"krate":0,"index":1266}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":122246,"byte_end":122259,"line_start":40,"line_end":40,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1269}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":123279,"byte_end":123292,"line_start":70,"line_end":70,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1273},{"krate":0,"index":1274}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":125464,"byte_end":125469,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1308}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":125648,"byte_end":125653,"line_start":19,"line_end":19,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":125685,"byte_end":125690,"line_start":21,"line_end":21,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1313}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":125787,"byte_end":125792,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1316},{"krate":0,"index":1317}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":133779,"byte_end":133786,"line_start":50,"line_end":50,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1479}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":136547,"byte_end":136554,"line_start":131,"line_end":131,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1484},{"krate":0,"index":1485}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":137542,"byte_end":137549,"line_start":163,"line_end":163,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1489}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":138045,"byte_end":138051,"line_start":14,"line_end":14,"column_start":36,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":140487,"byte_end":140493,"line_start":94,"line_end":94,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1535},{"krate":0,"index":1536}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":141197,"byte_end":141203,"line_start":116,"line_end":116,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1540}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_all.rs","byte_start":141766,"byte_end":141775,"line_start":17,"line_end":17,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_all.rs","byte_start":142782,"byte_end":142791,"line_start":44,"line_end":44,"column_start":11,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1583}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_all.rs","byte_start":142974,"byte_end":142983,"line_start":51,"line_end":51,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1586},{"krate":0,"index":1587}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_all.rs","byte_start":143653,"byte_end":143662,"line_start":70,"line_end":70,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1591}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":152270,"byte_end":152280,"line_start":37,"line_end":37,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1735}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":154110,"byte_end":154120,"line_start":97,"line_end":97,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1740},{"krate":0,"index":1741}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":155268,"byte_end":155278,"line_start":133,"line_end":133,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1745}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":155760,"byte_end":155769,"line_start":13,"line_end":13,"column_start":36,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":157608,"byte_end":157617,"line_start":61,"line_end":61,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1788},{"krate":0,"index":1789}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_ok.rs","byte_start":158979,"byte_end":158987,"line_start":17,"line_end":17,"column_start":28,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_ok.rs","byte_start":160065,"byte_end":160073,"line_start":45,"line_end":45,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1836},{"krate":0,"index":1837}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_ok.rs","byte_start":161504,"byte_end":161512,"line_start":81,"line_end":81,"column_start":52,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1841}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":162491,"byte_end":162497,"line_start":35,"line_end":35,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1881}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":162836,"byte_end":162842,"line_start":46,"line_end":46,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1886}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":163227,"byte_end":163233,"line_start":58,"line_end":58,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1891}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":163614,"byte_end":163620,"line_start":70,"line_end":70,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1894}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":163861,"byte_end":163867,"line_start":80,"line_end":80,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1898},{"krate":0,"index":1899}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":164206,"byte_end":164212,"line_start":95,"line_end":95,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1903}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":164488,"byte_end":164494,"line_start":108,"line_end":108,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1907},{"krate":0,"index":1908},{"krate":0,"index":1909}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":165029,"byte_end":165035,"line_start":130,"line_end":130,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1913}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":165342,"byte_end":165348,"line_start":144,"line_end":144,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1918},{"krate":0,"index":1919},{"krate":0,"index":1920},{"krate":0,"index":1921},{"krate":0,"index":1922}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/chain.rs","byte_start":228631,"byte_end":228636,"line_start":20,"line_end":20,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2080}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/chain.rs","byte_start":228862,"byte_end":228867,"line_start":30,"line_end":30,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2084}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/chain.rs","byte_start":229076,"byte_end":229081,"line_start":40,"line_end":40,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2088},{"krate":0,"index":2089},{"krate":0,"index":2090}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/collect.rs","byte_start":230677,"byte_end":230684,"line_start":20,"line_end":20,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2131},{"krate":0,"index":2132}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/collect.rs","byte_start":230949,"byte_end":230956,"line_start":30,"line_end":30,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2136}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/collect.rs","byte_start":231134,"byte_end":231141,"line_start":40,"line_end":40,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2140},{"krate":0,"index":2141}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/unzip.rs","byte_start":232167,"byte_end":232172,"line_start":21,"line_end":21,"column_start":50,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2183},{"krate":0,"index":2184}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/unzip.rs","byte_start":232566,"byte_end":232571,"line_start":32,"line_end":32,"column_start":46,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2191}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/unzip.rs","byte_start":232821,"byte_end":232826,"line_start":43,"line_end":43,"column_start":41,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2198},{"krate":0,"index":2199}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/concat.rs","byte_start":233951,"byte_end":233957,"line_start":19,"line_end":19,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2236}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/concat.rs","byte_start":234177,"byte_end":234183,"line_start":29,"line_end":29,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2239},{"krate":0,"index":2240}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/concat.rs","byte_start":234891,"byte_end":234897,"line_start":54,"line_end":54,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2243}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/count.rs","byte_start":235623,"byte_end":235628,"line_start":19,"line_end":19,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2283}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/count.rs","byte_start":235849,"byte_end":235854,"line_start":28,"line_end":28,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2286}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/count.rs","byte_start":235986,"byte_end":235991,"line_start":34,"line_end":34,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2289}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/count.rs","byte_start":236109,"byte_end":236114,"line_start":40,"line_end":40,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2292},{"krate":0,"index":2293}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/cycle.rs","byte_start":236920,"byte_end":236925,"line_start":19,"line_end":19,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2326}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/cycle.rs","byte_start":237081,"byte_end":237086,"line_start":28,"line_end":28,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2329},{"krate":0,"index":2330},{"krate":0,"index":2331}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/cycle.rs","byte_start":237835,"byte_end":237840,"line_start":56,"line_end":56,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2334}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/enumerate.rs","byte_start":238588,"byte_end":238597,"line_start":20,"line_end":20,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2367},{"krate":0,"index":11167},{"krate":0,"index":11168},{"krate":0,"index":11169},{"krate":0,"index":11170}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/enumerate.rs","byte_start":238783,"byte_end":238792,"line_start":28,"line_end":28,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2370}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/enumerate.rs","byte_start":238910,"byte_end":238919,"line_start":34,"line_end":34,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2373},{"krate":0,"index":2374},{"krate":0,"index":2375}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/enumerate.rs","byte_start":239572,"byte_end":239581,"line_start":57,"line_end":57,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2379},{"krate":0,"index":11171},{"krate":0,"index":11172},{"krate":0,"index":11173},{"krate":0,"index":11174}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/filter.rs","byte_start":240360,"byte_end":240366,"line_start":27,"line_end":27,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2423}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/filter.rs","byte_start":240839,"byte_end":240845,"line_start":43,"line_end":43,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2429},{"krate":0,"index":11236},{"krate":0,"index":11237},{"krate":0,"index":11238},{"krate":0,"index":11239}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/filter.rs","byte_start":241168,"byte_end":241174,"line_start":56,"line_end":56,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2434}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/filter.rs","byte_start":241511,"byte_end":241517,"line_start":68,"line_end":68,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2440},{"krate":0,"index":2441},{"krate":0,"index":2442}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/filter.rs","byte_start":242896,"byte_end":242902,"line_start":108,"line_end":108,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2448},{"krate":0,"index":11240},{"krate":0,"index":11241},{"krate":0,"index":11242},{"krate":0,"index":11243}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/filter_map.rs","byte_start":243689,"byte_end":243698,"line_start":24,"line_end":24,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2492}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/filter_map.rs","byte_start":243995,"byte_end":244004,"line_start":37,"line_end":37,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2497},{"krate":0,"index":11301},{"krate":0,"index":11302},{"krate":0,"index":11303},{"krate":0,"index":11304}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/filter_map.rs","byte_start":244271,"byte_end":244280,"line_start":50,"line_end":50,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2503}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/filter_map.rs","byte_start":244547,"byte_end":244556,"line_start":61,"line_end":61,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2509},{"krate":0,"index":2510},{"krate":0,"index":2511}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/filter_map.rs","byte_start":245974,"byte_end":245983,"line_start":102,"line_end":102,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2517},{"krate":0,"index":11305},{"krate":0,"index":11306},{"krate":0,"index":11307},{"krate":0,"index":11308}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/flatten.rs","byte_start":246658,"byte_end":246665,"line_start":21,"line_end":21,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2551},{"krate":0,"index":11358},{"krate":0,"index":11359},{"krate":0,"index":11360},{"krate":0,"index":11361}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/flatten.rs","byte_start":246834,"byte_end":246841,"line_start":29,"line_end":29,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2554}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/flatten.rs","byte_start":247033,"byte_end":247040,"line_start":39,"line_end":39,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2557},{"krate":0,"index":2558}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/flatten.rs","byte_start":247862,"byte_end":247869,"line_start":66,"line_end":66,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2562},{"krate":0,"index":11362},{"krate":0,"index":11363},{"krate":0,"index":11364},{"krate":0,"index":11365}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fold.rs","byte_start":248554,"byte_end":248558,"line_start":22,"line_end":22,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2598}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fold.rs","byte_start":248914,"byte_end":248918,"line_start":37,"line_end":37,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2604}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fold.rs","byte_start":249179,"byte_end":249183,"line_start":48,"line_end":48,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2610}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fold.rs","byte_start":249418,"byte_end":249422,"line_start":59,"line_end":59,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2616},{"krate":0,"index":2617}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/any.rs","byte_start":251011,"byte_end":251014,"line_start":22,"line_end":22,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2655}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/any.rs","byte_start":251344,"byte_end":251347,"line_start":36,"line_end":36,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2660}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/any.rs","byte_start":251600,"byte_end":251603,"line_start":47,"line_end":47,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2665}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/any.rs","byte_start":251832,"byte_end":251835,"line_start":58,"line_end":58,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2670},{"krate":0,"index":2671}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/all.rs","byte_start":253587,"byte_end":253590,"line_start":22,"line_end":22,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2709}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/all.rs","byte_start":253920,"byte_end":253923,"line_start":36,"line_end":36,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2714}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/all.rs","byte_start":254175,"byte_end":254178,"line_start":47,"line_end":47,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2719}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/all.rs","byte_start":254407,"byte_end":254410,"line_start":58,"line_end":58,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2724},{"krate":0,"index":2725}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/forward.rs","byte_start":256246,"byte_end":256253,"line_start":24,"line_end":24,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2766}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/forward.rs","byte_start":256453,"byte_end":256460,"line_start":30,"line_end":30,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2772}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/forward.rs","byte_start":256662,"byte_end":256669,"line_start":40,"line_end":40,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2778},{"krate":0,"index":2779}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/for_each.rs","byte_start":258474,"byte_end":258481,"line_start":21,"line_end":21,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2818}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/for_each.rs","byte_start":258774,"byte_end":258781,"line_start":34,"line_end":34,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2823}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/for_each.rs","byte_start":259012,"byte_end":259019,"line_start":45,"line_end":45,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2828}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/for_each.rs","byte_start":259258,"byte_end":259265,"line_start":56,"line_end":56,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2833},{"krate":0,"index":2834}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fuse.rs","byte_start":260366,"byte_end":260370,"line_start":20,"line_end":20,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2867},{"krate":0,"index":2868},{"krate":0,"index":11840},{"krate":0,"index":11841},{"krate":0,"index":11842},{"krate":0,"index":11843}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fuse.rs","byte_start":260867,"byte_end":260871,"line_start":37,"line_end":37,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2871}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fuse.rs","byte_start":260969,"byte_end":260973,"line_start":43,"line_end":43,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2874},{"krate":0,"index":2875},{"krate":0,"index":2876}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fuse.rs","byte_start":261659,"byte_end":261663,"line_start":71,"line_end":71,"column_start":51,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2880},{"krate":0,"index":11844},{"krate":0,"index":11845},{"krate":0,"index":11846},{"krate":0,"index":11847}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":262175,"byte_end":262187,"line_start":15,"line_end":15,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2913},{"krate":0,"index":2914},{"krate":0,"index":2915},{"krate":0,"index":2916},{"krate":0,"index":2917}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":264677,"byte_end":264689,"line_start":73,"line_end":73,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2920}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":264809,"byte_end":264821,"line_start":79,"line_end":79,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2923},{"krate":0,"index":2924}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/map.rs","byte_start":265706,"byte_end":265709,"line_start":22,"line_end":22,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2964}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/map.rs","byte_start":265898,"byte_end":265901,"line_start":31,"line_end":31,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2968},{"krate":0,"index":11977},{"krate":0,"index":11978},{"krate":0,"index":11979},{"krate":0,"index":11980}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/map.rs","byte_start":266070,"byte_end":266073,"line_start":39,"line_end":39,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2972}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/map.rs","byte_start":266241,"byte_end":266244,"line_start":49,"line_end":49,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2976},{"krate":0,"index":2977},{"krate":0,"index":2979}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/map.rs","byte_start":266786,"byte_end":266789,"line_start":69,"line_end":69,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2984},{"krate":0,"index":11981},{"krate":0,"index":11982},{"krate":0,"index":11983},{"krate":0,"index":11984}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/next.rs","byte_start":267356,"byte_end":267360,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/next.rs","byte_start":267411,"byte_end":267415,"line_start":16,"line_end":16,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3021}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/next.rs","byte_start":267566,"byte_end":267570,"line_start":22,"line_end":22,"column_start":56,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3024}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/next.rs","byte_start":267709,"byte_end":267713,"line_start":28,"line_end":28,"column_start":46,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3027},{"krate":0,"index":3028}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/select_next_some.rs","byte_start":268364,"byte_end":268378,"line_start":16,"line_end":16,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3062}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/select_next_some.rs","byte_start":268529,"byte_end":268543,"line_start":22,"line_end":22,"column_start":56,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":3065}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/select_next_some.rs","byte_start":268687,"byte_end":268701,"line_start":28,"line_end":28,"column_start":51,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":3068},{"krate":0,"index":3069}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":270012,"byte_end":270020,"line_start":29,"line_end":29,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3125},{"krate":0,"index":12134},{"krate":0,"index":12135},{"krate":0,"index":12136},{"krate":0,"index":12137},{"krate":0,"index":3126},{"krate":0,"index":3127},{"krate":0,"index":3128},{"krate":0,"index":3129},{"krate":0,"index":3130},{"krate":0,"index":3132}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":275517,"byte_end":275525,"line_start":189,"line_end":189,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3137}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":275667,"byte_end":275675,"line_start":195,"line_end":195,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3140},{"krate":0,"index":3141},{"krate":0,"index":3142}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":276460,"byte_end":276468,"line_start":220,"line_end":220,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3146},{"krate":0,"index":12138},{"krate":0,"index":12139},{"krate":0,"index":12140},{"krate":0,"index":12141}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":276834,"byte_end":276838,"line_start":237,"line_end":237,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3149}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":277083,"byte_end":277087,"line_start":247,"line_end":247,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3152}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":277198,"byte_end":277202,"line_start":253,"line_end":253,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3156},{"krate":0,"index":3157}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":277899,"byte_end":277906,"line_start":279,"line_end":279,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3160}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":278154,"byte_end":278161,"line_start":289,"line_end":289,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3163}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":278272,"byte_end":278279,"line_start":295,"line_end":295,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3167},{"krate":0,"index":3168}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":278999,"byte_end":279005,"line_start":321,"line_end":321,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3172}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":279357,"byte_end":279363,"line_start":332,"line_end":332,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3178}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":279632,"byte_end":279638,"line_start":343,"line_end":343,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3183},{"krate":0,"index":3184}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":280899,"byte_end":280907,"line_start":381,"line_end":381,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3188}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":281227,"byte_end":281235,"line_start":394,"line_end":394,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3193}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":281419,"byte_end":281427,"line_start":405,"line_end":405,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3197},{"krate":0,"index":3198}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":281798,"byte_end":281808,"line_start":423,"line_end":423,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3208},{"krate":0,"index":3209}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/skip.rs","byte_start":282473,"byte_end":282477,"line_start":20,"line_end":20,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3255},{"krate":0,"index":12362},{"krate":0,"index":12363},{"krate":0,"index":12364},{"krate":0,"index":12365}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/skip.rs","byte_start":282668,"byte_end":282672,"line_start":28,"line_end":28,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3258}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/skip.rs","byte_start":282790,"byte_end":282794,"line_start":34,"line_end":34,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3261},{"krate":0,"index":3262},{"krate":0,"index":3263}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/skip.rs","byte_start":283605,"byte_end":283609,"line_start":63,"line_end":63,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3268},{"krate":0,"index":12366},{"krate":0,"index":12367},{"krate":0,"index":12368},{"krate":0,"index":12369}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/skip_while.rs","byte_start":284391,"byte_end":284400,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3309}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/skip_while.rs","byte_start":284852,"byte_end":284861,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3314},{"krate":0,"index":12435},{"krate":0,"index":12436},{"krate":0,"index":12437},{"krate":0,"index":12438}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/skip_while.rs","byte_start":285187,"byte_end":285196,"line_start":54,"line_end":54,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3319}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/skip_while.rs","byte_start":285444,"byte_end":285453,"line_start":65,"line_end":65,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3324},{"krate":0,"index":3325},{"krate":0,"index":3326}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/skip_while.rs","byte_start":287067,"byte_end":287076,"line_start":115,"line_end":115,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3332},{"krate":0,"index":12439},{"krate":0,"index":12440},{"krate":0,"index":12441},{"krate":0,"index":12442}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take.rs","byte_start":287753,"byte_end":287757,"line_start":21,"line_end":21,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3368},{"krate":0,"index":12483},{"krate":0,"index":12484},{"krate":0,"index":12485},{"krate":0,"index":12486}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take.rs","byte_start":287930,"byte_end":287934,"line_start":29,"line_end":29,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3371},{"krate":0,"index":3372},{"krate":0,"index":3373}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take.rs","byte_start":288906,"byte_end":288910,"line_start":68,"line_end":68,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3376}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take.rs","byte_start":289158,"byte_end":289162,"line_start":79,"line_end":79,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3380},{"krate":0,"index":12487},{"krate":0,"index":12488},{"krate":0,"index":12489},{"krate":0,"index":12490}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_while.rs","byte_start":289933,"byte_end":289942,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3421}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_while.rs","byte_start":290390,"byte_end":290399,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3426},{"krate":0,"index":12556},{"krate":0,"index":12557},{"krate":0,"index":12558},{"krate":0,"index":12559}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_while.rs","byte_start":290718,"byte_end":290727,"line_start":54,"line_end":54,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3431},{"krate":0,"index":3432},{"krate":0,"index":3433}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_while.rs","byte_start":292246,"byte_end":292255,"line_start":104,"line_end":104,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3438}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_while.rs","byte_start":292611,"byte_end":292620,"line_start":117,"line_end":117,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3444},{"krate":0,"index":12560},{"krate":0,"index":12561},{"krate":0,"index":12562},{"krate":0,"index":12563}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":293639,"byte_end":293648,"line_start":30,"line_end":30,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3484}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":293936,"byte_end":293945,"line_start":41,"line_end":41,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3488},{"krate":0,"index":12617},{"krate":0,"index":12618},{"krate":0,"index":12619},{"krate":0,"index":12620},{"krate":0,"index":3489},{"krate":0,"index":3490},{"krate":0,"index":3491}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":296062,"byte_end":296071,"line_start":111,"line_end":111,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3495},{"krate":0,"index":3496},{"krate":0,"index":3497}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":297103,"byte_end":297112,"line_start":150,"line_end":150,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3501}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":297349,"byte_end":297358,"line_start":162,"line_end":162,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3506},{"krate":0,"index":12621},{"krate":0,"index":12622},{"krate":0,"index":12623},{"krate":0,"index":12624}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/then.rs","byte_start":298054,"byte_end":298058,"line_start":23,"line_end":23,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3547}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/then.rs","byte_start":298309,"byte_end":298313,"line_start":33,"line_end":33,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3552},{"krate":0,"index":12682},{"krate":0,"index":12683},{"krate":0,"index":12684},{"krate":0,"index":12685}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/then.rs","byte_start":298559,"byte_end":298563,"line_start":45,"line_end":45,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3557}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/then.rs","byte_start":298789,"byte_end":298793,"line_start":56,"line_end":56,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3562},{"krate":0,"index":3563},{"krate":0,"index":3564}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/then.rs","byte_start":299972,"byte_end":299976,"line_start":94,"line_end":94,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3570},{"krate":0,"index":12686},{"krate":0,"index":12687},{"krate":0,"index":12688},{"krate":0,"index":12689}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":300675,"byte_end":300678,"line_start":22,"line_end":22,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3608},{"krate":0,"index":3609},{"krate":0,"index":3610},{"krate":0,"index":3611},{"krate":0,"index":3612}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":302264,"byte_end":302267,"line_start":61,"line_end":61,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3616}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":302462,"byte_end":302465,"line_start":71,"line_end":71,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3620},{"krate":0,"index":3621},{"krate":0,"index":3622}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/chunks.rs","byte_start":305160,"byte_end":305166,"line_start":24,"line_end":24,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3664},{"krate":0,"index":3665},{"krate":0,"index":12791},{"krate":0,"index":12792},{"krate":0,"index":12793},{"krate":0,"index":12794}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/chunks.rs","byte_start":305674,"byte_end":305680,"line_start":46,"line_end":46,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3668},{"krate":0,"index":3669},{"krate":0,"index":3670}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/chunks.rs","byte_start":307296,"byte_end":307302,"line_start":91,"line_end":91,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3673}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/chunks.rs","byte_start":307525,"byte_end":307531,"line_start":99,"line_end":99,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3677},{"krate":0,"index":12795},{"krate":0,"index":12796},{"krate":0,"index":12797},{"krate":0,"index":12798}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/ready_chunks.rs","byte_start":308274,"byte_end":308285,"line_start":23,"line_end":23,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3716},{"krate":0,"index":12843},{"krate":0,"index":12844},{"krate":0,"index":12845},{"krate":0,"index":12846}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/ready_chunks.rs","byte_start":308637,"byte_end":308648,"line_start":40,"line_end":40,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3719},{"krate":0,"index":3720},{"krate":0,"index":3721}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/ready_chunks.rs","byte_start":310817,"byte_end":310828,"line_start":99,"line_end":99,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3724}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/ready_chunks.rs","byte_start":311051,"byte_end":311062,"line_start":107,"line_end":107,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3728},{"krate":0,"index":12847},{"krate":0,"index":12848},{"krate":0,"index":12849},{"krate":0,"index":12850}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/scan.rs","byte_start":311826,"byte_end":311830,"line_start":28,"line_end":28,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3775}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/scan.rs","byte_start":312316,"byte_end":312320,"line_start":45,"line_end":45,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3782}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/scan.rs","byte_start":312484,"byte_end":312488,"line_start":52,"line_end":52,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3789},{"krate":0,"index":12916},{"krate":0,"index":12917},{"krate":0,"index":12918},{"krate":0,"index":12919}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/scan.rs","byte_start":312850,"byte_end":312854,"line_start":65,"line_end":65,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3796},{"krate":0,"index":3797},{"krate":0,"index":3798}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/scan.rs","byte_start":314081,"byte_end":314085,"line_start":108,"line_end":108,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3805}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/scan.rs","byte_start":314459,"byte_end":314463,"line_start":121,"line_end":121,"column_start":42,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3812},{"krate":0,"index":12920},{"krate":0,"index":12921},{"krate":0,"index":12922},{"krate":0,"index":12923}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/buffer_unordered.rs","byte_start":315266,"byte_end":315281,"line_start":26,"line_end":26,"column_start":25,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3858}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/buffer_unordered.rs","byte_start":315613,"byte_end":315628,"line_start":39,"line_end":39,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3861},{"krate":0,"index":12965},{"krate":0,"index":12966},{"krate":0,"index":12967},{"krate":0,"index":12968}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/buffer_unordered.rs","byte_start":316015,"byte_end":316030,"line_start":59,"line_end":59,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3864},{"krate":0,"index":3865},{"krate":0,"index":3866}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/buffer_unordered.rs","byte_start":317484,"byte_end":317499,"line_start":104,"line_end":104,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3869}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/buffer_unordered.rs","byte_start":317783,"byte_end":317798,"line_start":116,"line_end":116,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3873},{"krate":0,"index":12969},{"krate":0,"index":12970},{"krate":0,"index":12971},{"krate":0,"index":12972}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/buffered.rs","byte_start":318609,"byte_end":318617,"line_start":27,"line_end":27,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3918}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/buffered.rs","byte_start":318964,"byte_end":318972,"line_start":41,"line_end":41,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3921},{"krate":0,"index":13014},{"krate":0,"index":13015},{"krate":0,"index":13016},{"krate":0,"index":13017}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/buffered.rs","byte_start":319252,"byte_end":319260,"line_start":53,"line_end":53,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3924},{"krate":0,"index":3925},{"krate":0,"index":3926}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/buffered.rs","byte_start":320778,"byte_end":320786,"line_start":100,"line_end":100,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3930},{"krate":0,"index":13018},{"krate":0,"index":13019},{"krate":0,"index":13020},{"krate":0,"index":13021}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/for_each_concurrent.rs","byte_start":321597,"byte_end":321614,"line_start":23,"line_end":23,"column_start":33,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3975}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/for_each_concurrent.rs","byte_start":321960,"byte_end":321977,"line_start":37,"line_end":37,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3980}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/for_each_concurrent.rs","byte_start":322410,"byte_end":322427,"line_start":54,"line_end":54,"column_start":34,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3985}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/for_each_concurrent.rs","byte_start":322657,"byte_end":322674,"line_start":65,"line_end":65,"column_start":29,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3990},{"krate":0,"index":3991}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/split.rs","byte_start":324898,"byte_end":324909,"line_start":16,"line_end":16,"column_start":19,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/split.rs","byte_start":324932,"byte_end":324943,"line_start":18,"line_end":18,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4026}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/split.rs","byte_start":325376,"byte_end":325387,"line_start":30,"line_end":30,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4030},{"krate":0,"index":4031}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/split.rs","byte_start":325965,"byte_end":325974,"line_start":52,"line_end":52,"column_start":25,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/split.rs","byte_start":326022,"byte_end":326031,"line_start":54,"line_end":54,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4041}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/split.rs","byte_start":326495,"byte_end":326504,"line_start":63,"line_end":63,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4046},{"krate":0,"index":4047}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/split.rs","byte_start":327226,"byte_end":327235,"line_start":87,"line_end":87,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":4051},{"krate":0,"index":4052},{"krate":0,"index":4053},{"krate":0,"index":4054},{"krate":0,"index":4055}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/split.rs","byte_start":328842,"byte_end":328854,"line_start":131,"line_end":131,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4068}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/split.rs","byte_start":329030,"byte_end":329042,"line_start":137,"line_end":137,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4072}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/split.rs","byte_start":329291,"byte_end":329303,"line_start":144,"line_end":144,"column_start":53,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/catch_unwind.rs","byte_start":329848,"byte_end":329859,"line_start":19,"line_end":19,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4122},{"krate":0,"index":13139},{"krate":0,"index":13140},{"krate":0,"index":13141},{"krate":0,"index":13142}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/catch_unwind.rs","byte_start":330051,"byte_end":330062,"line_start":27,"line_end":27,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4125},{"krate":0,"index":4126},{"krate":0,"index":4129}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/catch_unwind.rs","byte_start":330914,"byte_end":330925,"line_start":57,"line_end":57,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":4132}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":181541,"byte_end":181542,"line_start":226,"line_end":226,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/and_then.rs","byte_start":370042,"byte_end":370049,"line_start":23,"line_end":23,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4467}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/and_then.rs","byte_start":370342,"byte_end":370349,"line_start":36,"line_end":36,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4472},{"krate":0,"index":13200},{"krate":0,"index":13201},{"krate":0,"index":13202},{"krate":0,"index":13203}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/and_then.rs","byte_start":370630,"byte_end":370637,"line_start":49,"line_end":49,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4477},{"krate":0,"index":4478},{"krate":0,"index":4479}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/and_then.rs","byte_start":371780,"byte_end":371787,"line_start":85,"line_end":85,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4484}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/and_then.rs","byte_start":372133,"byte_end":372140,"line_start":98,"line_end":98,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4490},{"krate":0,"index":13204},{"krate":0,"index":13205},{"krate":0,"index":13206},{"krate":0,"index":13207}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/into_stream.rs","byte_start":372705,"byte_end":372715,"line_start":18,"line_end":18,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4523},{"krate":0,"index":13478},{"krate":0,"index":13479},{"krate":0,"index":13480},{"krate":0,"index":13481}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/into_stream.rs","byte_start":372908,"byte_end":372918,"line_start":27,"line_end":27,"column_start":51,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":4526}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/into_stream.rs","byte_start":373039,"byte_end":373049,"line_start":33,"line_end":33,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4529},{"krate":0,"index":4530},{"krate":0,"index":4531}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/into_stream.rs","byte_start":373473,"byte_end":373483,"line_start":48,"line_end":48,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":4535},{"krate":0,"index":13482},{"krate":0,"index":13483},{"krate":0,"index":13484},{"krate":0,"index":13485}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/or_else.rs","byte_start":374148,"byte_end":374154,"line_start":23,"line_end":23,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4579}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/or_else.rs","byte_start":374446,"byte_end":374452,"line_start":36,"line_end":36,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4584},{"krate":0,"index":13699},{"krate":0,"index":13700},{"krate":0,"index":13701},{"krate":0,"index":13702}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/or_else.rs","byte_start":374730,"byte_end":374736,"line_start":49,"line_end":49,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4589},{"krate":0,"index":4590},{"krate":0,"index":4591}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/or_else.rs","byte_start":376013,"byte_end":376019,"line_start":89,"line_end":89,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4596}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/or_else.rs","byte_start":376362,"byte_end":376368,"line_start":102,"line_end":102,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4602},{"krate":0,"index":13703},{"krate":0,"index":13704},{"krate":0,"index":13705},{"krate":0,"index":13706}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_next.rs","byte_start":376923,"byte_end":376930,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_next.rs","byte_start":376984,"byte_end":376991,"line_start":16,"line_end":16,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4639}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_next.rs","byte_start":377154,"byte_end":377161,"line_start":22,"line_end":22,"column_start":68,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":4642}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_next.rs","byte_start":377303,"byte_end":377310,"line_start":28,"line_end":28,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":4645},{"krate":0,"index":4646}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_for_each.rs","byte_start":378086,"byte_end":378096,"line_start":21,"line_end":21,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4684}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_for_each.rs","byte_start":378392,"byte_end":378402,"line_start":34,"line_end":34,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4689}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_for_each.rs","byte_start":378647,"byte_end":378657,"line_start":45,"line_end":45,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4694},{"krate":0,"index":4695}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_filter.rs","byte_start":380056,"byte_end":380065,"line_start":27,"line_end":27,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4739}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_filter.rs","byte_start":380461,"byte_end":380470,"line_start":42,"line_end":42,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4744},{"krate":0,"index":13833},{"krate":0,"index":13834},{"krate":0,"index":13835},{"krate":0,"index":13836}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_filter.rs","byte_start":380713,"byte_end":380722,"line_start":53,"line_end":53,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4749}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_filter.rs","byte_start":380979,"byte_end":380988,"line_start":64,"line_end":64,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4754},{"krate":0,"index":4755},{"krate":0,"index":4756}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_filter.rs","byte_start":382377,"byte_end":382386,"line_start":105,"line_end":105,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":4763},{"krate":0,"index":13837},{"krate":0,"index":13838},{"krate":0,"index":13839},{"krate":0,"index":13840}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_filter_map.rs","byte_start":383129,"byte_end":383141,"line_start":24,"line_end":24,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4807}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_filter_map.rs","byte_start":383441,"byte_end":383453,"line_start":37,"line_end":37,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4812},{"krate":0,"index":13898},{"krate":0,"index":13899},{"krate":0,"index":13900},{"krate":0,"index":13901}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_filter_map.rs","byte_start":383650,"byte_end":383662,"line_start":45,"line_end":45,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4818}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_filter_map.rs","byte_start":383940,"byte_end":383952,"line_start":56,"line_end":56,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4824},{"krate":0,"index":4825},{"krate":0,"index":4826}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_filter_map.rs","byte_start":385452,"byte_end":385464,"line_start":99,"line_end":99,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":4832},{"krate":0,"index":13902},{"krate":0,"index":13903},{"krate":0,"index":13904},{"krate":0,"index":13905}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_flatten.rs","byte_start":386136,"byte_end":386146,"line_start":24,"line_end":24,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4868},{"krate":0,"index":13946},{"krate":0,"index":13947},{"krate":0,"index":13948},{"krate":0,"index":13949}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_flatten.rs","byte_start":386411,"byte_end":386421,"line_start":37,"line_end":37,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4871}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_flatten.rs","byte_start":386667,"byte_end":386677,"line_start":48,"line_end":48,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4874},{"krate":0,"index":4875}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_flatten.rs","byte_start":387596,"byte_end":387606,"line_start":77,"line_end":77,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4879},{"krate":0,"index":13950},{"krate":0,"index":13951},{"krate":0,"index":13952},{"krate":0,"index":13953}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_collect.rs","byte_start":388286,"byte_end":388296,"line_start":20,"line_end":20,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4920}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_collect.rs","byte_start":388436,"byte_end":388446,"line_start":26,"line_end":26,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4924}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_collect.rs","byte_start":388634,"byte_end":388644,"line_start":36,"line_end":36,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4928},{"krate":0,"index":4929}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_concat.rs","byte_start":389642,"byte_end":389651,"line_start":19,"line_end":19,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4958}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_concat.rs","byte_start":389870,"byte_end":389879,"line_start":29,"line_end":29,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4961},{"krate":0,"index":4962}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_chunks.rs","byte_start":391263,"byte_end":391272,"line_start":25,"line_end":25,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5018},{"krate":0,"index":5019},{"krate":0,"index":14087},{"krate":0,"index":14088},{"krate":0,"index":14089},{"krate":0,"index":14090}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_chunks.rs","byte_start":391767,"byte_end":391776,"line_start":44,"line_end":44,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5022},{"krate":0,"index":5023},{"krate":0,"index":5024}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_chunks.rs","byte_start":393724,"byte_end":393733,"line_start":95,"line_end":95,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":5027}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_chunks.rs","byte_start":393956,"byte_end":393965,"line_start":103,"line_end":103,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5031},{"krate":0,"index":14091},{"krate":0,"index":14092},{"krate":0,"index":14093},{"krate":0,"index":14094}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_chunks.rs","byte_start":394392,"byte_end":394406,"line_start":118,"line_end":118,"column_start":39,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5035}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_chunks.rs","byte_start":394551,"byte_end":394565,"line_start":124,"line_end":124,"column_start":43,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":5039}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_chunks.rs","byte_start":394752,"byte_end":394766,"line_start":131,"line_end":131,"column_start":61,"column_end":75},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_fold.rs","byte_start":395376,"byte_end":395383,"line_start":22,"line_end":22,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":5088}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_fold.rs","byte_start":395742,"byte_end":395749,"line_start":37,"line_end":37,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5094}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_fold.rs","byte_start":396029,"byte_end":396036,"line_start":48,"line_end":48,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":5100}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_fold.rs","byte_start":396290,"byte_end":396297,"line_start":59,"line_end":59,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5106},{"krate":0,"index":5107}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":400160,"byte_end":400169,"line_start":78,"line_end":78,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5149}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":400431,"byte_end":400440,"line_start":88,"line_end":88,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":5155},{"krate":0,"index":5156}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_skip_while.rs","byte_start":402186,"byte_end":402198,"line_start":26,"line_end":26,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5204}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_skip_while.rs","byte_start":402654,"byte_end":402666,"line_start":42,"line_end":42,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5209},{"krate":0,"index":14307},{"krate":0,"index":14308},{"krate":0,"index":14309},{"krate":0,"index":14310}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_skip_while.rs","byte_start":403006,"byte_end":403018,"line_start":55,"line_end":55,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5214},{"krate":0,"index":5215},{"krate":0,"index":5216}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_skip_while.rs","byte_start":404517,"byte_end":404529,"line_start":100,"line_end":100,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":5221}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_skip_while.rs","byte_start":404896,"byte_end":404908,"line_start":113,"line_end":113,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5228},{"krate":0,"index":14311},{"krate":0,"index":14312},{"krate":0,"index":14313},{"krate":0,"index":14314}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_take_while.rs","byte_start":405757,"byte_end":405769,"line_start":29,"line_end":29,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5272}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_take_while.rs","byte_start":406221,"byte_end":406233,"line_start":45,"line_end":45,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5277},{"krate":0,"index":14380},{"krate":0,"index":14381},{"krate":0,"index":14382},{"krate":0,"index":14383}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_take_while.rs","byte_start":406571,"byte_end":406583,"line_start":58,"line_end":58,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5282},{"krate":0,"index":5283},{"krate":0,"index":5284}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_take_while.rs","byte_start":408190,"byte_end":408202,"line_start":109,"line_end":109,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":5289}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_take_while.rs","byte_start":408589,"byte_end":408601,"line_start":122,"line_end":122,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5296},{"krate":0,"index":14384},{"krate":0,"index":14385},{"krate":0,"index":14386},{"krate":0,"index":14387}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_buffer_unordered.rs","byte_start":409490,"byte_end":409508,"line_start":26,"line_end":26,"column_start":10,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5349},{"krate":0,"index":14432},{"krate":0,"index":14433},{"krate":0,"index":14434},{"krate":0,"index":14435}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_buffer_unordered.rs","byte_start":409847,"byte_end":409865,"line_start":42,"line_end":42,"column_start":21,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5352},{"krate":0,"index":5353}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_buffer_unordered.rs","byte_start":411142,"byte_end":411160,"line_start":78,"line_end":78,"column_start":33,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":5358},{"krate":0,"index":14436},{"krate":0,"index":14437},{"krate":0,"index":14438},{"krate":0,"index":14439}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_buffered.rs","byte_start":412071,"byte_end":412082,"line_start":27,"line_end":27,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":5411},{"krate":0,"index":14484},{"krate":0,"index":14485},{"krate":0,"index":14486},{"krate":0,"index":14487}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_buffered.rs","byte_start":412419,"byte_end":412430,"line_start":43,"line_end":43,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5414},{"krate":0,"index":5415}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_buffered.rs","byte_start":413707,"byte_end":413718,"line_start":79,"line_end":79,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":5420},{"krate":0,"index":14488},{"krate":0,"index":14489},{"krate":0,"index":14490},{"krate":0,"index":14491}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":414588,"byte_end":414608,"line_start":25,"line_end":25,"column_start":33,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5468}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":414973,"byte_end":414993,"line_start":39,"line_end":39,"column_start":34,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":5473}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":415232,"byte_end":415252,"line_start":50,"line_end":50,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5478}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":415700,"byte_end":415720,"line_start":67,"line_end":67,"column_start":29,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":5483},{"krate":0,"index":5484}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":336325,"byte_end":336326,"line_start":154,"line_end":154,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":418484,"byte_end":418488,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":419110,"byte_end":419114,"line_start":36,"line_end":36,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5648},{"krate":0,"index":5649},{"krate":0,"index":5650}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":420305,"byte_end":420311,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":420338,"byte_end":420344,"line_start":36,"line_end":36,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5685},{"krate":0,"index":5686},{"krate":0,"index":5687}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":420652,"byte_end":420658,"line_start":51,"line_end":51,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5690}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":421255,"byte_end":421265,"line_start":17,"line_end":17,"column_start":36,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":421309,"byte_end":421319,"line_start":19,"line_end":19,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":5725},{"krate":0,"index":5726},{"krate":0,"index":5727}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":421633,"byte_end":421643,"line_start":31,"line_end":31,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":5731}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/empty.rs","byte_start":424163,"byte_end":424168,"line_start":21,"line_end":21,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/empty.rs","byte_start":424200,"byte_end":424205,"line_start":23,"line_end":23,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5772}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/empty.rs","byte_start":424290,"byte_end":424295,"line_start":29,"line_end":29,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5775},{"krate":0,"index":5776},{"krate":0,"index":5777}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/empty.rs","byte_start":424544,"byte_end":424549,"line_start":41,"line_end":41,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5780}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/once.rs","byte_start":425488,"byte_end":425492,"line_start":34,"line_end":34,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5822}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/once.rs","byte_start":425621,"byte_end":425625,"line_start":40,"line_end":40,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5825},{"krate":0,"index":5826},{"krate":0,"index":5827}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/once.rs","byte_start":426230,"byte_end":426234,"line_start":63,"line_end":63,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5830}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/pending.rs","byte_start":426893,"byte_end":426900,"line_start":21,"line_end":21,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/pending.rs","byte_start":426932,"byte_end":426939,"line_start":23,"line_end":23,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5868}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/pending.rs","byte_start":427024,"byte_end":427031,"line_start":29,"line_end":29,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5871},{"krate":0,"index":5872},{"krate":0,"index":5873}],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/pending.rs","byte_start":427276,"byte_end":427283,"line_start":41,"line_end":41,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5876}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":427670,"byte_end":427676,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":427707,"byte_end":427713,"line_start":17,"line_end":17,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5911}],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":428478,"byte_end":428484,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5918},{"krate":0,"index":5919}],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":429180,"byte_end":429193,"line_start":18,"line_end":18,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5947},{"krate":0,"index":5948},{"krate":0,"index":5949}],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":430106,"byte_end":430119,"line_start":47,"line_end":47,"column_start":40,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5952}],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":433006,"byte_end":433012,"line_start":61,"line_end":61,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":6003},{"krate":0,"index":6004},{"krate":0,"index":6005},{"krate":0,"index":6006}],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":434316,"byte_end":434322,"line_start":96,"line_end":96,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6010}],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":434501,"byte_end":434507,"line_start":106,"line_end":106,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6014},{"krate":0,"index":6015}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":435220,"byte_end":435228,"line_start":17,"line_end":17,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6059}],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":435525,"byte_end":435533,"line_start":31,"line_end":31,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6061}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":438560,"byte_end":438578,"line_start":130,"line_end":130,"column_start":29,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6072},{"krate":0,"index":6073},{"krate":0,"index":6074},{"krate":0,"index":6075}],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":440027,"byte_end":440045,"line_start":165,"line_end":165,"column_start":45,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":6081}],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":440325,"byte_end":440343,"line_start":176,"line_end":176,"column_start":40,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":6087},{"krate":0,"index":6088}],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":441455,"byte_end":441473,"line_start":216,"line_end":216,"column_start":44,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":6097}],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":444044,"byte_end":444050,"line_start":68,"line_end":68,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6153}],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":444290,"byte_end":444296,"line_start":78,"line_end":78,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":6159}],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":444576,"byte_end":444582,"line_start":92,"line_end":92,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":6165},{"krate":0,"index":6166}],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":446130,"byte_end":446142,"line_start":26,"line_end":26,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6230}],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":446247,"byte_end":446259,"line_start":32,"line_end":32,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":446290,"byte_end":446302,"line_start":34,"line_end":34,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6235}],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":446425,"byte_end":446437,"line_start":40,"line_end":40,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6238}],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":446618,"byte_end":446630,"line_start":47,"line_end":47,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6241},{"krate":0,"index":6242}],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":449212,"byte_end":449226,"line_start":102,"line_end":102,"column_start":27,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":449252,"byte_end":449266,"line_start":104,"line_end":104,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6254},{"krate":0,"index":6255},{"krate":0,"index":6256},{"krate":0,"index":6257}],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":450832,"byte_end":450846,"line_start":145,"line_end":145,"column_start":31,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":6260}],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":450939,"byte_end":450953,"line_start":151,"line_end":151,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":6263},{"krate":0,"index":6264},{"krate":0,"index":6265}],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":452115,"byte_end":452129,"line_start":186,"line_end":186,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":6268}],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":452295,"byte_end":452309,"line_start":192,"line_end":192,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":6271}],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":452589,"byte_end":452603,"line_start":205,"line_end":205,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":6276}],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":452773,"byte_end":452787,"line_start":211,"line_end":211,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":6279}],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/abort.rs","byte_start":480569,"byte_end":480580,"line_start":4,"line_end":4,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6384}],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":481939,"byte_end":481947,"line_start":39,"line_end":39,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":6403},{"krate":0,"index":6404},{"krate":0,"index":6405}],"docs":"","sig":null,"attributes":[]},{"id":393,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":483021,"byte_end":483029,"line_start":71,"line_end":71,"column_start":40,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":483066,"byte_end":483076,"line_start":73,"line_end":73,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6411},{"krate":0,"index":6412},{"krate":0,"index":6413}],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":483928,"byte_end":483938,"line_start":100,"line_end":100,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":483986,"byte_end":483993,"line_start":102,"line_end":102,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6419},{"krate":0,"index":6420},{"krate":0,"index":6421}],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":484256,"byte_end":484263,"line_start":114,"line_end":114,"column_start":40,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":484304,"byte_end":484314,"line_start":116,"line_end":116,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6427},{"krate":0,"index":6428},{"krate":0,"index":6429}],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":485183,"byte_end":485193,"line_start":143,"line_end":143,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":485241,"byte_end":485245,"line_start":145,"line_end":145,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":6435},{"krate":0,"index":6436},{"krate":0,"index":6437}],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":485504,"byte_end":485508,"line_start":157,"line_end":157,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":402,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":485677,"byte_end":485687,"line_start":161,"line_end":161,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":403,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":485732,"byte_end":485742,"line_start":162,"line_end":162,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":404,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":485788,"byte_end":485798,"line_start":164,"line_end":164,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":405,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":485843,"byte_end":485853,"line_start":165,"line_end":165,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":406,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":485907,"byte_end":485915,"line_start":167,"line_end":167,"column_start":41,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":407,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":485964,"byte_end":485972,"line_start":168,"line_end":168,"column_start":41,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":408,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/task.rs","byte_start":487457,"byte_end":487461,"line_start":41,"line_end":41,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/task.rs","byte_start":487496,"byte_end":487500,"line_start":42,"line_end":42,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/task.rs","byte_start":487532,"byte_end":487536,"line_start":44,"line_end":44,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6524}],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/task.rs","byte_start":488613,"byte_end":488617,"line_start":71,"line_end":71,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6527},{"krate":0,"index":6528}],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/task.rs","byte_start":489617,"byte_end":489621,"line_start":102,"line_end":102,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6531}],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":491071,"byte_end":491086,"line_start":29,"line_end":29,"column_start":11,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6587},{"krate":0,"index":6588},{"krate":0,"index":6589},{"krate":0,"index":6590}],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":493742,"byte_end":493757,"line_start":111,"line_end":111,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6593}],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":456577,"byte_end":456593,"line_start":88,"line_end":88,"column_start":33,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":456634,"byte_end":456650,"line_start":89,"line_end":89,"column_start":33,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":456679,"byte_end":456695,"line_start":90,"line_end":90,"column_start":21,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":456720,"byte_end":456736,"line_start":92,"line_end":92,"column_start":16,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6614}],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":456921,"byte_end":456937,"line_start":99,"line_end":99,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6616}],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":458644,"byte_end":458660,"line_start":131,"line_end":131,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":6619}],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":458734,"byte_end":458750,"line_start":137,"line_end":137,"column_start":11,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6622},{"krate":0,"index":6623},{"krate":0,"index":6624},{"krate":0,"index":6625},{"krate":0,"index":6626},{"krate":0,"index":6627},{"krate":0,"index":6628},{"krate":0,"index":6629},{"krate":0,"index":6630},{"krate":0,"index":6631},{"krate":0,"index":6632},{"krate":0,"index":6633},{"krate":0,"index":6634}],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":470281,"byte_end":470297,"line_start":410,"line_end":410,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":6637},{"krate":0,"index":6638},{"krate":0,"index":6647}],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":474719,"byte_end":474723,"line_start":508,"line_end":508,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6646}],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":476978,"byte_end":476994,"line_start":565,"line_end":565,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6650}],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":477132,"byte_end":477148,"line_start":571,"line_end":571,"column_start":11,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6653},{"krate":0,"index":6654}],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":477719,"byte_end":477735,"line_start":591,"line_end":591,"column_start":20,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6657}],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":479385,"byte_end":479401,"line_start":632,"line_end":632,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":6672},{"krate":0,"index":6673},{"krate":0,"index":6674}],"docs":"","sig":null,"attributes":[]},{"id":428,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":479871,"byte_end":479887,"line_start":646,"line_end":646,"column_start":33,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":6677}],"docs":"","sig":null,"attributes":[]},{"id":429,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":480163,"byte_end":480179,"line_start":659,"line_end":659,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":6682}],"docs":"","sig":null,"attributes":[]},{"id":430,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":480301,"byte_end":480317,"line_start":665,"line_end":665,"column_start":27,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":6685}],"docs":"","sig":null,"attributes":[]},{"id":431,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":495352,"byte_end":495361,"line_start":36,"line_end":36,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6742}],"docs":"","sig":null,"attributes":[]},{"id":432,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":495506,"byte_end":495515,"line_start":42,"line_end":42,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6745},{"krate":0,"index":6746},{"krate":0,"index":6747},{"krate":0,"index":6748},{"krate":0,"index":6749},{"krate":0,"index":6750},{"krate":0,"index":6751}],"docs":"","sig":null,"attributes":[]},{"id":433,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":496988,"byte_end":496997,"line_start":89,"line_end":89,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6754}],"docs":"","sig":null,"attributes":[]},{"id":434,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":497096,"byte_end":497105,"line_start":95,"line_end":95,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":6757},{"krate":0,"index":6758}],"docs":"","sig":null,"attributes":[]},{"id":435,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":497889,"byte_end":497898,"line_start":117,"line_end":117,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":6761}],"docs":"","sig":null,"attributes":[]},{"id":436,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":498916,"byte_end":498925,"line_start":149,"line_end":149,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":6766}],"docs":"","sig":null,"attributes":[]},{"id":437,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":499070,"byte_end":499079,"line_start":155,"line_end":155,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":6770}],"docs":"","sig":null,"attributes":[]},{"id":438,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":499262,"byte_end":499271,"line_start":163,"line_end":163,"column_start":43,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":6774},{"krate":0,"index":6775},{"krate":0,"index":6776}],"docs":"","sig":null,"attributes":[]},{"id":439,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":500354,"byte_end":500358,"line_start":202,"line_end":202,"column_start":43,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6792},{"krate":0,"index":6793},{"krate":0,"index":6794}],"docs":"","sig":null,"attributes":[]},{"id":440,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":500791,"byte_end":500795,"line_start":218,"line_end":218,"column_start":48,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":441,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":500850,"byte_end":500857,"line_start":220,"line_end":220,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":6800},{"krate":0,"index":6801},{"krate":0,"index":6802}],"docs":"","sig":null,"attributes":[]},{"id":442,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":501294,"byte_end":501301,"line_start":236,"line_end":236,"column_start":48,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":443,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":501352,"byte_end":501360,"line_start":238,"line_end":238,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6807},{"krate":0,"index":6808},{"krate":0,"index":6809}],"docs":"","sig":null,"attributes":[]},{"id":444,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":501788,"byte_end":501796,"line_start":254,"line_end":254,"column_start":48,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":445,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/close.rs","byte_start":514140,"byte_end":514145,"line_start":15,"line_end":15,"column_start":42,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":446,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/close.rs","byte_start":514339,"byte_end":514344,"line_start":20,"line_end":20,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":6925}],"docs":"","sig":null,"attributes":[]},{"id":447,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/close.rs","byte_start":514520,"byte_end":514525,"line_start":26,"line_end":26,"column_start":56,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":6929},{"krate":0,"index":6930}],"docs":"","sig":null,"attributes":[]},{"id":448,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/drain.rs","byte_start":515515,"byte_end":515520,"line_start":33,"line_end":33,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":449,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/drain.rs","byte_start":515548,"byte_end":515553,"line_start":35,"line_end":35,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6963},{"krate":0,"index":6964},{"krate":0,"index":6965},{"krate":0,"index":6966},{"krate":0,"index":6967}],"docs":"","sig":null,"attributes":[]},{"id":450,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/fanout.rs","byte_start":516714,"byte_end":516720,"line_start":21,"line_end":21,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":7005},{"krate":0,"index":7006},{"krate":0,"index":7007},{"krate":0,"index":7008},{"krate":0,"index":7009}],"docs":"","sig":null,"attributes":[]},{"id":451,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/fanout.rs","byte_start":517688,"byte_end":517694,"line_start":51,"line_end":51,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":7013}],"docs":"","sig":null,"attributes":[]},{"id":452,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/fanout.rs","byte_start":517906,"byte_end":517912,"line_start":57,"line_end":57,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":7018},{"krate":0,"index":7019},{"krate":0,"index":7020},{"krate":0,"index":7021},{"krate":0,"index":7022}],"docs":"","sig":null,"attributes":[]},{"id":453,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/feed.rs","byte_start":519991,"byte_end":519995,"line_start":16,"line_end":16,"column_start":42,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":454,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/feed.rs","byte_start":520062,"byte_end":520066,"line_start":18,"line_end":18,"column_start":49,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":7053},{"krate":0,"index":7054},{"krate":0,"index":7055}],"docs":"","sig":null,"attributes":[]},{"id":455,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/feed.rs","byte_start":520430,"byte_end":520434,"line_start":32,"line_end":32,"column_start":56,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":7059},{"krate":0,"index":7060}],"docs":"","sig":null,"attributes":[]},{"id":456,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/flush.rs","byte_start":521336,"byte_end":521341,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":457,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/flush.rs","byte_start":521692,"byte_end":521697,"line_start":24,"line_end":24,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":7091}],"docs":"","sig":null,"attributes":[]},{"id":458,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/flush.rs","byte_start":521873,"byte_end":521878,"line_start":30,"line_end":30,"column_start":56,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":7095},{"krate":0,"index":7096}],"docs":"","sig":null,"attributes":[]},{"id":459,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/err_into.rs","byte_start":522538,"byte_end":522549,"line_start":16,"line_end":16,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":7125},{"krate":0,"index":15135},{"krate":0,"index":15136},{"krate":0,"index":15137},{"krate":0,"index":15138}],"docs":"","sig":null,"attributes":[]},{"id":460,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/err_into.rs","byte_start":522806,"byte_end":522817,"line_start":28,"line_end":28,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":7130},{"krate":0,"index":15139},{"krate":0,"index":15140},{"krate":0,"index":15141},{"krate":0,"index":15142}],"docs":"","sig":null,"attributes":[]},{"id":461,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/err_into.rs","byte_start":523021,"byte_end":523032,"line_start":39,"line_end":39,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":7135},{"krate":0,"index":15143},{"krate":0,"index":15144}],"docs":"","sig":null,"attributes":[]},{"id":462,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/err_into.rs","byte_start":523194,"byte_end":523205,"line_start":49,"line_end":49,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":7140}],"docs":"","sig":null,"attributes":[]},{"id":463,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/map_err.rs","byte_start":523814,"byte_end":523824,"line_start":18,"line_end":18,"column_start":13,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":7171},{"krate":0,"index":15198},{"krate":0,"index":15199},{"krate":0,"index":15200},{"krate":0,"index":15201},{"krate":0,"index":7172}],"docs":"","sig":null,"attributes":[]},{"id":464,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/map_err.rs","byte_start":524127,"byte_end":524137,"line_start":30,"line_end":30,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":7178},{"krate":0,"index":7179},{"krate":0,"index":7181},{"krate":0,"index":7183},{"krate":0,"index":7185}],"docs":"","sig":null,"attributes":[]},{"id":465,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/map_err.rs","byte_start":525093,"byte_end":525103,"line_start":55,"line_end":55,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":7190},{"krate":0,"index":15202},{"krate":0,"index":15203}],"docs":"","sig":null,"attributes":[]},{"id":466,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/map_err.rs","byte_start":525209,"byte_end":525219,"line_start":61,"line_end":61,"column_start":41,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":7194}],"docs":"","sig":null,"attributes":[]},{"id":467,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/send.rs","byte_start":525770,"byte_end":525774,"line_start":16,"line_end":16,"column_start":42,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":468,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/send.rs","byte_start":525841,"byte_end":525845,"line_start":18,"line_end":18,"column_start":49,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":7228}],"docs":"","sig":null,"attributes":[]},{"id":469,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/send.rs","byte_start":526033,"byte_end":526037,"line_start":24,"line_end":24,"column_start":56,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":7232},{"krate":0,"index":7233}],"docs":"","sig":null,"attributes":[]},{"id":470,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/send_all.rs","byte_start":527243,"byte_end":527250,"line_start":23,"line_end":23,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7287}],"docs":"","sig":null,"attributes":[]},{"id":471,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/send_all.rs","byte_start":527689,"byte_end":527696,"line_start":39,"line_end":39,"column_start":24,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":472,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/send_all.rs","byte_start":527808,"byte_end":527815,"line_start":46,"line_end":46,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7297},{"krate":0,"index":7298}],"docs":"","sig":null,"attributes":[]},{"id":473,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/send_all.rs","byte_start":528591,"byte_end":528598,"line_start":71,"line_end":71,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":7304},{"krate":0,"index":7305}],"docs":"","sig":null,"attributes":[]},{"id":474,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/unfold.rs","byte_start":530897,"byte_end":530903,"line_start":47,"line_end":47,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":7351},{"krate":0,"index":7352},{"krate":0,"index":7353},{"krate":0,"index":7354},{"krate":0,"index":7355}],"docs":"","sig":null,"attributes":[]},{"id":475,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/with.rs","byte_start":532820,"byte_end":532824,"line_start":24,"line_end":24,"column_start":42,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":7401}],"docs":"","sig":null,"attributes":[]},{"id":476,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/with.rs","byte_start":533087,"byte_end":533091,"line_start":34,"line_end":34,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":7408}],"docs":"","sig":null,"attributes":[]},{"id":477,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/with.rs","byte_start":533428,"byte_end":533432,"line_start":49,"line_end":49,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":7416}],"docs":"","sig":null,"attributes":[]},{"id":478,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/with.rs","byte_start":533803,"byte_end":533807,"line_start":66,"line_end":66,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":7423},{"krate":0,"index":15349},{"krate":0,"index":15350}],"docs":"","sig":null,"attributes":[]},{"id":479,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/with.rs","byte_start":533991,"byte_end":533995,"line_start":77,"line_end":77,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":15351},{"krate":0,"index":15352},{"krate":0,"index":15353},{"krate":0,"index":15354},{"krate":0,"index":7431}],"docs":"","sig":null,"attributes":[]},{"id":480,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/with.rs","byte_start":534670,"byte_end":534674,"line_start":100,"line_end":100,"column_start":42,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":7439},{"krate":0,"index":7440},{"krate":0,"index":7441},{"krate":0,"index":7442},{"krate":0,"index":7443}],"docs":"","sig":null,"attributes":[]},{"id":481,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/with_flat_map.rs","byte_start":536393,"byte_end":536404,"line_start":24,"line_end":24,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":7486}],"docs":"","sig":null,"attributes":[]},{"id":482,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/with_flat_map.rs","byte_start":536777,"byte_end":536788,"line_start":39,"line_end":39,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":7493},{"krate":0,"index":15436},{"krate":0,"index":15437},{"krate":0,"index":15438},{"krate":0,"index":15439},{"krate":0,"index":7494}],"docs":"","sig":null,"attributes":[]},{"id":483,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/with_flat_map.rs","byte_start":538075,"byte_end":538086,"line_start":76,"line_end":76,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":7501},{"krate":0,"index":15440},{"krate":0,"index":15441}],"docs":"","sig":null,"attributes":[]},{"id":484,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/with_flat_map.rs","byte_start":538309,"byte_end":538320,"line_start":87,"line_end":87,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":7508}],"docs":"","sig":null,"attributes":[]},{"id":485,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/with_flat_map.rs","byte_start":538569,"byte_end":538580,"line_start":98,"line_end":98,"column_start":38,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":7515},{"krate":0,"index":7516},{"krate":0,"index":7517},{"krate":0,"index":7518},{"krate":0,"index":7519}],"docs":"","sig":null,"attributes":[]},{"id":486,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/buffer.rs","byte_start":540124,"byte_end":540130,"line_start":23,"line_end":23,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":7556},{"krate":0,"index":15495},{"krate":0,"index":15496},{"krate":0,"index":15497},{"krate":0,"index":15498},{"krate":0,"index":7557}],"docs":"","sig":null,"attributes":[]},{"id":487,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/buffer.rs","byte_start":540858,"byte_end":540864,"line_start":44,"line_end":44,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7561},{"krate":0,"index":7562},{"krate":0,"index":7563}],"docs":"","sig":null,"attributes":[]},{"id":488,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/buffer.rs","byte_start":541194,"byte_end":541200,"line_start":59,"line_end":59,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":7567}],"docs":"","sig":null,"attributes":[]},{"id":489,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/buffer.rs","byte_start":541374,"byte_end":541380,"line_start":68,"line_end":68,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":7571},{"krate":0,"index":7572},{"krate":0,"index":7573},{"krate":0,"index":7574},{"krate":0,"index":7575}],"docs":"","sig":null,"attributes":[]},{"id":490,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":503685,"byte_end":503686,"line_start":61,"line_end":61,"column_start":41,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":491,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":544114,"byte_end":544116,"line_start":16,"line_end":16,"column_start":31,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":492,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":544171,"byte_end":544173,"line_start":17,"line_end":17,"column_start":36,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":493,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":552012,"byte_end":552017,"line_start":26,"line_end":26,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":7790}],"docs":"","sig":null,"attributes":[]},{"id":494,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":552350,"byte_end":552355,"line_start":36,"line_end":36,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7793}],"docs":"","sig":null,"attributes":[]},{"id":495,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":552448,"byte_end":552453,"line_start":42,"line_end":42,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":7796}],"docs":"","sig":null,"attributes":[]},{"id":496,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":552586,"byte_end":552592,"line_start":53,"line_end":53,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":7804},{"krate":0,"index":7805}],"docs":"","sig":null,"attributes":[]},{"id":497,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":553038,"byte_end":553043,"line_start":72,"line_end":72,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":7810},{"krate":0,"index":7811}],"docs":"","sig":null,"attributes":[]},{"id":498,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":553614,"byte_end":553619,"line_start":97,"line_end":97,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":7814},{"krate":0,"index":7815},{"krate":0,"index":7816},{"krate":0,"index":7817},{"krate":0,"index":7818}],"docs":"","sig":null,"attributes":[]},{"id":499,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":556734,"byte_end":556749,"line_start":185,"line_end":185,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":7827}],"docs":"","sig":null,"attributes":[]},{"id":500,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":557180,"byte_end":557195,"line_start":198,"line_end":198,"column_start":33,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":7830}],"docs":"","sig":null,"attributes":[]},{"id":501,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":557312,"byte_end":557327,"line_start":204,"line_end":204,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":7834},{"krate":0,"index":7835}],"docs":"","sig":null,"attributes":[]},{"id":502,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":558556,"byte_end":558571,"line_start":240,"line_end":240,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":7838}],"docs":"","sig":null,"attributes":[]},{"id":503,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":559173,"byte_end":559183,"line_start":259,"line_end":259,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":7846}],"docs":"","sig":null,"attributes":[]},{"id":504,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":560195,"byte_end":560205,"line_start":289,"line_end":289,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":7851}],"docs":"","sig":null,"attributes":[]},{"id":505,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":560411,"byte_end":560421,"line_start":295,"line_end":295,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7854}],"docs":"","sig":null,"attributes":[]},{"id":506,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":560519,"byte_end":560529,"line_start":301,"line_end":301,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":7857},{"krate":0,"index":7858}],"docs":"","sig":null,"attributes":[]},{"id":507,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":560670,"byte_end":560680,"line_start":308,"line_end":308,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":7861}],"docs":"","sig":null,"attributes":[]},{"id":508,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":561131,"byte_end":561147,"line_start":322,"line_end":322,"column_start":32,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":7873}],"docs":"","sig":null,"attributes":[]},{"id":509,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":562277,"byte_end":562293,"line_start":353,"line_end":353,"column_start":56,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":7879}],"docs":"","sig":null,"attributes":[]},{"id":510,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":562558,"byte_end":562574,"line_start":362,"line_end":362,"column_start":37,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":7883}],"docs":"","sig":null,"attributes":[]},{"id":511,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":562686,"byte_end":562702,"line_start":368,"line_end":368,"column_start":38,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":7887},{"krate":0,"index":7888}],"docs":"","sig":null,"attributes":[]},{"id":512,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":562845,"byte_end":562861,"line_start":375,"line_end":375,"column_start":41,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":7892}],"docs":"","sig":null,"attributes":[]},{"id":513,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":563138,"byte_end":563143,"line_start":383,"line_end":383,"column_start":40,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":514,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":563189,"byte_end":563194,"line_start":384,"line_end":384,"column_start":40,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":515,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":563361,"byte_end":563376,"line_start":388,"line_end":388,"column_start":40,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":516,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":563480,"byte_end":563495,"line_start":390,"line_end":390,"column_start":33,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":517,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":563699,"byte_end":563709,"line_start":394,"line_end":394,"column_start":40,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":518,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":563759,"byte_end":563769,"line_start":395,"line_end":395,"column_start":40,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":519,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":563837,"byte_end":563853,"line_start":396,"line_end":396,"column_start":58,"column_end":74},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":520,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":563924,"byte_end":563940,"line_start":397,"line_end":397,"column_start":58,"column_end":74},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":521,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/bilock.rs","byte_start":565944,"byte_end":565949,"line_start":48,"line_end":48,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":522,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/bilock.rs","byte_start":565986,"byte_end":565991,"line_start":49,"line_end":49,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":523,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/bilock.rs","byte_start":566007,"byte_end":566013,"line_start":51,"line_end":51,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7969},{"krate":0,"index":7970},{"krate":0,"index":7972},{"krate":0,"index":7973}],"docs":"","sig":null,"attributes":[]},{"id":524,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/bilock.rs","byte_start":571633,"byte_end":571638,"line_start":184,"line_end":184,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":7976}],"docs":"","sig":null,"attributes":[]},{"id":525,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/bilock.rs","byte_start":571760,"byte_end":571765,"line_start":190,"line_end":190,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":7979}],"docs":"","sig":null,"attributes":[]},{"id":526,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/bilock.rs","byte_start":572093,"byte_end":572105,"line_start":201,"line_end":201,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7987}],"docs":"","sig":null,"attributes":[]},{"id":527,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/bilock.rs","byte_start":572269,"byte_end":572281,"line_start":207,"line_end":207,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":7990}],"docs":"","sig":null,"attributes":[]},{"id":528,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/bilock.rs","byte_start":572502,"byte_end":572514,"line_start":214,"line_end":214,"column_start":47,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":529,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/bilock.rs","byte_start":572896,"byte_end":572907,"line_start":227,"line_end":227,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":7995},{"krate":0,"index":7996}],"docs":"","sig":null,"attributes":[]},{"id":530,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/bilock.rs","byte_start":573070,"byte_end":573081,"line_start":234,"line_end":234,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":7999}],"docs":"","sig":null,"attributes":[]},{"id":531,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/bilock.rs","byte_start":573219,"byte_end":573230,"line_start":240,"line_end":240,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":8002}],"docs":"","sig":null,"attributes":[]},{"id":532,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/bilock.rs","byte_start":573582,"byte_end":573593,"line_start":249,"line_end":249,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":8005}],"docs":"","sig":null,"attributes":[]},{"id":533,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":574906,"byte_end":574915,"line_start":22,"line_end":22,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":8047},{"krate":0,"index":8048}],"docs":"","sig":null,"attributes":[]},{"id":534,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":577188,"byte_end":577199,"line_start":87,"line_end":87,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":8050}],"docs":"","sig":null,"attributes":[]},{"id":535,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":577982,"byte_end":577989,"line_start":112,"line_end":112,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":8052}],"docs":"","sig":null,"attributes":[]},{"id":536,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":578172,"byte_end":578179,"line_start":119,"line_end":119,"column_start":28,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":537,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":578192,"byte_end":578201,"line_start":121,"line_end":121,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":8056}],"docs":"","sig":null,"attributes":[]},{"id":538,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":579190,"byte_end":579199,"line_start":152,"line_end":152,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":8061},{"krate":0,"index":8062}],"docs":"","sig":null,"attributes":[]},{"id":539,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":579438,"byte_end":579447,"line_start":163,"line_end":163,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":8066},{"krate":0,"index":8067}],"docs":"","sig":null,"attributes":[]},{"id":540,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":579706,"byte_end":579717,"line_start":174,"line_end":174,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":8070}],"docs":"","sig":null,"attributes":[]},{"id":541,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":580389,"byte_end":580390,"line_start":9,"line_end":9,"column_start":30,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":8090},{"krate":0,"index":8091}],"docs":"","sig":null,"attributes":[]},{"id":542,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":580625,"byte_end":580626,"line_start":23,"line_end":23,"column_start":29,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":8099}],"docs":"","sig":null,"attributes":[]},{"id":543,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":580896,"byte_end":580897,"line_start":38,"line_end":38,"column_start":26,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":8107}],"docs":"","sig":null,"attributes":[]},{"id":544,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":581913,"byte_end":581917,"line_start":76,"line_end":76,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":8115}],"docs":"","sig":null,"attributes":[]},{"id":545,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":582011,"byte_end":582015,"line_start":82,"line_end":82,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":8119},{"krate":0,"index":8120}],"docs":"","sig":null,"attributes":[]},{"id":551,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":582274,"byte_end":582281,"line_start":94,"line_end":94,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":8125},{"krate":0,"index":8126}],"docs":"","sig":null,"attributes":[]},{"id":552,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":582504,"byte_end":582511,"line_start":104,"line_end":104,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":8131}],"docs":"","sig":null,"attributes":[]},{"id":553,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":582702,"byte_end":582709,"line_start":113,"line_end":113,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":8136}],"docs":"","sig":null,"attributes":[]},{"id":554,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":583014,"byte_end":583027,"line_start":129,"line_end":129,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":8142},{"krate":0,"index":8143}],"docs":"","sig":null,"attributes":[]},{"id":560,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":583444,"byte_end":583453,"line_start":144,"line_end":144,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":8148},{"krate":0,"index":8149}],"docs":"","sig":null,"attributes":[]},{"id":561,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":583737,"byte_end":583746,"line_start":155,"line_end":155,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":8154}],"docs":"","sig":null,"attributes":[]},{"id":562,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":584008,"byte_end":584017,"line_start":165,"line_end":165,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":8159}],"docs":"","sig":null,"attributes":[]},{"id":563,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":584339,"byte_end":584346,"line_start":181,"line_end":181,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":8166},{"krate":0,"index":8167}],"docs":"","sig":null,"attributes":[]},{"id":564,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":584565,"byte_end":584572,"line_start":190,"line_end":190,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":8173}],"docs":"","sig":null,"attributes":[]},{"id":565,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":584750,"byte_end":584757,"line_start":198,"line_end":198,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":8179}],"docs":"","sig":null,"attributes":[]},{"id":566,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":585058,"byte_end":585066,"line_start":213,"line_end":213,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":8187},{"krate":0,"index":8188}],"docs":"","sig":null,"attributes":[]},{"id":567,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":585289,"byte_end":585297,"line_start":222,"line_end":222,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":8194}],"docs":"","sig":null,"attributes":[]},{"id":568,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":585479,"byte_end":585487,"line_start":230,"line_end":230,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":8200}],"docs":"","sig":null,"attributes":[]},{"id":569,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":585797,"byte_end":585808,"line_start":245,"line_end":245,"column_start":49,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":8209},{"krate":0,"index":8210}],"docs":"","sig":null,"attributes":[]},{"id":570,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":586068,"byte_end":586079,"line_start":256,"line_end":256,"column_start":48,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":8216}],"docs":"","sig":null,"attributes":[]},{"id":571,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":586316,"byte_end":586327,"line_start":266,"line_end":266,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":8222}],"docs":"","sig":null,"attributes":[]},{"id":572,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":586694,"byte_end":586706,"line_start":283,"line_end":283,"column_start":49,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":8230},{"krate":0,"index":8231}],"docs":"","sig":null,"attributes":[]},{"id":573,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":586967,"byte_end":586979,"line_start":294,"line_end":294,"column_start":48,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":8237}],"docs":"","sig":null,"attributes":[]},{"id":574,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":587217,"byte_end":587229,"line_start":304,"line_end":304,"column_start":45,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":8243}],"docs":"","sig":null,"attributes":[]},{"id":575,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":587848,"byte_end":587862,"line_start":326,"line_end":326,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":8256},{"krate":0,"index":8257}],"docs":"","sig":null,"attributes":[]},{"id":576,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":588085,"byte_end":588099,"line_start":335,"line_end":335,"column_start":40,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":8263}],"docs":"","sig":null,"attributes":[]},{"id":577,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":588300,"byte_end":588314,"line_start":343,"line_end":343,"column_start":37,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":8269}],"docs":"","sig":null,"attributes":[]},{"id":578,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":588620,"byte_end":588626,"line_start":357,"line_end":357,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":8279}],"docs":"","sig":null,"attributes":[]},{"id":579,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":588719,"byte_end":588725,"line_start":362,"line_end":362,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":8283},{"krate":0,"index":8284}],"docs":"","sig":null,"attributes":[]},{"id":585,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/unfold_state.rs","byte_start":589330,"byte_end":589341,"line_start":22,"line_end":22,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":8295},{"krate":0,"index":8296}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":10623,"byte_end":10629,"line_start":294,"line_end":294,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":165}},{"kind":"Mod","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":10727,"byte_end":10733,"line_start":298,"line_end":298,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1977}},{"kind":"Mod","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":173744,"byte_end":173761,"line_start":112,"line_end":112,"column_start":9,"column_end":26},"ref_id":{"krate":0,"index":6284}},{"kind":"Mod","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":173960,"byte_end":173970,"line_start":120,"line_end":120,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":6690}},{"kind":"Mod","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":10904,"byte_end":10908,"line_start":304,"line_end":304,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":6867}},{"kind":"Mod","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":11000,"byte_end":11004,"line_start":309,"line_end":309,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":7627}},{"kind":"Mod","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":11015,"byte_end":11020,"line_start":311,"line_end":311,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":7726}},{"kind":"Mod","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":11462,"byte_end":11466,"line_start":330,"line_end":330,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":7728}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/async_await/poll.rs","byte_start":14228,"byte_end":14236,"line_start":34,"line_end":34,"column_start":36,"column_end":44},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":45},"to":{"krate":2,"index":12620}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/async_await/pending.rs","byte_start":15404,"byte_end":15415,"line_start":33,"line_end":33,"column_start":17,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":69},"to":{"krate":2,"index":12620}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/flatten.rs","byte_start":59225,"byte_end":59232,"line_start":20,"line_end":20,"column_start":18,"column_end":25},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":8305},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/flatten.rs","byte_start":59362,"byte_end":59369,"line_start":26,"line_end":26,"column_start":27,"column_end":34},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":8305},"to":{"krate":18,"index":27}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/flatten.rs","byte_start":59594,"byte_end":59601,"line_start":39,"line_end":39,"column_start":22,"column_end":29},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":8305},"to":{"krate":2,"index":12620}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/flatten.rs","byte_start":60375,"byte_end":60382,"line_start":64,"line_end":64,"column_start":27,"column_end":34},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":8305},"to":{"krate":18,"index":110}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/flatten.rs","byte_start":60607,"byte_end":60614,"line_start":77,"line_end":77,"column_start":22,"column_end":29},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":8305},"to":{"krate":18,"index":96}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/flatten.rs","byte_start":61467,"byte_end":61474,"line_start":105,"line_end":105,"column_start":32,"column_end":39},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":8305},"to":{"krate":22,"index":17}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":63628,"byte_end":63632,"line_start":17,"line_end":17,"column_start":11,"column_end":15},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":8352},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":63739,"byte_end":63743,"line_start":23,"line_end":23,"column_start":19,"column_end":23},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":8352},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":65472,"byte_end":65476,"line_start":74,"line_end":74,"column_start":35,"column_end":39},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":8352},"to":{"krate":18,"index":27}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":65589,"byte_end":65593,"line_start":80,"line_end":80,"column_start":30,"column_end":34},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":8352},"to":{"krate":2,"index":12620}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/map.rs","byte_start":66571,"byte_end":66574,"line_start":25,"line_end":25,"column_start":14,"column_end":17},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":8388},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/map.rs","byte_start":66743,"byte_end":66746,"line_start":32,"line_end":32,"column_start":33,"column_end":36},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":8388},"to":{"krate":18,"index":27}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/map.rs","byte_start":67008,"byte_end":67011,"line_start":45,"line_end":45,"column_start":28,"column_end":31},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":8388},"to":{"krate":2,"index":12620}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/catch_unwind.rs","byte_start":68217,"byte_end":68228,"line_start":19,"line_end":19,"column_start":11,"column_end":22},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":8948},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/catch_unwind.rs","byte_start":68371,"byte_end":68382,"line_start":28,"line_end":28,"column_start":22,"column_end":33},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":8948},"to":{"krate":2,"index":12620}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":69609,"byte_end":69619,"line_start":32,"line_end":32,"column_start":29,"column_end":39},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":507},"to":{"krate":2,"index":2625}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":69820,"byte_end":69826,"line_start":40,"line_end":40,"column_start":29,"column_end":35},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":496},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":69869,"byte_end":69875,"line_start":42,"line_end":42,"column_start":34,"column_end":40},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":496},"to":{"krate":2,"index":9352}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":70133,"byte_end":70138,"line_start":51,"line_end":51,"column_start":34,"column_end":39},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":500},"to":{"krate":2,"index":9352}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":70292,"byte_end":70302,"line_start":57,"line_end":57,"column_start":34,"column_end":44},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":507},"to":{"krate":2,"index":9352}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":70534,"byte_end":70539,"line_start":68,"line_end":68,"column_start":27,"column_end":32},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":500},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":70636,"byte_end":70641,"line_start":75,"line_end":75,"column_start":27,"column_end":32},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":500},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":70885,"byte_end":70891,"line_start":89,"line_end":89,"column_start":19,"column_end":25},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":496},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":71315,"byte_end":71321,"line_start":103,"line_end":103,"column_start":11,"column_end":17},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":496},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":73387,"byte_end":73392,"line_start":160,"line_end":160,"column_start":11,"column_end":16},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":500},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":75088,"byte_end":75094,"line_start":209,"line_end":209,"column_start":27,"column_end":33},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":496},"to":{"krate":18,"index":27}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":75246,"byte_end":75252,"line_start":219,"line_end":219,"column_start":22,"column_end":28},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":496},"to":{"krate":2,"index":12620}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":76841,"byte_end":76846,"line_start":267,"line_end":267,"column_start":23,"column_end":28},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":566},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":78553,"byte_end":78559,"line_start":324,"line_end":324,"column_start":21,"column_end":27},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":496},"to":{"krate":2,"index":2625}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":78718,"byte_end":78724,"line_start":333,"line_end":333,"column_start":20,"column_end":26},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":496},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":79152,"byte_end":79160,"line_start":350,"line_end":350,"column_start":18,"column_end":26},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":504},"to":{"krate":21,"index":94}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":79519,"byte_end":79529,"line_start":363,"line_end":363,"column_start":19,"column_end":29},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":507},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":42376,"byte_end":42377,"line_start":119,"line_end":119,"column_start":31,"column_end":32},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":594},"to":{"krate":0,"index":595}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":42508,"byte_end":42514,"line_start":123,"line_end":123,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":12620},"to":{"krate":0,"index":595}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/into_future.rs","byte_start":101955,"byte_end":101965,"line_start":16,"line_end":16,"column_start":11,"column_end":21},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":8984},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/into_future.rs","byte_start":102116,"byte_end":102126,"line_start":23,"line_end":23,"column_start":52,"column_end":62},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":8984},"to":{"krate":18,"index":27}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/into_future.rs","byte_start":102249,"byte_end":102259,"line_start":29,"line_end":29,"column_start":33,"column_end":43},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":8984},"to":{"krate":2,"index":12620}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten.rs","byte_start":102968,"byte_end":102978,"line_start":20,"line_end":20,"column_start":18,"column_end":28},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":9020},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten.rs","byte_start":103108,"byte_end":103118,"line_start":26,"line_end":26,"column_start":27,"column_end":37},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":9020},"to":{"krate":18,"index":27}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten.rs","byte_start":103361,"byte_end":103371,"line_start":39,"line_end":39,"column_start":22,"column_end":32},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":9020},"to":{"krate":2,"index":12620}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten.rs","byte_start":104324,"byte_end":104334,"line_start":67,"line_end":67,"column_start":27,"column_end":37},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":9020},"to":{"krate":18,"index":110}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten.rs","byte_start":104577,"byte_end":104587,"line_start":80,"line_end":80,"column_start":22,"column_end":32},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":9020},"to":{"krate":18,"index":96}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten.rs","byte_start":105624,"byte_end":105634,"line_start":111,"line_end":111,"column_start":32,"column_end":42},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":9020},"to":{"krate":22,"index":17}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten_err.rs","byte_start":107911,"byte_end":107924,"line_start":17,"line_end":17,"column_start":18,"column_end":31},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":9067},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten_err.rs","byte_start":108054,"byte_end":108067,"line_start":23,"line_end":23,"column_start":27,"column_end":40},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":9067},"to":{"krate":18,"index":27}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten_err.rs","byte_start":108310,"byte_end":108323,"line_start":36,"line_end":36,"column_start":22,"column_end":35},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":9067},"to":{"krate":2,"index":12620}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":84501,"byte_end":84504,"line_start":134,"line_end":134,"column_start":48,"column_end":51},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":887},"to":{"krate":0,"index":888}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":84587,"byte_end":84596,"line_start":137,"line_end":137,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":18,"index":44},"to":{"krate":0,"index":888}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":109632,"byte_end":109636,"line_start":14,"line_end":14,"column_start":19,"column_end":23},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":10013},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":110232,"byte_end":110236,"line_start":42,"line_end":42,"column_start":28,"column_end":32},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":10013},"to":{"krate":18,"index":27}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":110380,"byte_end":110384,"line_start":51,"line_end":51,"column_start":23,"column_end":27},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":10013},"to":{"krate":2,"index":12620}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":110987,"byte_end":110994,"line_start":14,"line_end":14,"column_start":25,"column_end":32},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":10019},"to":{"krate":18,"index":27}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":111555,"byte_end":111562,"line_start":40,"line_end":40,"column_start":20,"column_end":27},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":10019},"to":{"krate":2,"index":12620}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":111707,"byte_end":111714,"line_start":48,"line_end":48,"column_start":19,"column_end":26},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":10019},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":111740,"byte_end":111747,"line_start":50,"line_end":50,"column_start":19,"column_end":26},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":10019},"to":{"krate":2,"index":2625}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":112501,"byte_end":112510,"line_start":24,"line_end":24,"column_start":37,"column_end":46},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":10025},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":113113,"byte_end":113122,"line_start":47,"line_end":47,"column_start":19,"column_end":28},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":10025},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":114220,"byte_end":114229,"line_start":79,"line_end":79,"column_start":35,"column_end":44},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":10025},"to":{"krate":18,"index":27}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":114430,"byte_end":114439,"line_start":88,"line_end":88,"column_start":30,"column_end":39},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":10025},"to":{"krate":2,"index":12620}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":115759,"byte_end":115771,"line_start":25,"line_end":25,"column_start":40,"column_end":52},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":10038},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":115997,"byte_end":116009,"line_start":32,"line_end":32,"column_start":22,"column_end":34},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":10038},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":117122,"byte_end":117134,"line_start":64,"line_end":64,"column_start":38,"column_end":50},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":10038},"to":{"krate":18,"index":27}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":117338,"byte_end":117350,"line_start":73,"line_end":73,"column_start":33,"column_end":45},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":10038},"to":{"krate":2,"index":12620}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/option.rs","byte_start":119000,"byte_end":119012,"line_start":34,"line_end":34,"column_start":21,"column_end":33},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":10051},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/option.rs","byte_start":119110,"byte_end":119122,"line_start":40,"line_end":40,"column_start":28,"column_end":40},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":10051},"to":{"krate":2,"index":12620}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/option.rs","byte_start":119436,"byte_end":119448,"line_start":51,"line_end":51,"column_start":38,"column_end":50},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":10051},"to":{"krate":18,"index":27}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/option.rs","byte_start":119635,"byte_end":119647,"line_start":60,"line_end":60,"column_start":29,"column_end":41},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":10051},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":120085,"byte_end":120091,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1212},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":120785,"byte_end":120791,"line_start":43,"line_end":43,"column_start":24,"column_end":30},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1212},"to":{"krate":2,"index":9352}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":120933,"byte_end":120939,"line_start":49,"line_end":49,"column_start":23,"column_end":29},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1212},"to":{"krate":2,"index":12620}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":121667,"byte_end":121680,"line_start":19,"line_end":19,"column_start":23,"column_end":36},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":10090},"to":{"krate":2,"index":12620}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":122246,"byte_end":122259,"line_start":40,"line_end":40,"column_start":33,"column_end":46},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":10090},"to":{"krate":18,"index":27}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":123279,"byte_end":123292,"line_start":70,"line_end":70,"column_start":23,"column_end":36},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":10090},"to":{"krate":18,"index":96}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":125464,"byte_end":125469,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":10129},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":125648,"byte_end":125653,"line_start":19,"line_end":19,"column_start":19,"column_end":24},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":10129},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":125685,"byte_end":125690,"line_start":21,"line_end":21,"column_start":25,"column_end":30},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":10129},"to":{"krate":18,"index":27}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":125787,"byte_end":125792,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":10129},"to":{"krate":2,"index":12620}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":133779,"byte_end":133786,"line_start":50,"line_end":50,"column_start":24,"column_end":31},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1467},"to":{"krate":2,"index":9352}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":136547,"byte_end":136554,"line_start":131,"line_end":131,"column_start":20,"column_end":27},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1467},"to":{"krate":2,"index":12620}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":137542,"byte_end":137549,"line_start":163,"line_end":163,"column_start":37,"column_end":44},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1467},"to":{"krate":2,"index":7423}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":138045,"byte_end":138051,"line_start":14,"line_end":14,"column_start":36,"column_end":42},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":10483},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":140487,"byte_end":140493,"line_start":94,"line_end":94,"column_start":23,"column_end":29},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":10483},"to":{"krate":2,"index":12620}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":141197,"byte_end":141203,"line_start":116,"line_end":116,"column_start":28,"column_end":34},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":10483},"to":{"krate":18,"index":27}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_all.rs","byte_start":141766,"byte_end":141775,"line_start":17,"line_end":17,"column_start":28,"column_end":37},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":10491},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_all.rs","byte_start":142782,"byte_end":142791,"line_start":44,"line_end":44,"column_start":11,"column_end":20},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":10491},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_all.rs","byte_start":142974,"byte_end":142983,"line_start":51,"line_end":51,"column_start":38,"column_end":47},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":10491},"to":{"krate":2,"index":12620}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_all.rs","byte_start":143653,"byte_end":143662,"line_start":70,"line_end":70,"column_start":49,"column_end":58},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":10491},"to":{"krate":2,"index":7423}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":152270,"byte_end":152280,"line_start":37,"line_end":37,"column_start":24,"column_end":34},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1730},"to":{"krate":2,"index":9352}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":154110,"byte_end":154120,"line_start":97,"line_end":97,"column_start":20,"column_end":30},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1730},"to":{"krate":2,"index":12620}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":155268,"byte_end":155278,"line_start":133,"line_end":133,"column_start":40,"column_end":50},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1730},"to":{"krate":2,"index":7423}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":155760,"byte_end":155769,"line_start":13,"line_end":13,"column_start":36,"column_end":45},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":10819},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":157608,"byte_end":157617,"line_start":61,"line_end":61,"column_start":37,"column_end":46},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":10819},"to":{"krate":2,"index":12620}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_ok.rs","byte_start":158979,"byte_end":158987,"line_start":17,"line_end":17,"column_start":28,"column_end":36},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":10827},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_ok.rs","byte_start":160065,"byte_end":160073,"line_start":45,"line_end":45,"column_start":41,"column_end":49},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":10827},"to":{"krate":2,"index":12620}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_ok.rs","byte_start":161504,"byte_end":161512,"line_start":81,"line_end":81,"column_start":52,"column_end":60},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":10827},"to":{"krate":2,"index":7423}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":162491,"byte_end":162497,"line_start":35,"line_end":35,"column_start":12,"column_end":18},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":10833},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":162836,"byte_end":162842,"line_start":46,"line_end":46,"column_start":15,"column_end":21},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":10833},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":163227,"byte_end":163233,"line_start":58,"line_end":58,"column_start":15,"column_end":21},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":10833},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":163614,"byte_end":163620,"line_start":70,"line_end":70,"column_start":9,"column_end":15},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":10833},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":163861,"byte_end":163867,"line_start":80,"line_end":80,"column_start":23,"column_end":29},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":10833},"to":{"krate":2,"index":12620}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":164206,"byte_end":164212,"line_start":95,"line_end":95,"column_start":28,"column_end":34},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":10833},"to":{"krate":18,"index":27}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":164488,"byte_end":164494,"line_start":108,"line_end":108,"column_start":23,"column_end":29},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":10833},"to":{"krate":18,"index":96}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":165029,"byte_end":165035,"line_start":130,"line_end":130,"column_start":28,"column_end":34},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":10833},"to":{"krate":18,"index":110}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":165342,"byte_end":165348,"line_start":144,"line_end":144,"column_start":33,"column_end":39},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":10833},"to":{"krate":22,"index":17}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/chain.rs","byte_start":228631,"byte_end":228636,"line_start":20,"line_end":20,"column_start":16,"column_end":21},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":10850},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/chain.rs","byte_start":228862,"byte_end":228867,"line_start":30,"line_end":30,"column_start":32,"column_end":37},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":10850},"to":{"krate":18,"index":110}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/chain.rs","byte_start":229076,"byte_end":229081,"line_start":40,"line_end":40,"column_start":27,"column_end":32},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":10850},"to":{"krate":18,"index":96}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/collect.rs","byte_start":230677,"byte_end":230684,"line_start":20,"line_end":20,"column_start":30,"column_end":37},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":10899},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/collect.rs","byte_start":230949,"byte_end":230956,"line_start":30,"line_end":30,"column_start":29,"column_end":36},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":10899},"to":{"krate":18,"index":27}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/collect.rs","byte_start":231134,"byte_end":231141,"line_start":40,"line_end":40,"column_start":24,"column_end":31},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":10899},"to":{"krate":2,"index":12620}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/unzip.rs","byte_start":232167,"byte_end":232172,"line_start":21,"line_end":21,"column_start":50,"column_end":55},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":10948},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/unzip.rs","byte_start":232566,"byte_end":232571,"line_start":32,"line_end":32,"column_start":46,"column_end":51},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":10948},"to":{"krate":18,"index":27}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/unzip.rs","byte_start":232821,"byte_end":232826,"line_start":43,"line_end":43,"column_start":41,"column_end":46},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":10948},"to":{"krate":2,"index":12620}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/concat.rs","byte_start":233951,"byte_end":233957,"line_start":19,"line_end":19,"column_start":10,"column_end":16},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":11010},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/concat.rs","byte_start":234177,"byte_end":234183,"line_start":29,"line_end":29,"column_start":21,"column_end":27},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":11010},"to":{"krate":2,"index":12620}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/concat.rs","byte_start":234891,"byte_end":234897,"line_start":54,"line_end":54,"column_start":26,"column_end":32},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":11010},"to":{"krate":18,"index":27}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/count.rs","byte_start":235623,"byte_end":235628,"line_start":19,"line_end":19,"column_start":25,"column_end":30},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":11050},"to":{"krate":2,"index":9352}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/count.rs","byte_start":235849,"byte_end":235854,"line_start":28,"line_end":28,"column_start":18,"column_end":23},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":11050},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/count.rs","byte_start":235986,"byte_end":235991,"line_start":34,"line_end":34,"column_start":39,"column_end":44},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":11050},"to":{"krate":18,"index":27}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/count.rs","byte_start":236109,"byte_end":236114,"line_start":40,"line_end":40,"column_start":29,"column_end":34},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":11050},"to":{"krate":2,"index":12620}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/cycle.rs","byte_start":236920,"byte_end":236925,"line_start":19,"line_end":19,"column_start":10,"column_end":15},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":11087},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/cycle.rs","byte_start":237081,"byte_end":237086,"line_start":28,"line_end":28,"column_start":21,"column_end":26},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":11087},"to":{"krate":18,"index":96}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/cycle.rs","byte_start":237835,"byte_end":237840,"line_start":56,"line_end":56,"column_start":26,"column_end":31},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":11087},"to":{"krate":18,"index":110}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/enumerate.rs","byte_start":238588,"byte_end":238597,"line_start":20,"line_end":20,"column_start":18,"column_end":27},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":11127},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/enumerate.rs","byte_start":238783,"byte_end":238792,"line_start":28,"line_end":28,"column_start":48,"column_end":57},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":11127},"to":{"krate":18,"index":110}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/enumerate.rs","byte_start":238910,"byte_end":238919,"line_start":34,"line_end":34,"column_start":29,"column_end":38},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":11127},"to":{"krate":18,"index":96}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/enumerate.rs","byte_start":239572,"byte_end":239581,"line_start":57,"line_end":57,"column_start":30,"column_end":39},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":11127},"to":{"krate":22,"index":17}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/filter.rs","byte_start":240360,"byte_end":240366,"line_start":27,"line_end":27,"column_start":33,"column_end":39},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":11175},"to":{"krate":2,"index":9352}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/filter.rs","byte_start":240839,"byte_end":240845,"line_start":43,"line_end":43,"column_start":18,"column_end":24},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":11175},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/filter.rs","byte_start":241168,"byte_end":241174,"line_start":56,"line_end":56,"column_start":34,"column_end":40},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":11175},"to":{"krate":18,"index":110}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/filter.rs","byte_start":241511,"byte_end":241517,"line_start":68,"line_end":68,"column_start":29,"column_end":35},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":11175},"to":{"krate":18,"index":96}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/filter.rs","byte_start":242896,"byte_end":242902,"line_start":108,"line_end":108,"column_start":38,"column_end":44},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":11175},"to":{"krate":22,"index":17}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/filter_map.rs","byte_start":243689,"byte_end":243698,"line_start":24,"line_end":24,"column_start":33,"column_end":42},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":11244},"to":{"krate":2,"index":9352}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/filter_map.rs","byte_start":243995,"byte_end":244004,"line_start":37,"line_end":37,"column_start":18,"column_end":27},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":11244},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/filter_map.rs","byte_start":244271,"byte_end":244280,"line_start":50,"line_end":50,"column_start":37,"column_end":46},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":11244},"to":{"krate":18,"index":110}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/filter_map.rs","byte_start":244547,"byte_end":244556,"line_start":61,"line_end":61,"column_start":32,"column_end":41},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":11244},"to":{"krate":18,"index":96}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/filter_map.rs","byte_start":245974,"byte_end":245983,"line_start":102,"line_end":102,"column_start":38,"column_end":47},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":11244},"to":{"krate":22,"index":17}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/flatten.rs","byte_start":246658,"byte_end":246665,"line_start":21,"line_end":21,"column_start":13,"column_end":20},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":11309},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/flatten.rs","byte_start":246834,"byte_end":246841,"line_start":29,"line_end":29,"column_start":26,"column_end":33},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":11309},"to":{"krate":18,"index":110}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/flatten.rs","byte_start":247033,"byte_end":247040,"line_start":39,"line_end":39,"column_start":21,"column_end":28},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":11309},"to":{"krate":18,"index":96}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/flatten.rs","byte_start":247862,"byte_end":247869,"line_start":66,"line_end":66,"column_start":30,"column_end":37},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":11309},"to":{"krate":22,"index":17}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fold.rs","byte_start":248554,"byte_end":248558,"line_start":22,"line_end":22,"column_start":36,"column_end":40},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":11429},"to":{"krate":2,"index":9352}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fold.rs","byte_start":248914,"byte_end":248918,"line_start":37,"line_end":37,"column_start":21,"column_end":25},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":11429},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fold.rs","byte_start":249179,"byte_end":249183,"line_start":48,"line_end":48,"column_start":37,"column_end":41},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":11429},"to":{"krate":18,"index":27}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fold.rs","byte_start":249418,"byte_end":249422,"line_start":59,"line_end":59,"column_start":32,"column_end":36},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":11429},"to":{"krate":2,"index":12620}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/any.rs","byte_start":251011,"byte_end":251014,"line_start":22,"line_end":22,"column_start":33,"column_end":36},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":11498},"to":{"krate":2,"index":9352}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/any.rs","byte_start":251344,"byte_end":251347,"line_start":36,"line_end":36,"column_start":18,"column_end":21},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":11498},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/any.rs","byte_start":251600,"byte_end":251603,"line_start":47,"line_end":47,"column_start":34,"column_end":37},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":11498},"to":{"krate":18,"index":27}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/any.rs","byte_start":251832,"byte_end":251835,"line_start":58,"line_end":58,"column_start":29,"column_end":32},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":11498},"to":{"krate":2,"index":12620}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/all.rs","byte_start":253587,"byte_end":253590,"line_start":22,"line_end":22,"column_start":33,"column_end":36},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":11559},"to":{"krate":2,"index":9352}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/all.rs","byte_start":253920,"byte_end":253923,"line_start":36,"line_end":36,"column_start":18,"column_end":21},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":11559},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/all.rs","byte_start":254175,"byte_end":254178,"line_start":47,"line_end":47,"column_start":34,"column_end":37},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":11559},"to":{"krate":18,"index":27}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/all.rs","byte_start":254407,"byte_end":254410,"line_start":58,"line_end":58,"column_start":29,"column_end":32},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":11559},"to":{"krate":2,"index":12620}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/forward.rs","byte_start":256246,"byte_end":256253,"line_start":24,"line_end":24,"column_start":20,"column_end":27},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":11620},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/forward.rs","byte_start":256453,"byte_end":256460,"line_start":30,"line_end":30,"column_start":39,"column_end":46},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":11620},"to":{"krate":18,"index":27}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/forward.rs","byte_start":256662,"byte_end":256669,"line_start":40,"line_end":40,"column_start":34,"column_end":41},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":11620},"to":{"krate":2,"index":12620}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/for_each.rs","byte_start":258474,"byte_end":258481,"line_start":21,"line_end":21,"column_start":33,"column_end":40},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":11743},"to":{"krate":2,"index":9352}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/for_each.rs","byte_start":258774,"byte_end":258781,"line_start":34,"line_end":34,"column_start":18,"column_end":25},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":11743},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/for_each.rs","byte_start":259012,"byte_end":259019,"line_start":45,"line_end":45,"column_start":34,"column_end":41},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":11743},"to":{"krate":18,"index":27}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/for_each.rs","byte_start":259258,"byte_end":259265,"line_start":56,"line_end":56,"column_start":29,"column_end":36},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":11743},"to":{"krate":2,"index":12620}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fuse.rs","byte_start":260366,"byte_end":260370,"line_start":20,"line_end":20,"column_start":10,"column_end":14},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":11800},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fuse.rs","byte_start":260867,"byte_end":260871,"line_start":37,"line_end":37,"column_start":33,"column_end":37},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":11800},"to":{"krate":18,"index":110}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fuse.rs","byte_start":260969,"byte_end":260973,"line_start":43,"line_end":43,"column_start":28,"column_end":32},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":11800},"to":{"krate":18,"index":96}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fuse.rs","byte_start":261659,"byte_end":261663,"line_start":71,"line_end":71,"column_start":51,"column_end":55},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":11800},"to":{"krate":22,"index":17}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":262175,"byte_end":262187,"line_start":15,"line_end":15,"column_start":26,"column_end":38},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":11848},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":264677,"byte_end":264689,"line_start":73,"line_end":73,"column_start":42,"column_end":54},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":11848},"to":{"krate":18,"index":27}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":264809,"byte_end":264821,"line_start":79,"line_end":79,"column_start":37,"column_end":49},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":11848},"to":{"krate":2,"index":12620}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/map.rs","byte_start":265706,"byte_end":265709,"line_start":22,"line_end":22,"column_start":28,"column_end":31},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":11932},"to":{"krate":2,"index":9352}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/map.rs","byte_start":265898,"byte_end":265901,"line_start":31,"line_end":31,"column_start":13,"column_end":16},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":11932},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/map.rs","byte_start":266070,"byte_end":266073,"line_start":39,"line_end":39,"column_start":29,"column_end":32},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":11932},"to":{"krate":18,"index":110}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/map.rs","byte_start":266241,"byte_end":266244,"line_start":49,"line_end":49,"column_start":24,"column_end":27},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":11932},"to":{"krate":18,"index":96}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/map.rs","byte_start":266786,"byte_end":266789,"line_start":69,"line_end":69,"column_start":34,"column_end":37},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":11932},"to":{"krate":22,"index":17}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/next.rs","byte_start":267356,"byte_end":267360,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":12078},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/next.rs","byte_start":267411,"byte_end":267415,"line_start":16,"line_end":16,"column_start":39,"column_end":43},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":12078},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/next.rs","byte_start":267566,"byte_end":267570,"line_start":22,"line_end":22,"column_start":56,"column_end":60},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":12078},"to":{"krate":18,"index":27}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/next.rs","byte_start":267709,"byte_end":267713,"line_start":28,"line_end":28,"column_start":46,"column_end":50},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":12078},"to":{"krate":2,"index":12620}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/select_next_some.rs","byte_start":268364,"byte_end":268378,"line_start":16,"line_end":16,"column_start":22,"column_end":36},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":12086},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/select_next_some.rs","byte_start":268529,"byte_end":268543,"line_start":22,"line_end":22,"column_start":56,"column_end":70},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":12086},"to":{"krate":18,"index":27}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/select_next_some.rs","byte_start":268687,"byte_end":268701,"line_start":28,"line_end":28,"column_start":51,"column_end":65},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":12086},"to":{"krate":2,"index":12620}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":270012,"byte_end":270020,"line_start":29,"line_end":29,"column_start":18,"column_end":26},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":12094},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":275517,"byte_end":275525,"line_start":189,"line_end":189,"column_start":34,"column_end":42},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":12094},"to":{"krate":18,"index":110}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":275667,"byte_end":275675,"line_start":195,"line_end":195,"column_start":28,"column_end":36},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":12094},"to":{"krate":18,"index":96}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":276460,"byte_end":276468,"line_start":220,"line_end":220,"column_start":30,"column_end":38},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":12094},"to":{"krate":22,"index":17}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":276834,"byte_end":276838,"line_start":237,"line_end":237,"column_start":25,"column_end":29},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":12142},"to":{"krate":2,"index":9352}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":277083,"byte_end":277087,"line_start":247,"line_end":247,"column_start":34,"column_end":38},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":12142},"to":{"krate":18,"index":27}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":277198,"byte_end":277202,"line_start":253,"line_end":253,"column_start":25,"column_end":29},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":12142},"to":{"krate":2,"index":12620}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":277899,"byte_end":277906,"line_start":279,"line_end":279,"column_start":25,"column_end":32},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":12183},"to":{"krate":2,"index":9352}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":278154,"byte_end":278161,"line_start":289,"line_end":289,"column_start":34,"column_end":41},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":12183},"to":{"krate":18,"index":27}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":278272,"byte_end":278279,"line_start":295,"line_end":295,"column_start":25,"column_end":32},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":12183},"to":{"krate":2,"index":12620}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":278999,"byte_end":279005,"line_start":321,"line_end":321,"column_start":28,"column_end":34},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":12224},"to":{"krate":2,"index":9352}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":279357,"byte_end":279363,"line_start":332,"line_end":332,"column_start":29,"column_end":35},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":12224},"to":{"krate":18,"index":27}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":279632,"byte_end":279638,"line_start":343,"line_end":343,"column_start":24,"column_end":30},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":12224},"to":{"krate":2,"index":12620}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":280899,"byte_end":280907,"line_start":381,"line_end":381,"column_start":28,"column_end":36},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":12273},"to":{"krate":2,"index":9352}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":281227,"byte_end":281235,"line_start":394,"line_end":394,"column_start":29,"column_end":37},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":12273},"to":{"krate":18,"index":27}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":281419,"byte_end":281427,"line_start":405,"line_end":405,"column_start":24,"column_end":32},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":12273},"to":{"krate":2,"index":12620}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":281798,"byte_end":281808,"line_start":423,"line_end":423,"column_start":34,"column_end":44},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":3199},"to":{"krate":0,"index":8082}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/skip.rs","byte_start":282473,"byte_end":282477,"line_start":20,"line_end":20,"column_start":18,"column_end":22},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":12322},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/skip.rs","byte_start":282668,"byte_end":282672,"line_start":28,"line_end":28,"column_start":39,"column_end":43},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":12322},"to":{"krate":18,"index":110}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/skip.rs","byte_start":282790,"byte_end":282794,"line_start":34,"line_end":34,"column_start":29,"column_end":33},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":12322},"to":{"krate":18,"index":96}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/skip.rs","byte_start":283605,"byte_end":283609,"line_start":63,"line_end":63,"column_start":30,"column_end":34},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":12322},"to":{"krate":22,"index":17}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/skip_while.rs","byte_start":284391,"byte_end":284400,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":12370},"to":{"krate":2,"index":9352}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/skip_while.rs","byte_start":284852,"byte_end":284861,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":12370},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/skip_while.rs","byte_start":285187,"byte_end":285196,"line_start":54,"line_end":54,"column_start":34,"column_end":43},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":12370},"to":{"krate":18,"index":110}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/skip_while.rs","byte_start":285444,"byte_end":285453,"line_start":65,"line_end":65,"column_start":29,"column_end":38},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":12370},"to":{"krate":18,"index":96}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/skip_while.rs","byte_start":287067,"byte_end":287076,"line_start":115,"line_end":115,"column_start":38,"column_end":47},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":12370},"to":{"krate":22,"index":17}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take.rs","byte_start":287753,"byte_end":287757,"line_start":21,"line_end":21,"column_start":18,"column_end":22},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":12443},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take.rs","byte_start":287930,"byte_end":287934,"line_start":29,"line_end":29,"column_start":21,"column_end":25},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":12443},"to":{"krate":18,"index":96}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take.rs","byte_start":288906,"byte_end":288910,"line_start":68,"line_end":68,"column_start":26,"column_end":30},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":12443},"to":{"krate":18,"index":110}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take.rs","byte_start":289158,"byte_end":289162,"line_start":79,"line_end":79,"column_start":30,"column_end":34},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":12443},"to":{"krate":22,"index":17}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_while.rs","byte_start":289933,"byte_end":289942,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":12491},"to":{"krate":2,"index":9352}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_while.rs","byte_start":290390,"byte_end":290399,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":12491},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_while.rs","byte_start":290718,"byte_end":290727,"line_start":54,"line_end":54,"column_start":29,"column_end":38},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":12491},"to":{"krate":18,"index":96}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_while.rs","byte_start":292246,"byte_end":292255,"line_start":104,"line_end":104,"column_start":34,"column_end":43},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":12491},"to":{"krate":18,"index":110}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_while.rs","byte_start":292611,"byte_end":292620,"line_start":117,"line_end":117,"column_start":38,"column_end":47},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":12491},"to":{"krate":22,"index":17}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":293639,"byte_end":293648,"line_start":30,"line_end":30,"column_start":30,"column_end":39},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":12564},"to":{"krate":2,"index":9352}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":293936,"byte_end":293945,"line_start":41,"line_end":41,"column_start":15,"column_end":24},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":12564},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":296062,"byte_end":296071,"line_start":111,"line_end":111,"column_start":26,"column_end":35},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":12564},"to":{"krate":18,"index":96}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":297103,"byte_end":297112,"line_start":150,"line_end":150,"column_start":31,"column_end":40},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":12564},"to":{"krate":18,"index":110}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":297349,"byte_end":297358,"line_start":162,"line_end":162,"column_start":35,"column_end":44},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":12564},"to":{"krate":22,"index":17}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/then.rs","byte_start":298054,"byte_end":298058,"line_start":23,"line_end":23,"column_start":33,"column_end":37},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":12625},"to":{"krate":2,"index":9352}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/then.rs","byte_start":298309,"byte_end":298313,"line_start":33,"line_end":33,"column_start":18,"column_end":22},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":12625},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/then.rs","byte_start":298559,"byte_end":298563,"line_start":45,"line_end":45,"column_start":34,"column_end":38},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":12625},"to":{"krate":18,"index":110}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/then.rs","byte_start":298789,"byte_end":298793,"line_start":56,"line_end":56,"column_start":29,"column_end":33},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":12625},"to":{"krate":18,"index":96}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/then.rs","byte_start":299972,"byte_end":299976,"line_start":94,"line_end":94,"column_start":38,"column_end":42},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":12625},"to":{"krate":22,"index":17}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":300675,"byte_end":300678,"line_start":22,"line_end":22,"column_start":32,"column_end":35},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":12690},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":302264,"byte_end":302267,"line_start":61,"line_end":61,"column_start":32,"column_end":35},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":12690},"to":{"krate":18,"index":110}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":302462,"byte_end":302465,"line_start":71,"line_end":71,"column_start":27,"column_end":30},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":12690},"to":{"krate":18,"index":96}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/chunks.rs","byte_start":305160,"byte_end":305166,"line_start":24,"line_end":24,"column_start":18,"column_end":24},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":12747},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/chunks.rs","byte_start":305674,"byte_end":305680,"line_start":46,"line_end":46,"column_start":29,"column_end":35},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":12747},"to":{"krate":18,"index":96}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/chunks.rs","byte_start":307296,"byte_end":307302,"line_start":91,"line_end":91,"column_start":39,"column_end":45},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":12747},"to":{"krate":18,"index":110}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/chunks.rs","byte_start":307525,"byte_end":307531,"line_start":99,"line_end":99,"column_start":30,"column_end":36},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":12747},"to":{"krate":22,"index":17}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/ready_chunks.rs","byte_start":308274,"byte_end":308285,"line_start":23,"line_end":23,"column_start":18,"column_end":29},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":12799},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/ready_chunks.rs","byte_start":308637,"byte_end":308648,"line_start":40,"line_end":40,"column_start":29,"column_end":40},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":12799},"to":{"krate":18,"index":96}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/ready_chunks.rs","byte_start":310817,"byte_end":310828,"line_start":99,"line_end":99,"column_start":39,"column_end":50},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":12799},"to":{"krate":18,"index":110}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/ready_chunks.rs","byte_start":311051,"byte_end":311062,"line_start":107,"line_end":107,"column_start":30,"column_end":41},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":12799},"to":{"krate":22,"index":17}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/scan.rs","byte_start":311826,"byte_end":311830,"line_start":28,"line_end":28,"column_start":36,"column_end":40},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":12851},"to":{"krate":2,"index":9352}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/scan.rs","byte_start":312316,"byte_end":312320,"line_start":45,"line_end":45,"column_start":29,"column_end":33},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":12851},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/scan.rs","byte_start":312484,"byte_end":312488,"line_start":52,"line_end":52,"column_start":24,"column_end":28},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":12851},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/scan.rs","byte_start":312850,"byte_end":312854,"line_start":65,"line_end":65,"column_start":35,"column_end":39},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":12851},"to":{"krate":18,"index":96}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/scan.rs","byte_start":314081,"byte_end":314085,"line_start":108,"line_end":108,"column_start":40,"column_end":44},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":12851},"to":{"krate":18,"index":110}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/scan.rs","byte_start":314459,"byte_end":314463,"line_start":121,"line_end":121,"column_start":42,"column_end":46},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":12851},"to":{"krate":22,"index":17}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/buffer_unordered.rs","byte_start":315266,"byte_end":315281,"line_start":26,"line_end":26,"column_start":25,"column_end":40},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":12924},"to":{"krate":2,"index":9352}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/buffer_unordered.rs","byte_start":315613,"byte_end":315628,"line_start":39,"line_end":39,"column_start":10,"column_end":25},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":12924},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/buffer_unordered.rs","byte_start":316015,"byte_end":316030,"line_start":59,"line_end":59,"column_start":21,"column_end":36},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":12924},"to":{"krate":18,"index":96}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/buffer_unordered.rs","byte_start":317484,"byte_end":317499,"line_start":104,"line_end":104,"column_start":26,"column_end":41},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":12924},"to":{"krate":18,"index":110}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/buffer_unordered.rs","byte_start":317783,"byte_end":317798,"line_start":116,"line_end":116,"column_start":30,"column_end":45},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":12924},"to":{"krate":22,"index":17}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/buffered.rs","byte_start":318609,"byte_end":318617,"line_start":27,"line_end":27,"column_start":25,"column_end":33},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":12973},"to":{"krate":2,"index":9352}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/buffered.rs","byte_start":318964,"byte_end":318972,"line_start":41,"line_end":41,"column_start":10,"column_end":18},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":12973},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/buffered.rs","byte_start":319252,"byte_end":319260,"line_start":53,"line_end":53,"column_start":21,"column_end":29},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":12973},"to":{"krate":18,"index":96}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/buffered.rs","byte_start":320778,"byte_end":320786,"line_start":100,"line_end":100,"column_start":30,"column_end":38},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":12973},"to":{"krate":22,"index":17}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/for_each_concurrent.rs","byte_start":321597,"byte_end":321614,"line_start":23,"line_end":23,"column_start":33,"column_end":50},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":13022},"to":{"krate":2,"index":9352}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/for_each_concurrent.rs","byte_start":321960,"byte_end":321977,"line_start":37,"line_end":37,"column_start":18,"column_end":35},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":13022},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/for_each_concurrent.rs","byte_start":322410,"byte_end":322427,"line_start":54,"line_end":54,"column_start":34,"column_end":51},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":13022},"to":{"krate":18,"index":27}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/for_each_concurrent.rs","byte_start":322657,"byte_end":322674,"line_start":65,"line_end":65,"column_start":29,"column_end":46},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":13022},"to":{"krate":2,"index":12620}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/split.rs","byte_start":324898,"byte_end":324909,"line_start":16,"line_end":16,"column_start":19,"column_end":30},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":13083},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/split.rs","byte_start":324932,"byte_end":324943,"line_start":18,"line_end":18,"column_start":16,"column_end":27},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":13083},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/split.rs","byte_start":325376,"byte_end":325387,"line_start":30,"line_end":30,"column_start":28,"column_end":39},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":13083},"to":{"krate":18,"index":96}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/split.rs","byte_start":325965,"byte_end":325974,"line_start":52,"line_end":52,"column_start":25,"column_end":34},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":13090},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/split.rs","byte_start":326022,"byte_end":326031,"line_start":54,"line_end":54,"column_start":35,"column_end":44},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":13090},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/split.rs","byte_start":326495,"byte_end":326504,"line_start":63,"line_end":63,"column_start":27,"column_end":36},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":13090},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/split.rs","byte_start":327226,"byte_end":327235,"line_start":87,"line_end":87,"column_start":42,"column_end":51},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":13090},"to":{"krate":22,"index":17}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/split.rs","byte_start":328842,"byte_end":328854,"line_start":131,"line_end":131,"column_start":30,"column_end":42},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":4059},"to":{"krate":2,"index":9352}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/split.rs","byte_start":329030,"byte_end":329042,"line_start":137,"line_end":137,"column_start":32,"column_end":44},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":4059},"to":{"krate":2,"index":9359}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/split.rs","byte_start":329291,"byte_end":329303,"line_start":144,"line_end":144,"column_start":53,"column_end":65},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":4059},"to":{"krate":1,"index":2339}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/catch_unwind.rs","byte_start":329848,"byte_end":329859,"line_start":19,"line_end":19,"column_start":31,"column_end":42},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":13099},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/catch_unwind.rs","byte_start":330051,"byte_end":330062,"line_start":27,"line_end":27,"column_start":42,"column_end":53},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":13099},"to":{"krate":18,"index":96}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/catch_unwind.rs","byte_start":330914,"byte_end":330925,"line_start":57,"line_end":57,"column_start":52,"column_end":63},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":13099},"to":{"krate":18,"index":110}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":181541,"byte_end":181542,"line_start":226,"line_end":226,"column_start":31,"column_end":32},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":4137},"to":{"krate":0,"index":4138}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":181685,"byte_end":181691,"line_start":230,"line_end":230,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":18,"index":96},"to":{"krate":0,"index":4138}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/and_then.rs","byte_start":370042,"byte_end":370049,"line_start":23,"line_end":23,"column_start":33,"column_end":40},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":13143},"to":{"krate":2,"index":9352}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/and_then.rs","byte_start":370342,"byte_end":370349,"line_start":36,"line_end":36,"column_start":18,"column_end":25},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":13143},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/and_then.rs","byte_start":370630,"byte_end":370637,"line_start":49,"line_end":49,"column_start":29,"column_end":36},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":13143},"to":{"krate":18,"index":96}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/and_then.rs","byte_start":371780,"byte_end":371787,"line_start":85,"line_end":85,"column_start":34,"column_end":41},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":13143},"to":{"krate":18,"index":110}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/and_then.rs","byte_start":372133,"byte_end":372140,"line_start":98,"line_end":98,"column_start":38,"column_end":45},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":13143},"to":{"krate":22,"index":17}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/into_stream.rs","byte_start":372705,"byte_end":372715,"line_start":18,"line_end":18,"column_start":10,"column_end":20},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":13442},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/into_stream.rs","byte_start":372908,"byte_end":372918,"line_start":27,"line_end":27,"column_start":51,"column_end":61},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":13442},"to":{"krate":18,"index":110}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/into_stream.rs","byte_start":373039,"byte_end":373049,"line_start":33,"line_end":33,"column_start":32,"column_end":42},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":13442},"to":{"krate":18,"index":96}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/into_stream.rs","byte_start":373473,"byte_end":373483,"line_start":48,"line_end":48,"column_start":42,"column_end":52},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":13442},"to":{"krate":22,"index":17}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/or_else.rs","byte_start":374148,"byte_end":374154,"line_start":23,"line_end":23,"column_start":33,"column_end":39},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":13642},"to":{"krate":2,"index":9352}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/or_else.rs","byte_start":374446,"byte_end":374452,"line_start":36,"line_end":36,"column_start":18,"column_end":24},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":13642},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/or_else.rs","byte_start":374730,"byte_end":374736,"line_start":49,"line_end":49,"column_start":29,"column_end":35},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":13642},"to":{"krate":18,"index":96}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/or_else.rs","byte_start":376013,"byte_end":376019,"line_start":89,"line_end":89,"column_start":34,"column_end":40},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":13642},"to":{"krate":18,"index":110}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/or_else.rs","byte_start":376362,"byte_end":376368,"line_start":102,"line_end":102,"column_start":38,"column_end":44},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":13642},"to":{"krate":22,"index":17}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_next.rs","byte_start":376923,"byte_end":376930,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":13707},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_next.rs","byte_start":376984,"byte_end":376991,"line_start":16,"line_end":16,"column_start":42,"column_end":49},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":13707},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_next.rs","byte_start":377154,"byte_end":377161,"line_start":22,"line_end":22,"column_start":68,"column_end":75},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":13707},"to":{"krate":18,"index":27}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_next.rs","byte_start":377303,"byte_end":377310,"line_start":28,"line_end":28,"column_start":49,"column_end":56},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":13707},"to":{"krate":2,"index":12620}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_for_each.rs","byte_start":378086,"byte_end":378096,"line_start":21,"line_end":21,"column_start":33,"column_end":43},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":13715},"to":{"krate":2,"index":9352}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_for_each.rs","byte_start":378392,"byte_end":378402,"line_start":34,"line_end":34,"column_start":18,"column_end":28},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":13715},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_for_each.rs","byte_start":378647,"byte_end":378657,"line_start":45,"line_end":45,"column_start":29,"column_end":39},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":13715},"to":{"krate":2,"index":12620}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_filter.rs","byte_start":380056,"byte_end":380065,"line_start":27,"line_end":27,"column_start":33,"column_end":42},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":13772},"to":{"krate":2,"index":9352}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_filter.rs","byte_start":380461,"byte_end":380470,"line_start":42,"line_end":42,"column_start":18,"column_end":27},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":13772},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_filter.rs","byte_start":380713,"byte_end":380722,"line_start":53,"line_end":53,"column_start":34,"column_end":43},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":13772},"to":{"krate":18,"index":110}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_filter.rs","byte_start":380979,"byte_end":380988,"line_start":64,"line_end":64,"column_start":29,"column_end":38},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":13772},"to":{"krate":18,"index":96}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_filter.rs","byte_start":382377,"byte_end":382386,"line_start":105,"line_end":105,"column_start":41,"column_end":50},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":13772},"to":{"krate":22,"index":17}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_filter_map.rs","byte_start":383129,"byte_end":383141,"line_start":24,"line_end":24,"column_start":33,"column_end":45},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":13841},"to":{"krate":2,"index":9352}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_filter_map.rs","byte_start":383441,"byte_end":383453,"line_start":37,"line_end":37,"column_start":18,"column_end":30},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":13841},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_filter_map.rs","byte_start":383650,"byte_end":383662,"line_start":45,"line_end":45,"column_start":37,"column_end":49},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":13841},"to":{"krate":18,"index":110}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_filter_map.rs","byte_start":383940,"byte_end":383952,"line_start":56,"line_end":56,"column_start":32,"column_end":44},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":13841},"to":{"krate":18,"index":96}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_filter_map.rs","byte_start":385452,"byte_end":385464,"line_start":99,"line_end":99,"column_start":38,"column_end":50},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":13841},"to":{"krate":22,"index":17}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_flatten.rs","byte_start":386136,"byte_end":386146,"line_start":24,"line_end":24,"column_start":10,"column_end":20},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":13906},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_flatten.rs","byte_start":386411,"byte_end":386421,"line_start":37,"line_end":37,"column_start":26,"column_end":36},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":13906},"to":{"krate":18,"index":110}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_flatten.rs","byte_start":386667,"byte_end":386677,"line_start":48,"line_end":48,"column_start":21,"column_end":31},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":13906},"to":{"krate":18,"index":96}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_flatten.rs","byte_start":387596,"byte_end":387606,"line_start":77,"line_end":77,"column_start":30,"column_end":40},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":13906},"to":{"krate":22,"index":17}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_collect.rs","byte_start":388286,"byte_end":388296,"line_start":20,"line_end":20,"column_start":33,"column_end":43},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":13954},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_collect.rs","byte_start":388436,"byte_end":388446,"line_start":26,"line_end":26,"column_start":29,"column_end":39},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":13954},"to":{"krate":18,"index":27}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_collect.rs","byte_start":388634,"byte_end":388644,"line_start":36,"line_end":36,"column_start":24,"column_end":34},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":13954},"to":{"krate":2,"index":12620}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_concat.rs","byte_start":389642,"byte_end":389651,"line_start":19,"line_end":19,"column_start":10,"column_end":19},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":14003},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_concat.rs","byte_start":389870,"byte_end":389879,"line_start":29,"line_end":29,"column_start":21,"column_end":30},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":14003},"to":{"krate":2,"index":12620}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_chunks.rs","byte_start":391263,"byte_end":391272,"line_start":25,"line_end":25,"column_start":21,"column_end":30},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":14043},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_chunks.rs","byte_start":391767,"byte_end":391776,"line_start":44,"line_end":44,"column_start":32,"column_end":41},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":14043},"to":{"krate":18,"index":96}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_chunks.rs","byte_start":393724,"byte_end":393733,"line_start":95,"line_end":95,"column_start":51,"column_end":60},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":14043},"to":{"krate":18,"index":110}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_chunks.rs","byte_start":393956,"byte_end":393965,"line_start":103,"line_end":103,"column_start":30,"column_end":39},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":14043},"to":{"krate":22,"index":17}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_chunks.rs","byte_start":394392,"byte_end":394406,"line_start":118,"line_end":118,"column_start":39,"column_end":53},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":14095},"to":{"krate":2,"index":9352}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_chunks.rs","byte_start":394551,"byte_end":394565,"line_start":124,"line_end":124,"column_start":43,"column_end":57},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":14095},"to":{"krate":2,"index":9359}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_chunks.rs","byte_start":394752,"byte_end":394766,"line_start":131,"line_end":131,"column_start":61,"column_end":75},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":14095},"to":{"krate":1,"index":2339}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_fold.rs","byte_start":395376,"byte_end":395383,"line_start":22,"line_end":22,"column_start":36,"column_end":43},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":14116},"to":{"krate":2,"index":9352}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_fold.rs","byte_start":395742,"byte_end":395749,"line_start":37,"line_end":37,"column_start":21,"column_end":28},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":14116},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_fold.rs","byte_start":396029,"byte_end":396036,"line_start":48,"line_end":48,"column_start":37,"column_end":44},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":14116},"to":{"krate":18,"index":27}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_fold.rs","byte_start":396290,"byte_end":396297,"line_start":59,"line_end":59,"column_start":32,"column_end":39},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":14116},"to":{"krate":2,"index":12620}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":400160,"byte_end":400169,"line_start":78,"line_end":78,"column_start":32,"column_end":41},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":14185},"to":{"krate":2,"index":9352}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":400431,"byte_end":400440,"line_start":88,"line_end":88,"column_start":34,"column_end":43},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":14185},"to":{"krate":18,"index":96}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_skip_while.rs","byte_start":402186,"byte_end":402198,"line_start":26,"line_end":26,"column_start":33,"column_end":45},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":14242},"to":{"krate":2,"index":9352}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_skip_while.rs","byte_start":402654,"byte_end":402666,"line_start":42,"line_end":42,"column_start":18,"column_end":30},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":14242},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_skip_while.rs","byte_start":403006,"byte_end":403018,"line_start":55,"line_end":55,"column_start":29,"column_end":41},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":14242},"to":{"krate":18,"index":96}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_skip_while.rs","byte_start":404517,"byte_end":404529,"line_start":100,"line_end":100,"column_start":34,"column_end":46},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":14242},"to":{"krate":18,"index":110}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_skip_while.rs","byte_start":404896,"byte_end":404908,"line_start":113,"line_end":113,"column_start":41,"column_end":53},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":14242},"to":{"krate":22,"index":17}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_take_while.rs","byte_start":405757,"byte_end":405769,"line_start":29,"line_end":29,"column_start":33,"column_end":45},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":14315},"to":{"krate":2,"index":9352}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_take_while.rs","byte_start":406221,"byte_end":406233,"line_start":45,"line_end":45,"column_start":18,"column_end":30},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":14315},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_take_while.rs","byte_start":406571,"byte_end":406583,"line_start":58,"line_end":58,"column_start":29,"column_end":41},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":14315},"to":{"krate":18,"index":96}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_take_while.rs","byte_start":408190,"byte_end":408202,"line_start":109,"line_end":109,"column_start":34,"column_end":46},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":14315},"to":{"krate":18,"index":110}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_take_while.rs","byte_start":408589,"byte_end":408601,"line_start":122,"line_end":122,"column_start":41,"column_end":53},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":14315},"to":{"krate":22,"index":17}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_buffer_unordered.rs","byte_start":409490,"byte_end":409508,"line_start":26,"line_end":26,"column_start":10,"column_end":28},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":14388},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_buffer_unordered.rs","byte_start":409847,"byte_end":409865,"line_start":42,"line_end":42,"column_start":21,"column_end":39},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":14388},"to":{"krate":18,"index":96}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_buffer_unordered.rs","byte_start":411142,"byte_end":411160,"line_start":78,"line_end":78,"column_start":33,"column_end":51},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":14388},"to":{"krate":22,"index":17}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_buffered.rs","byte_start":412071,"byte_end":412082,"line_start":27,"line_end":27,"column_start":10,"column_end":21},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":14440},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_buffered.rs","byte_start":412419,"byte_end":412430,"line_start":43,"line_end":43,"column_start":21,"column_end":32},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":14440},"to":{"krate":18,"index":96}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_buffered.rs","byte_start":413707,"byte_end":413718,"line_start":79,"line_end":79,"column_start":33,"column_end":44},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":14440},"to":{"krate":22,"index":17}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":414588,"byte_end":414608,"line_start":25,"line_end":25,"column_start":33,"column_end":53},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":14492},"to":{"krate":2,"index":9352}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":414973,"byte_end":414993,"line_start":39,"line_end":39,"column_start":34,"column_end":54},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":14492},"to":{"krate":18,"index":27}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":415232,"byte_end":415252,"line_start":50,"line_end":50,"column_start":18,"column_end":38},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":14492},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":415700,"byte_end":415720,"line_start":67,"line_end":67,"column_start":29,"column_end":49},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":14492},"to":{"krate":2,"index":12620}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":336325,"byte_end":336326,"line_start":154,"line_end":154,"column_start":46,"column_end":47},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":5490},"to":{"krate":0,"index":5491}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":336407,"byte_end":336416,"line_start":157,"line_end":157,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":18,"index":127},"to":{"krate":0,"index":5491}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":418484,"byte_end":418488,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":14553},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":419110,"byte_end":419114,"line_start":36,"line_end":36,"column_start":20,"column_end":24},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":14553},"to":{"krate":18,"index":96}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":420305,"byte_end":420311,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":14562},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":420338,"byte_end":420344,"line_start":36,"line_end":36,"column_start":20,"column_end":26},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":14562},"to":{"krate":18,"index":96}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":420652,"byte_end":420658,"line_start":51,"line_end":51,"column_start":25,"column_end":31},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":14562},"to":{"krate":18,"index":110}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":421255,"byte_end":421265,"line_start":17,"line_end":17,"column_start":36,"column_end":46},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":14571},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":421309,"byte_end":421319,"line_start":19,"line_end":19,"column_start":37,"column_end":47},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":14571},"to":{"krate":18,"index":96}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":421633,"byte_end":421643,"line_start":31,"line_end":31,"column_start":42,"column_end":52},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":14571},"to":{"krate":18,"index":110}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/empty.rs","byte_start":424163,"byte_end":424168,"line_start":21,"line_end":21,"column_start":19,"column_end":24},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":14580},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/empty.rs","byte_start":424200,"byte_end":424205,"line_start":23,"line_end":23,"column_start":25,"column_end":30},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":14580},"to":{"krate":18,"index":110}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/empty.rs","byte_start":424290,"byte_end":424295,"line_start":29,"line_end":29,"column_start":20,"column_end":25},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":14580},"to":{"krate":18,"index":96}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/empty.rs","byte_start":424544,"byte_end":424549,"line_start":41,"line_end":41,"column_start":19,"column_end":24},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":14580},"to":{"krate":2,"index":2625}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/once.rs","byte_start":425488,"byte_end":425492,"line_start":34,"line_end":34,"column_start":11,"column_end":15},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":14586},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/once.rs","byte_start":425621,"byte_end":425625,"line_start":40,"line_end":40,"column_start":30,"column_end":34},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":14586},"to":{"krate":18,"index":96}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/once.rs","byte_start":426230,"byte_end":426234,"line_start":63,"line_end":63,"column_start":35,"column_end":39},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":14586},"to":{"krate":18,"index":110}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/pending.rs","byte_start":426893,"byte_end":426900,"line_start":21,"line_end":21,"column_start":19,"column_end":26},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":14622},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/pending.rs","byte_start":426932,"byte_end":426939,"line_start":23,"line_end":23,"column_start":25,"column_end":32},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":14622},"to":{"krate":18,"index":110}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/pending.rs","byte_start":427024,"byte_end":427031,"line_start":29,"line_end":29,"column_start":20,"column_end":27},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":14622},"to":{"krate":18,"index":96}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/pending.rs","byte_start":427276,"byte_end":427283,"line_start":41,"line_end":41,"column_start":19,"column_end":26},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":14622},"to":{"krate":2,"index":2625}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":427670,"byte_end":427676,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":5904},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":427707,"byte_end":427713,"line_start":17,"line_end":17,"column_start":24,"column_end":30},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":5904},"to":{"krate":2,"index":9352}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":428478,"byte_end":428484,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":5904},"to":{"krate":18,"index":96}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":429180,"byte_end":429193,"line_start":18,"line_end":18,"column_start":23,"column_end":36},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":14628},"to":{"krate":18,"index":96}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":430106,"byte_end":430119,"line_start":47,"line_end":47,"column_start":40,"column_end":53},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":14628},"to":{"krate":18,"index":110}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":433006,"byte_end":433012,"line_start":61,"line_end":61,"column_start":16,"column_end":22},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":14667},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":434316,"byte_end":434322,"line_start":96,"line_end":96,"column_start":32,"column_end":38},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":14667},"to":{"krate":18,"index":110}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":434501,"byte_end":434507,"line_start":106,"line_end":106,"column_start":27,"column_end":33},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":14667},"to":{"krate":18,"index":96}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":435220,"byte_end":435228,"line_start":17,"line_end":17,"column_start":6,"column_end":14},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":14712},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":435525,"byte_end":435533,"line_start":31,"line_end":31,"column_start":18,"column_end":26},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":14712},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":438560,"byte_end":438578,"line_start":130,"line_end":130,"column_start":29,"column_end":47},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":14731},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":440027,"byte_end":440045,"line_start":165,"line_end":165,"column_start":45,"column_end":63},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":14731},"to":{"krate":18,"index":110}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":440325,"byte_end":440343,"line_start":176,"line_end":176,"column_start":40,"column_end":58},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":14731},"to":{"krate":18,"index":96}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":441455,"byte_end":441473,"line_start":216,"line_end":216,"column_start":44,"column_end":62},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":14731},"to":{"krate":2,"index":9352}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":444044,"byte_end":444050,"line_start":68,"line_end":68,"column_start":32,"column_end":38},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":14800},"to":{"krate":2,"index":9352}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":444290,"byte_end":444296,"line_start":78,"line_end":78,"column_start":39,"column_end":45},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":14800},"to":{"krate":18,"index":110}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":444576,"byte_end":444582,"line_start":92,"line_end":92,"column_start":34,"column_end":40},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":14800},"to":{"krate":18,"index":96}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":446130,"byte_end":446142,"line_start":26,"line_end":26,"column_start":23,"column_end":35},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":14853},"to":{"krate":2,"index":2655}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":446247,"byte_end":446259,"line_start":32,"line_end":32,"column_start":16,"column_end":28},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":14853},"to":{"krate":2,"index":2660}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":446290,"byte_end":446302,"line_start":34,"line_end":34,"column_start":24,"column_end":36},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":14853},"to":{"krate":2,"index":2702}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":446425,"byte_end":446437,"line_start":40,"line_end":40,"column_start":17,"column_end":29},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":14853},"to":{"krate":2,"index":2691}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":446618,"byte_end":446630,"line_start":47,"line_end":47,"column_start":20,"column_end":32},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":14853},"to":{"krate":2,"index":12620}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":449212,"byte_end":449226,"line_start":102,"line_end":102,"column_start":27,"column_end":41},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":6244},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":449252,"byte_end":449266,"line_start":104,"line_end":104,"column_start":19,"column_end":33},"kind":{"Impl":{"id":384}},"from":{"krate":0,"index":6244},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":450832,"byte_end":450846,"line_start":145,"line_end":145,"column_start":31,"column_end":45},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":6244},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":450939,"byte_end":450953,"line_start":151,"line_end":151,"column_start":30,"column_end":44},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":6244},"to":{"krate":18,"index":96}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":452115,"byte_end":452129,"line_start":186,"line_end":186,"column_start":29,"column_end":43},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":6244},"to":{"krate":2,"index":9352}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":452295,"byte_end":452309,"line_start":192,"line_end":192,"column_start":41,"column_end":55},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":6244},"to":{"krate":2,"index":7423}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":452589,"byte_end":452603,"line_start":205,"line_end":205,"column_start":35,"column_end":49},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":6244},"to":{"krate":18,"index":110}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":452773,"byte_end":452787,"line_start":211,"line_end":211,"column_start":35,"column_end":49},"kind":{"Impl":{"id":390}},"from":{"krate":0,"index":6244},"to":{"krate":2,"index":7436}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/abort.rs","byte_start":480569,"byte_end":480580,"line_start":4,"line_end":4,"column_start":19,"column_end":30},"kind":{"Impl":{"id":391}},"from":{"krate":0,"index":6381},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":481939,"byte_end":481947,"line_start":39,"line_end":39,"column_start":31,"column_end":39},"kind":{"Impl":{"id":392}},"from":{"krate":0,"index":14932},"to":{"krate":2,"index":7607}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":483021,"byte_end":483029,"line_start":71,"line_end":71,"column_start":40,"column_end":48},"kind":{"Impl":{"id":393}},"from":{"krate":0,"index":14932},"to":{"krate":2,"index":7496}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":483066,"byte_end":483076,"line_start":73,"line_end":73,"column_start":28,"column_end":38},"kind":{"Impl":{"id":394}},"from":{"krate":0,"index":14893},"to":{"krate":2,"index":7607}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":483928,"byte_end":483938,"line_start":100,"line_end":100,"column_start":33,"column_end":43},"kind":{"Impl":{"id":395}},"from":{"krate":0,"index":14893},"to":{"krate":2,"index":7496}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":483986,"byte_end":483993,"line_start":102,"line_end":102,"column_start":35,"column_end":42},"kind":{"Impl":{"id":396}},"from":{"krate":0,"index":14903},"to":{"krate":2,"index":7607}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":484256,"byte_end":484263,"line_start":114,"line_end":114,"column_start":40,"column_end":47},"kind":{"Impl":{"id":397}},"from":{"krate":0,"index":14903},"to":{"krate":2,"index":7496}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":484304,"byte_end":484314,"line_start":116,"line_end":116,"column_start":28,"column_end":38},"kind":{"Impl":{"id":398}},"from":{"krate":0,"index":14912},"to":{"krate":2,"index":7607}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":485183,"byte_end":485193,"line_start":143,"line_end":143,"column_start":33,"column_end":43},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":14912},"to":{"krate":2,"index":7496}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":485241,"byte_end":485245,"line_start":145,"line_end":145,"column_start":35,"column_end":39},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":14923},"to":{"krate":2,"index":7607}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":485504,"byte_end":485508,"line_start":157,"line_end":157,"column_start":40,"column_end":44},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":14923},"to":{"krate":2,"index":7496}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":485677,"byte_end":485687,"line_start":161,"line_end":161,"column_start":33,"column_end":43},"kind":{"Impl":{"id":402}},"from":{"krate":0,"index":14912},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":485732,"byte_end":485742,"line_start":162,"line_end":162,"column_start":33,"column_end":43},"kind":{"Impl":{"id":403}},"from":{"krate":0,"index":14912},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":485788,"byte_end":485798,"line_start":164,"line_end":164,"column_start":33,"column_end":43},"kind":{"Impl":{"id":404}},"from":{"krate":0,"index":14893},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":485843,"byte_end":485853,"line_start":165,"line_end":165,"column_start":33,"column_end":43},"kind":{"Impl":{"id":405}},"from":{"krate":0,"index":14893},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":485907,"byte_end":485915,"line_start":167,"line_end":167,"column_start":41,"column_end":49},"kind":{"Impl":{"id":406}},"from":{"krate":0,"index":14932},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":485964,"byte_end":485972,"line_start":168,"line_end":168,"column_start":41,"column_end":49},"kind":{"Impl":{"id":407}},"from":{"krate":0,"index":14932},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/task.rs","byte_start":487457,"byte_end":487461,"line_start":41,"line_end":41,"column_start":27,"column_end":31},"kind":{"Impl":{"id":408}},"from":{"krate":0,"index":6509},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/task.rs","byte_start":487496,"byte_end":487500,"line_start":42,"line_end":42,"column_start":27,"column_end":31},"kind":{"Impl":{"id":409}},"from":{"krate":0,"index":6509},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/task.rs","byte_start":487532,"byte_end":487536,"line_start":44,"line_end":44,"column_start":23,"column_end":27},"kind":{"Impl":{"id":410}},"from":{"krate":0,"index":6509},"to":{"krate":21,"index":94}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/task.rs","byte_start":488613,"byte_end":488617,"line_start":71,"line_end":71,"column_start":11,"column_end":15},"kind":{"Impl":{"id":411}},"from":{"krate":0,"index":6509},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/task.rs","byte_start":489617,"byte_end":489621,"line_start":102,"line_end":102,"column_start":20,"column_end":24},"kind":{"Impl":{"id":412}},"from":{"krate":0,"index":6509},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":491071,"byte_end":491086,"line_start":29,"line_end":29,"column_start":11,"column_end":26},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":6579},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":493742,"byte_end":493757,"line_start":111,"line_end":111,"column_start":20,"column_end":35},"kind":{"Impl":{"id":414}},"from":{"krate":0,"index":6579},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":456577,"byte_end":456593,"line_start":88,"line_end":88,"column_start":33,"column_end":49},"kind":{"Impl":{"id":415}},"from":{"krate":0,"index":6602},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":456634,"byte_end":456650,"line_start":89,"line_end":89,"column_start":33,"column_end":49},"kind":{"Impl":{"id":416}},"from":{"krate":0,"index":6602},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":456679,"byte_end":456695,"line_start":90,"line_end":90,"column_start":21,"column_end":37},"kind":{"Impl":{"id":417}},"from":{"krate":0,"index":6602},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":456720,"byte_end":456736,"line_start":92,"line_end":92,"column_start":16,"column_end":32},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":6602},"to":{"krate":21,"index":15}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":456921,"byte_end":456937,"line_start":99,"line_end":99,"column_start":21,"column_end":37},"kind":{"Impl":{"id":419}},"from":{"krate":0,"index":6602},"to":{"krate":21,"index":18}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":458644,"byte_end":458660,"line_start":131,"line_end":131,"column_start":23,"column_end":39},"kind":{"Impl":{"id":420}},"from":{"krate":0,"index":6602},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":458734,"byte_end":458750,"line_start":137,"line_end":137,"column_start":11,"column_end":27},"kind":{"Impl":{"id":421}},"from":{"krate":0,"index":6602},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":470281,"byte_end":470297,"line_start":410,"line_end":410,"column_start":30,"column_end":46},"kind":{"Impl":{"id":422}},"from":{"krate":0,"index":6602},"to":{"krate":18,"index":96}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":474719,"byte_end":474723,"line_start":508,"line_end":508,"column_start":32,"column_end":36},"kind":{"Impl":{"id":423}},"from":{"krate":0,"index":6639},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":476978,"byte_end":476994,"line_start":565,"line_end":565,"column_start":21,"column_end":37},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":6602},"to":{"krate":2,"index":9352}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":477132,"byte_end":477148,"line_start":571,"line_end":571,"column_start":11,"column_end":27},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":6602},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":477719,"byte_end":477735,"line_start":591,"line_end":591,"column_start":20,"column_end":36},"kind":{"Impl":{"id":426}},"from":{"krate":0,"index":6602},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":479385,"byte_end":479401,"line_start":632,"line_end":632,"column_start":35,"column_end":51},"kind":{"Impl":{"id":427}},"from":{"krate":0,"index":6602},"to":{"krate":2,"index":7427}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":479871,"byte_end":479887,"line_start":646,"line_end":646,"column_start":33,"column_end":49},"kind":{"Impl":{"id":428}},"from":{"krate":0,"index":6602},"to":{"krate":2,"index":7423}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":480163,"byte_end":480179,"line_start":659,"line_end":659,"column_start":35,"column_end":51},"kind":{"Impl":{"id":429}},"from":{"krate":0,"index":6602},"to":{"krate":18,"index":110}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":480301,"byte_end":480317,"line_start":665,"line_end":665,"column_start":27,"column_end":43},"kind":{"Impl":{"id":430}},"from":{"krate":0,"index":6602},"to":{"krate":2,"index":7436}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":495352,"byte_end":495361,"line_start":36,"line_end":36,"column_start":27,"column_end":36},"kind":{"Impl":{"id":431}},"from":{"krate":0,"index":14939},"to":{"krate":2,"index":9352}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":495506,"byte_end":495515,"line_start":42,"line_end":42,"column_start":26,"column_end":35},"kind":{"Impl":{"id":432}},"from":{"krate":0,"index":14939},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":496988,"byte_end":496997,"line_start":89,"line_end":89,"column_start":38,"column_end":47},"kind":{"Impl":{"id":433}},"from":{"krate":0,"index":14939},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":497096,"byte_end":497105,"line_start":95,"line_end":95,"column_start":37,"column_end":46},"kind":{"Impl":{"id":434}},"from":{"krate":0,"index":14939},"to":{"krate":18,"index":96}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":497889,"byte_end":497898,"line_start":117,"line_end":117,"column_start":42,"column_end":51},"kind":{"Impl":{"id":435}},"from":{"krate":0,"index":14939},"to":{"krate":18,"index":110}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":498916,"byte_end":498925,"line_start":149,"line_end":149,"column_start":47,"column_end":56},"kind":{"Impl":{"id":436}},"from":{"krate":0,"index":14939},"to":{"krate":2,"index":7423}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":499070,"byte_end":499079,"line_start":155,"line_end":155,"column_start":41,"column_end":50},"kind":{"Impl":{"id":437}},"from":{"krate":0,"index":14939},"to":{"krate":2,"index":7436}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":499262,"byte_end":499271,"line_start":163,"line_end":163,"column_start":43,"column_end":52},"kind":{"Impl":{"id":438}},"from":{"krate":0,"index":14939},"to":{"krate":2,"index":7427}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":500354,"byte_end":500358,"line_start":202,"line_end":202,"column_start":43,"column_end":47},"kind":{"Impl":{"id":439}},"from":{"krate":0,"index":14972},"to":{"krate":2,"index":7607}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":500791,"byte_end":500795,"line_start":218,"line_end":218,"column_start":48,"column_end":52},"kind":{"Impl":{"id":440}},"from":{"krate":0,"index":14972},"to":{"krate":2,"index":7496}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":500850,"byte_end":500857,"line_start":220,"line_end":220,"column_start":43,"column_end":50},"kind":{"Impl":{"id":441}},"from":{"krate":0,"index":14981},"to":{"krate":2,"index":7607}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":501294,"byte_end":501301,"line_start":236,"line_end":236,"column_start":48,"column_end":55},"kind":{"Impl":{"id":442}},"from":{"krate":0,"index":14981},"to":{"krate":2,"index":7496}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":501352,"byte_end":501360,"line_start":238,"line_end":238,"column_start":39,"column_end":47},"kind":{"Impl":{"id":443}},"from":{"krate":0,"index":14990},"to":{"krate":2,"index":7607}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":501788,"byte_end":501796,"line_start":254,"line_end":254,"column_start":48,"column_end":56},"kind":{"Impl":{"id":444}},"from":{"krate":0,"index":14990},"to":{"krate":2,"index":7496}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/close.rs","byte_start":514140,"byte_end":514145,"line_start":15,"line_end":15,"column_start":42,"column_end":47},"kind":{"Impl":{"id":445}},"from":{"krate":0,"index":14997},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/close.rs","byte_start":514339,"byte_end":514344,"line_start":20,"line_end":20,"column_start":49,"column_end":54},"kind":{"Impl":{"id":446}},"from":{"krate":0,"index":14997},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/close.rs","byte_start":514520,"byte_end":514525,"line_start":26,"line_end":26,"column_start":56,"column_end":61},"kind":{"Impl":{"id":447}},"from":{"krate":0,"index":14997},"to":{"krate":2,"index":12620}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/drain.rs","byte_start":515515,"byte_end":515520,"line_start":33,"line_end":33,"column_start":19,"column_end":24},"kind":{"Impl":{"id":448}},"from":{"krate":0,"index":15008},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/drain.rs","byte_start":515548,"byte_end":515553,"line_start":35,"line_end":35,"column_start":21,"column_end":26},"kind":{"Impl":{"id":449}},"from":{"krate":0,"index":15008},"to":{"krate":22,"index":17}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/fanout.rs","byte_start":516714,"byte_end":516720,"line_start":21,"line_end":21,"column_start":16,"column_end":22},"kind":{"Impl":{"id":450}},"from":{"krate":0,"index":15014},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/fanout.rs","byte_start":517688,"byte_end":517694,"line_start":51,"line_end":51,"column_start":40,"column_end":46},"kind":{"Impl":{"id":451}},"from":{"krate":0,"index":15014},"to":{"krate":2,"index":9352}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/fanout.rs","byte_start":517906,"byte_end":517912,"line_start":57,"line_end":57,"column_start":37,"column_end":43},"kind":{"Impl":{"id":452}},"from":{"krate":0,"index":15014},"to":{"krate":22,"index":17}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/feed.rs","byte_start":519991,"byte_end":519995,"line_start":16,"line_end":16,"column_start":42,"column_end":46},"kind":{"Impl":{"id":453}},"from":{"krate":0,"index":15059},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/feed.rs","byte_start":520062,"byte_end":520066,"line_start":18,"line_end":18,"column_start":49,"column_end":53},"kind":{"Impl":{"id":454}},"from":{"krate":0,"index":15059},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/feed.rs","byte_start":520430,"byte_end":520434,"line_start":32,"line_end":32,"column_start":56,"column_end":60},"kind":{"Impl":{"id":455}},"from":{"krate":0,"index":15059},"to":{"krate":2,"index":12620}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/flush.rs","byte_start":521336,"byte_end":521341,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"kind":{"Impl":{"id":456}},"from":{"krate":0,"index":15070},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/flush.rs","byte_start":521692,"byte_end":521697,"line_start":24,"line_end":24,"column_start":49,"column_end":54},"kind":{"Impl":{"id":457}},"from":{"krate":0,"index":15070},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/flush.rs","byte_start":521873,"byte_end":521878,"line_start":30,"line_end":30,"column_start":56,"column_end":61},"kind":{"Impl":{"id":458}},"from":{"krate":0,"index":15070},"to":{"krate":2,"index":12620}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/err_into.rs","byte_start":522538,"byte_end":522549,"line_start":16,"line_end":16,"column_start":19,"column_end":30},"kind":{"Impl":{"id":459}},"from":{"krate":0,"index":15081},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/err_into.rs","byte_start":522806,"byte_end":522817,"line_start":28,"line_end":28,"column_start":34,"column_end":45},"kind":{"Impl":{"id":460}},"from":{"krate":0,"index":15081},"to":{"krate":22,"index":17}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/err_into.rs","byte_start":523021,"byte_end":523032,"line_start":39,"line_end":39,"column_start":29,"column_end":40},"kind":{"Impl":{"id":461}},"from":{"krate":0,"index":15081},"to":{"krate":18,"index":96}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/err_into.rs","byte_start":523194,"byte_end":523205,"line_start":49,"line_end":49,"column_start":34,"column_end":45},"kind":{"Impl":{"id":462}},"from":{"krate":0,"index":15081},"to":{"krate":18,"index":110}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/map_err.rs","byte_start":523814,"byte_end":523824,"line_start":18,"line_end":18,"column_start":13,"column_end":23},"kind":{"Impl":{"id":463}},"from":{"krate":0,"index":15145},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/map_err.rs","byte_start":524127,"byte_end":524137,"line_start":30,"line_end":30,"column_start":37,"column_end":47},"kind":{"Impl":{"id":464}},"from":{"krate":0,"index":15145},"to":{"krate":22,"index":17}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/map_err.rs","byte_start":525093,"byte_end":525103,"line_start":55,"line_end":55,"column_start":31,"column_end":41},"kind":{"Impl":{"id":465}},"from":{"krate":0,"index":15145},"to":{"krate":18,"index":96}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/map_err.rs","byte_start":525209,"byte_end":525219,"line_start":61,"line_end":61,"column_start":41,"column_end":51},"kind":{"Impl":{"id":466}},"from":{"krate":0,"index":15145},"to":{"krate":18,"index":110}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/send.rs","byte_start":525770,"byte_end":525774,"line_start":16,"line_end":16,"column_start":42,"column_end":46},"kind":{"Impl":{"id":467}},"from":{"krate":0,"index":15204},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/send.rs","byte_start":525841,"byte_end":525845,"line_start":18,"line_end":18,"column_start":49,"column_end":53},"kind":{"Impl":{"id":468}},"from":{"krate":0,"index":15204},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/send.rs","byte_start":526033,"byte_end":526037,"line_start":24,"line_end":24,"column_start":56,"column_end":60},"kind":{"Impl":{"id":469}},"from":{"krate":0,"index":15204},"to":{"krate":2,"index":12620}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/send_all.rs","byte_start":527243,"byte_end":527250,"line_start":23,"line_end":23,"column_start":29,"column_end":36},"kind":{"Impl":{"id":470}},"from":{"krate":0,"index":7277},"to":{"krate":2,"index":9352}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/send_all.rs","byte_start":527689,"byte_end":527696,"line_start":39,"line_end":39,"column_start":24,"column_end":31},"kind":{"Impl":{"id":471}},"from":{"krate":0,"index":7277},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/send_all.rs","byte_start":527808,"byte_end":527815,"line_start":46,"line_end":46,"column_start":29,"column_end":36},"kind":{"Impl":{"id":472}},"from":{"krate":0,"index":7277},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/send_all.rs","byte_start":528591,"byte_end":528598,"line_start":71,"line_end":71,"column_start":36,"column_end":43},"kind":{"Impl":{"id":473}},"from":{"krate":0,"index":7277},"to":{"krate":2,"index":12620}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/unfold.rs","byte_start":530897,"byte_end":530903,"line_start":47,"line_end":47,"column_start":39,"column_end":45},"kind":{"Impl":{"id":474}},"from":{"krate":0,"index":15214},"to":{"krate":22,"index":17}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/with.rs","byte_start":532820,"byte_end":532824,"line_start":24,"line_end":24,"column_start":42,"column_end":46},"kind":{"Impl":{"id":475}},"from":{"krate":0,"index":15272},"to":{"krate":2,"index":9352}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/with.rs","byte_start":533087,"byte_end":533091,"line_start":34,"line_end":34,"column_start":27,"column_end":31},"kind":{"Impl":{"id":476}},"from":{"krate":0,"index":15272},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/with.rs","byte_start":533428,"byte_end":533432,"line_start":49,"line_end":49,"column_start":37,"column_end":41},"kind":{"Impl":{"id":477}},"from":{"krate":0,"index":15272},"to":{"krate":2,"index":2625}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/with.rs","byte_start":533803,"byte_end":533807,"line_start":66,"line_end":66,"column_start":37,"column_end":41},"kind":{"Impl":{"id":478}},"from":{"krate":0,"index":15272},"to":{"krate":18,"index":96}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/with.rs","byte_start":533991,"byte_end":533995,"line_start":77,"line_end":77,"column_start":30,"column_end":34},"kind":{"Impl":{"id":479}},"from":{"krate":0,"index":15272},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/with.rs","byte_start":534670,"byte_end":534674,"line_start":100,"line_end":100,"column_start":42,"column_end":46},"kind":{"Impl":{"id":480}},"from":{"krate":0,"index":15272},"to":{"krate":22,"index":17}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/with_flat_map.rs","byte_start":536393,"byte_end":536404,"line_start":24,"line_end":24,"column_start":41,"column_end":52},"kind":{"Impl":{"id":481}},"from":{"krate":0,"index":15355},"to":{"krate":2,"index":9352}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/with_flat_map.rs","byte_start":536777,"byte_end":536788,"line_start":39,"line_end":39,"column_start":26,"column_end":37},"kind":{"Impl":{"id":482}},"from":{"krate":0,"index":15355},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/with_flat_map.rs","byte_start":538075,"byte_end":538086,"line_start":76,"line_end":76,"column_start":36,"column_end":47},"kind":{"Impl":{"id":483}},"from":{"krate":0,"index":15355},"to":{"krate":18,"index":96}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/with_flat_map.rs","byte_start":538309,"byte_end":538320,"line_start":87,"line_end":87,"column_start":41,"column_end":52},"kind":{"Impl":{"id":484}},"from":{"krate":0,"index":15355},"to":{"krate":18,"index":110}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/with_flat_map.rs","byte_start":538569,"byte_end":538580,"line_start":98,"line_end":98,"column_start":38,"column_end":49},"kind":{"Impl":{"id":485}},"from":{"krate":0,"index":15355},"to":{"krate":22,"index":17}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/buffer.rs","byte_start":540124,"byte_end":540130,"line_start":23,"line_end":23,"column_start":28,"column_end":34},"kind":{"Impl":{"id":486}},"from":{"krate":0,"index":15442},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/buffer.rs","byte_start":540858,"byte_end":540864,"line_start":44,"line_end":44,"column_start":26,"column_end":32},"kind":{"Impl":{"id":487}},"from":{"krate":0,"index":15442},"to":{"krate":18,"index":96}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/buffer.rs","byte_start":541194,"byte_end":541200,"line_start":59,"line_end":59,"column_start":31,"column_end":37},"kind":{"Impl":{"id":488}},"from":{"krate":0,"index":15442},"to":{"krate":18,"index":110}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/buffer.rs","byte_start":541374,"byte_end":541380,"line_start":68,"line_end":68,"column_start":43,"column_end":49},"kind":{"Impl":{"id":489}},"from":{"krate":0,"index":15442},"to":{"krate":22,"index":17}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":503685,"byte_end":503686,"line_start":61,"line_end":61,"column_start":41,"column_end":42},"kind":{"Impl":{"id":490}},"from":{"krate":0,"index":7580},"to":{"krate":0,"index":7582}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":503835,"byte_end":503839,"line_start":65,"line_end":65,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":22,"index":17},"to":{"krate":0,"index":7582}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":544114,"byte_end":544116,"line_start":16,"line_end":16,"column_start":31,"column_end":33},"kind":{"Impl":{"id":491}},"from":{"krate":0,"index":7710},"to":{"krate":0,"index":7713}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":544171,"byte_end":544173,"line_start":17,"line_end":17,"column_start":36,"column_end":38},"kind":{"Impl":{"id":492}},"from":{"krate":0,"index":7712},"to":{"krate":0,"index":7716}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":544252,"byte_end":544257,"line_start":20,"line_end":20,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":21,"index":15},"to":{"krate":0,"index":7713}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":547021,"byte_end":547031,"line_start":97,"line_end":97,"column_start":26,"column_end":36},"kind":"SuperTrait","from":{"krate":21,"index":18},"to":{"krate":0,"index":7716}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":552012,"byte_end":552017,"line_start":26,"line_end":26,"column_start":32,"column_end":37},"kind":{"Impl":{"id":493}},"from":{"krate":0,"index":7783},"to":{"krate":2,"index":9352}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":552350,"byte_end":552355,"line_start":36,"line_end":36,"column_start":21,"column_end":26},"kind":{"Impl":{"id":494}},"from":{"krate":0,"index":7783},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":552448,"byte_end":552453,"line_start":42,"line_end":42,"column_start":30,"column_end":35},"kind":{"Impl":{"id":495}},"from":{"krate":0,"index":7783},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":552586,"byte_end":552592,"line_start":53,"line_end":53,"column_start":6,"column_end":12},"kind":{"Impl":{"id":496}},"from":{"krate":0,"index":7797},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":553038,"byte_end":553043,"line_start":72,"line_end":72,"column_start":9,"column_end":14},"kind":{"Impl":{"id":497}},"from":{"krate":0,"index":7783},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":553614,"byte_end":553619,"line_start":97,"line_end":97,"column_start":17,"column_end":22},"kind":{"Impl":{"id":498}},"from":{"krate":0,"index":7783},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":556734,"byte_end":556749,"line_start":185,"line_end":185,"column_start":32,"column_end":47},"kind":{"Impl":{"id":499}},"from":{"krate":0,"index":7820},"to":{"krate":2,"index":9352}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":557180,"byte_end":557195,"line_start":198,"line_end":198,"column_start":33,"column_end":48},"kind":{"Impl":{"id":500}},"from":{"krate":0,"index":7820},"to":{"krate":18,"index":27}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":557312,"byte_end":557327,"line_start":204,"line_end":204,"column_start":32,"column_end":47},"kind":{"Impl":{"id":501}},"from":{"krate":0,"index":7820},"to":{"krate":2,"index":12620}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":558556,"byte_end":558571,"line_start":240,"line_end":240,"column_start":26,"column_end":41},"kind":{"Impl":{"id":502}},"from":{"krate":0,"index":7820},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":559173,"byte_end":559183,"line_start":259,"line_end":259,"column_start":21,"column_end":31},"kind":{"Impl":{"id":503}},"from":{"krate":0,"index":7839},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":560195,"byte_end":560205,"line_start":289,"line_end":289,"column_start":45,"column_end":55},"kind":{"Impl":{"id":504}},"from":{"krate":0,"index":7839},"to":{"krate":2,"index":9352}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":560411,"byte_end":560421,"line_start":295,"line_end":295,"column_start":26,"column_end":36},"kind":{"Impl":{"id":505}},"from":{"krate":0,"index":7839},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":560519,"byte_end":560529,"line_start":301,"line_end":301,"column_start":27,"column_end":37},"kind":{"Impl":{"id":506}},"from":{"krate":0,"index":7839},"to":{"krate":2,"index":3215}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":560670,"byte_end":560680,"line_start":308,"line_end":308,"column_start":30,"column_end":40},"kind":{"Impl":{"id":507}},"from":{"krate":0,"index":7839},"to":{"krate":2,"index":3228}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":561131,"byte_end":561147,"line_start":322,"line_end":322,"column_start":32,"column_end":48},"kind":{"Impl":{"id":508}},"from":{"krate":0,"index":7862},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":562277,"byte_end":562293,"line_start":353,"line_end":353,"column_start":56,"column_end":72},"kind":{"Impl":{"id":509}},"from":{"krate":0,"index":7862},"to":{"krate":2,"index":9352}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":562558,"byte_end":562574,"line_start":362,"line_end":362,"column_start":37,"column_end":53},"kind":{"Impl":{"id":510}},"from":{"krate":0,"index":7862},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":562686,"byte_end":562702,"line_start":368,"line_end":368,"column_start":38,"column_end":54},"kind":{"Impl":{"id":511}},"from":{"krate":0,"index":7862},"to":{"krate":2,"index":3215}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":562845,"byte_end":562861,"line_start":375,"line_end":375,"column_start":41,"column_end":57},"kind":{"Impl":{"id":512}},"from":{"krate":0,"index":7862},"to":{"krate":2,"index":3228}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":563138,"byte_end":563143,"line_start":383,"line_end":383,"column_start":40,"column_end":45},"kind":{"Impl":{"id":513}},"from":{"krate":0,"index":7783},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":563189,"byte_end":563194,"line_start":384,"line_end":384,"column_start":40,"column_end":45},"kind":{"Impl":{"id":514}},"from":{"krate":0,"index":7783},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":563361,"byte_end":563376,"line_start":388,"line_end":388,"column_start":40,"column_end":55},"kind":{"Impl":{"id":515}},"from":{"krate":0,"index":7820},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":563480,"byte_end":563495,"line_start":390,"line_end":390,"column_start":33,"column_end":48},"kind":{"Impl":{"id":516}},"from":{"krate":0,"index":7820},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":563699,"byte_end":563709,"line_start":394,"line_end":394,"column_start":40,"column_end":50},"kind":{"Impl":{"id":517}},"from":{"krate":0,"index":7839},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":563759,"byte_end":563769,"line_start":395,"line_end":395,"column_start":40,"column_end":50},"kind":{"Impl":{"id":518}},"from":{"krate":0,"index":7839},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":563837,"byte_end":563853,"line_start":396,"line_end":396,"column_start":58,"column_end":74},"kind":{"Impl":{"id":519}},"from":{"krate":0,"index":7862},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":563924,"byte_end":563940,"line_start":397,"line_end":397,"column_start":58,"column_end":74},"kind":{"Impl":{"id":520}},"from":{"krate":0,"index":7862},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/bilock.rs","byte_start":565944,"byte_end":565949,"line_start":48,"line_end":48,"column_start":31,"column_end":36},"kind":{"Impl":{"id":521}},"from":{"krate":0,"index":15505},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/bilock.rs","byte_start":565986,"byte_end":565991,"line_start":49,"line_end":49,"column_start":31,"column_end":36},"kind":{"Impl":{"id":522}},"from":{"krate":0,"index":15505},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/bilock.rs","byte_start":566007,"byte_end":566013,"line_start":51,"line_end":51,"column_start":9,"column_end":15},"kind":{"Impl":{"id":523}},"from":{"krate":0,"index":15499},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/bilock.rs","byte_start":571633,"byte_end":571638,"line_start":184,"line_end":184,"column_start":16,"column_end":21},"kind":{"Impl":{"id":524}},"from":{"krate":0,"index":15505},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/bilock.rs","byte_start":571760,"byte_end":571765,"line_start":190,"line_end":190,"column_start":18,"column_end":23},"kind":{"Impl":{"id":525}},"from":{"krate":0,"index":15505},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/bilock.rs","byte_start":572093,"byte_end":572105,"line_start":201,"line_end":201,"column_start":24,"column_end":36},"kind":{"Impl":{"id":526}},"from":{"krate":0,"index":7980},"to":{"krate":2,"index":9352}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/bilock.rs","byte_start":572269,"byte_end":572281,"line_start":207,"line_end":207,"column_start":26,"column_end":38},"kind":{"Impl":{"id":527}},"from":{"krate":0,"index":7980},"to":{"krate":2,"index":9359}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/bilock.rs","byte_start":572502,"byte_end":572514,"line_start":214,"line_end":214,"column_start":47,"column_end":59},"kind":{"Impl":{"id":528}},"from":{"krate":0,"index":7980},"to":{"krate":1,"index":2339}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/bilock.rs","byte_start":572896,"byte_end":572907,"line_start":227,"line_end":227,"column_start":19,"column_end":30},"kind":{"Impl":{"id":529}},"from":{"krate":0,"index":15512},"to":{"krate":2,"index":3215}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/bilock.rs","byte_start":573070,"byte_end":573081,"line_start":234,"line_end":234,"column_start":29,"column_end":40},"kind":{"Impl":{"id":530}},"from":{"krate":0,"index":15512},"to":{"krate":2,"index":3228}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/bilock.rs","byte_start":573219,"byte_end":573230,"line_start":240,"line_end":240,"column_start":9,"column_end":20},"kind":{"Impl":{"id":531}},"from":{"krate":0,"index":15512},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/bilock.rs","byte_start":573582,"byte_end":573593,"line_start":249,"line_end":249,"column_start":18,"column_end":29},"kind":{"Impl":{"id":532}},"from":{"krate":0,"index":15512},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":574906,"byte_end":574915,"line_start":22,"line_end":22,"column_start":9,"column_end":18},"kind":{"Impl":{"id":533}},"from":{"krate":0,"index":15520},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":577188,"byte_end":577199,"line_start":87,"line_end":87,"column_start":6,"column_end":17},"kind":{"Impl":{"id":534}},"from":{"krate":0,"index":15567},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":577982,"byte_end":577989,"line_start":112,"line_end":112,"column_start":23,"column_end":30},"kind":{"Impl":{"id":535}},"from":{"krate":0,"index":15578},"to":{"krate":2,"index":9359}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":578172,"byte_end":578179,"line_start":119,"line_end":119,"column_start":28,"column_end":35},"kind":{"Impl":{"id":536}},"from":{"krate":0,"index":15578},"to":{"krate":1,"index":2339}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":578192,"byte_end":578201,"line_start":121,"line_end":121,"column_start":9,"column_end":18},"kind":{"Impl":{"id":537}},"from":{"krate":0,"index":15520},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":579190,"byte_end":579199,"line_start":152,"line_end":152,"column_start":22,"column_end":31},"kind":{"Impl":{"id":538}},"from":{"krate":0,"index":15520},"to":{"krate":2,"index":12620}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":579438,"byte_end":579447,"line_start":163,"line_end":163,"column_start":21,"column_end":30},"kind":{"Impl":{"id":539}},"from":{"krate":0,"index":15520},"to":{"krate":18,"index":96}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":579706,"byte_end":579717,"line_start":174,"line_end":174,"column_start":6,"column_end":17},"kind":{"Impl":{"id":540}},"from":{"krate":0,"index":15567},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":580389,"byte_end":580390,"line_start":9,"line_end":9,"column_start":30,"column_end":31},"kind":{"Impl":{"id":541}},"from":{"krate":0,"index":8087},"to":{"krate":0,"index":8082}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":580529,"byte_end":580536,"line_start":19,"line_end":19,"column_start":22,"column_end":29},"kind":"SuperTrait","from":{"krate":0,"index":8082},"to":{"krate":0,"index":8092}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":580625,"byte_end":580626,"line_start":23,"line_end":23,"column_start":29,"column_end":30},"kind":{"Impl":{"id":542}},"from":{"krate":0,"index":8096},"to":{"krate":0,"index":8092}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":580812,"byte_end":580818,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"kind":"SuperTrait","from":{"krate":0,"index":8092},"to":{"krate":0,"index":8100}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":580896,"byte_end":580897,"line_start":38,"line_end":38,"column_start":26,"column_end":27},"kind":{"Impl":{"id":543}},"from":{"krate":0,"index":8104},"to":{"krate":0,"index":8100}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":581913,"byte_end":581917,"line_start":76,"line_end":76,"column_start":21,"column_end":25},"kind":{"Impl":{"id":544}},"from":{"krate":0,"index":8109},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":582011,"byte_end":582015,"line_start":82,"line_end":82,"column_start":27,"column_end":31},"kind":{"Impl":{"id":545}},"from":{"krate":0,"index":8109},"to":{"krate":0,"index":8082}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":582274,"byte_end":582281,"line_start":94,"line_end":94,"column_start":30,"column_end":37},"kind":{"Impl":{"id":551}},"from":{"krate":0,"index":15609},"to":{"krate":0,"index":8082}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":582504,"byte_end":582511,"line_start":104,"line_end":104,"column_start":29,"column_end":36},"kind":{"Impl":{"id":552}},"from":{"krate":0,"index":15609},"to":{"krate":0,"index":8092}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":582702,"byte_end":582709,"line_start":113,"line_end":113,"column_start":26,"column_end":33},"kind":{"Impl":{"id":553}},"from":{"krate":0,"index":15609},"to":{"krate":0,"index":8100}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":583014,"byte_end":583027,"line_start":129,"line_end":129,"column_start":35,"column_end":48},"kind":{"Impl":{"id":554}},"from":{"krate":0,"index":15630},"to":{"krate":0,"index":8082}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":583444,"byte_end":583453,"line_start":144,"line_end":144,"column_start":27,"column_end":36},"kind":{"Impl":{"id":560}},"from":{"krate":0,"index":15646},"to":{"krate":0,"index":8082}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":583737,"byte_end":583746,"line_start":155,"line_end":155,"column_start":26,"column_end":35},"kind":{"Impl":{"id":561}},"from":{"krate":0,"index":15646},"to":{"krate":0,"index":8092}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":584008,"byte_end":584017,"line_start":165,"line_end":165,"column_start":23,"column_end":32},"kind":{"Impl":{"id":562}},"from":{"krate":0,"index":15646},"to":{"krate":0,"index":8100}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":584339,"byte_end":584346,"line_start":181,"line_end":181,"column_start":41,"column_end":48},"kind":{"Impl":{"id":563}},"from":{"krate":0,"index":15661},"to":{"krate":0,"index":8082}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":584565,"byte_end":584572,"line_start":190,"line_end":190,"column_start":40,"column_end":47},"kind":{"Impl":{"id":564}},"from":{"krate":0,"index":15661},"to":{"krate":0,"index":8092}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":584750,"byte_end":584757,"line_start":198,"line_end":198,"column_start":37,"column_end":44},"kind":{"Impl":{"id":565}},"from":{"krate":0,"index":15661},"to":{"krate":0,"index":8100}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":585058,"byte_end":585066,"line_start":213,"line_end":213,"column_start":41,"column_end":49},"kind":{"Impl":{"id":566}},"from":{"krate":0,"index":15676},"to":{"krate":0,"index":8082}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":585289,"byte_end":585297,"line_start":222,"line_end":222,"column_start":40,"column_end":48},"kind":{"Impl":{"id":567}},"from":{"krate":0,"index":15676},"to":{"krate":0,"index":8092}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":585479,"byte_end":585487,"line_start":230,"line_end":230,"column_start":37,"column_end":45},"kind":{"Impl":{"id":568}},"from":{"krate":0,"index":15676},"to":{"krate":0,"index":8100}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":585797,"byte_end":585808,"line_start":245,"line_end":245,"column_start":49,"column_end":60},"kind":{"Impl":{"id":569}},"from":{"krate":0,"index":15691},"to":{"krate":0,"index":8082}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":586068,"byte_end":586079,"line_start":256,"line_end":256,"column_start":48,"column_end":59},"kind":{"Impl":{"id":570}},"from":{"krate":0,"index":15691},"to":{"krate":0,"index":8092}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":586316,"byte_end":586327,"line_start":266,"line_end":266,"column_start":45,"column_end":56},"kind":{"Impl":{"id":571}},"from":{"krate":0,"index":15691},"to":{"krate":0,"index":8100}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":586694,"byte_end":586706,"line_start":283,"line_end":283,"column_start":49,"column_end":61},"kind":{"Impl":{"id":572}},"from":{"krate":0,"index":15703},"to":{"krate":0,"index":8082}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":586967,"byte_end":586979,"line_start":294,"line_end":294,"column_start":48,"column_end":60},"kind":{"Impl":{"id":573}},"from":{"krate":0,"index":15703},"to":{"krate":0,"index":8092}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":587217,"byte_end":587229,"line_start":304,"line_end":304,"column_start":45,"column_end":57},"kind":{"Impl":{"id":574}},"from":{"krate":0,"index":15703},"to":{"krate":0,"index":8100}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":587848,"byte_end":587862,"line_start":326,"line_end":326,"column_start":41,"column_end":55},"kind":{"Impl":{"id":575}},"from":{"krate":0,"index":15715},"to":{"krate":0,"index":8082}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":588085,"byte_end":588099,"line_start":335,"line_end":335,"column_start":40,"column_end":54},"kind":{"Impl":{"id":576}},"from":{"krate":0,"index":15715},"to":{"krate":0,"index":8092}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":588300,"byte_end":588314,"line_start":343,"line_end":343,"column_start":37,"column_end":51},"kind":{"Impl":{"id":577}},"from":{"krate":0,"index":15715},"to":{"krate":0,"index":8100}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":588620,"byte_end":588626,"line_start":357,"line_end":357,"column_start":21,"column_end":27},"kind":{"Impl":{"id":578}},"from":{"krate":0,"index":8273},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":588719,"byte_end":588725,"line_start":362,"line_end":362,"column_start":27,"column_end":33},"kind":{"Impl":{"id":579}},"from":{"krate":0,"index":8273},"to":{"krate":0,"index":8082}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/unfold_state.rs","byte_start":589330,"byte_end":589341,"line_start":22,"line_end":22,"column_start":12,"column_end":23},"kind":{"Impl":{"id":585}},"from":{"krate":0,"index":15748},"to":{"krate":4294967295,"index":4294967295}}]}