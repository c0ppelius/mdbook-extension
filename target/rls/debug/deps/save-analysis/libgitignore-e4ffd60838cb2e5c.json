{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7","program":"/Users/matt/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","gitignore","/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=e4ffd60838cb2e5c","-C","extra-filename=-e4ffd60838cb2e5c","--out-dir","/Users/matt/GitHub/mdbook-latexy/target/rls/debug/deps","-L","dependency=/Users/matt/GitHub/mdbook-latexy/target/rls/debug/deps","--extern","glob=/Users/matt/GitHub/mdbook-latexy/target/rls/debug/deps/libglob-0aa6166e3ad889f7.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/matt/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/matt/GitHub/mdbook-latexy/target/rls/debug/deps/libgitignore-e4ffd60838cb2e5c.rmeta"},"prelude":{"crate_id":{"name":"gitignore","disambiguator":[13680615781519036335,0]},"crate_root":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src","external_crates":[{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[5327680806253035642,0]}},{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[3474867148648759986,0]}},{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[5062925168166713036,0]}},{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[2981460363035574205,0]}},{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[17736094580601255721,0]}},{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[10052842426541007562,0]}},{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9489815130599098901,0]}},{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[3346726902215706372,0]}},{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[3873550637736747779,0]}},{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4549466995013025454,0]}},{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[5157751798851432137,0]}},{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[17289477099079096810,0]}},{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[9019874491848494796,0]}},{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[5361552711123437457,0]}},{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[1973549709176203698,0]}},{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[16289716248128265453,0]}},{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[1392457260957006495,0]}},{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/error.rs","num":18,"id":{"name":"glob","disambiguator":[9780568434035977755,0]}}],"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/lib.rs","byte_start":0,"byte_end":1149,"line_start":1,"line_end":25,"column_start":1,"column_end":13}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":23},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/lib.rs","byte_start":1062,"byte_end":1067,"line_start":19,"line_end":19,"column_start":16,"column_end":21},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":92},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/lib.rs","byte_start":1083,"byte_end":1087,"line_start":20,"line_end":20,"column_start":15,"column_end":19},"alias_span":null,"name":"File","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":99},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/lib.rs","byte_start":1106,"byte_end":1113,"line_start":21,"line_end":21,"column_start":18,"column_end":25},"alias_span":null,"name":"Pattern","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/lib.rs","byte_start":0,"byte_end":1149,"line_start":1,"line_end":25,"column_start":1,"column_end":13},"name":"","qualname":"::","value":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":12},{"krate":0,"index":36},{"krate":0,"index":67}],"decl_id":null,"docs":" Support for loading, parsing and matching paths against the rules in a `.gitignore` file.","sig":null,"attributes":[{"value":"/ Support for loading, parsing and matching paths against the rules in a `.gitignore` file.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/lib.rs","byte_start":0,"byte_end":93,"line_start":1,"line_end":1,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/lib.rs","byte_start":94,"byte_end":97,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This create has been specifically crafted to have no dependencies on Git itself - all you need","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/lib.rs","byte_start":98,"byte_end":196,"line_start":3,"line_end":3,"column_start":1,"column_end":99}},{"value":"/ is a directory with a ``.gitignore` file in it, and a path you want to check is excluded by","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/lib.rs","byte_start":197,"byte_end":292,"line_start":4,"line_end":4,"column_start":1,"column_end":96}},{"value":"/ some rule in the file.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/lib.rs","byte_start":293,"byte_end":319,"line_start":5,"line_end":5,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/lib.rs","byte_start":320,"byte_end":323,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ All of the patterns described in the [man page for the .gitignore format](https://www.kernel.org/pub/software/scm/git/docs/gitignore.html),","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/lib.rs","byte_start":324,"byte_end":467,"line_start":7,"line_end":7,"column_start":1,"column_end":144}},{"value":"/ (specifically, in the [\"Pattern Format\" section](https://www.kernel.org/pub/software/scm/git/docs/gitignore.html#_pattern_format))","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/lib.rs","byte_start":468,"byte_end":602,"line_start":8,"line_end":8,"column_start":1,"column_end":135}},{"value":"/ are implemented. This crate currently does not support auto-loading patterns from","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/lib.rs","byte_start":603,"byte_end":688,"line_start":9,"line_end":9,"column_start":1,"column_end":86}},{"value":"/ `$GIT_DIR/info/exclude` or from the file specified by the Git configuration variable","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/lib.rs","byte_start":689,"byte_end":777,"line_start":10,"line_end":10,"column_start":1,"column_end":89}},{"value":"/ `core.excludesFile` (the user excludes file); rather, it will only load patterns specified in","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/lib.rs","byte_start":778,"byte_end":875,"line_start":11,"line_end":11,"column_start":1,"column_end":98}},{"value":"/ the `.gitignore` file in the given directory.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/lib.rs","byte_start":876,"byte_end":925,"line_start":12,"line_end":12,"column_start":1,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":23},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/error.rs","byte_start":1292,"byte_end":1297,"line_start":9,"line_end":9,"column_start":12,"column_end":17},"name":"Error","qualname":"::error::Error","value":"Error {  }","parent":null,"children":[{"krate":0,"index":24}],"decl_id":null,"docs":" Encapsulates all the types of errors this crate can produce.\n","sig":null,"attributes":[{"value":"/ Encapsulates all the types of errors this crate can produce.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/error.rs","byte_start":1216,"byte_end":1280,"line_start":8,"line_end":8,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":92},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/file.rs","byte_start":3244,"byte_end":3248,"line_start":22,"line_end":22,"column_start":12,"column_end":16},"name":"File","qualname":"::file::File","value":"File {  }","parent":null,"children":[{"krate":0,"index":94},{"krate":0,"index":95}],"decl_id":null,"docs":" Represents a `.gitignore` file. Use this to load the `.gitignore` file, parse the patterns,\n and then check if a given path would be excluded by any rules contained therein.","sig":null,"attributes":[{"value":"/ Represents a `.gitignore` file. Use this to load the `.gitignore` file, parse the patterns,","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/file.rs","byte_start":2694,"byte_end":2789,"line_start":8,"line_end":8,"column_start":1,"column_end":96}},{"value":"/ and then check if a given path would be excluded by any rules contained therein.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/file.rs","byte_start":2790,"byte_end":2874,"line_start":9,"line_end":9,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/file.rs","byte_start":2875,"byte_end":2878,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/file.rs","byte_start":2879,"byte_end":2893,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/file.rs","byte_start":2894,"byte_end":2897,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/file.rs","byte_start":2898,"byte_end":2905,"line_start":13,"line_end":13,"column_start":1,"column_end":8}},{"value":"/ # use std::env;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/file.rs","byte_start":2906,"byte_end":2925,"line_start":14,"line_end":14,"column_start":1,"column_end":20}},{"value":"/ # let pwd = env::current_dir().unwrap();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/file.rs","byte_start":2926,"byte_end":2970,"line_start":15,"line_end":15,"column_start":1,"column_end":45}},{"value":"/ # let gitignore_path = pwd.join(\".gitignore\");","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/file.rs","byte_start":2971,"byte_end":3021,"line_start":16,"line_end":16,"column_start":1,"column_end":51}},{"value":"/ let file = gitignore::File::new(&gitignore_path).unwrap();","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/file.rs","byte_start":3022,"byte_end":3084,"line_start":17,"line_end":17,"column_start":1,"column_end":63}},{"value":"/ # let path_to_test_if_excluded = pwd.join(\"target\");","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/file.rs","byte_start":3085,"byte_end":3141,"line_start":18,"line_end":18,"column_start":1,"column_end":57}},{"value":"/ assert!(file.is_excluded(&path_to_test_if_excluded).unwrap())","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/file.rs","byte_start":3142,"byte_end":3207,"line_start":19,"line_end":19,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/file.rs","byte_start":3208,"byte_end":3215,"line_start":20,"line_end":20,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/file.rs","byte_start":3575,"byte_end":3578,"line_start":32,"line_end":32,"column_start":12,"column_end":15},"name":"new","qualname":"<File>::new","value":"pub fn new(&'b Path) -> Result<File, error::Error>","parent":null,"children":[],"decl_id":null,"docs":" Parse the given `.gitignore` file for patterns, allowing any arbitrary path to be checked\n against the set of rules to test for exclusion.","sig":null,"attributes":[{"value":"/ Parse the given `.gitignore` file for patterns, allowing any arbitrary path to be checked","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/file.rs","byte_start":3342,"byte_end":3435,"line_start":28,"line_end":28,"column_start":5,"column_end":98}},{"value":"/ against the set of rules to test for exclusion.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/file.rs","byte_start":3440,"byte_end":3491,"line_start":29,"line_end":29,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/file.rs","byte_start":3496,"byte_end":3499,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ The value of `gitignore_path` must be an absolute path.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/file.rs","byte_start":3504,"byte_end":3563,"line_start":31,"line_end":31,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/file.rs","byte_start":4204,"byte_end":4215,"line_start":45,"line_end":45,"column_start":12,"column_end":23},"name":"is_excluded","qualname":"<File>::is_excluded","value":"pub fn is_excluded(&Self, &'b Path) -> Result<bool, error::Error>","parent":null,"children":[],"decl_id":null,"docs":" Returns true if, after checking against all the patterns found in the `.gitignore` file,\n the given path is matched any of the globs (applying negated patterns as expected). Note\n this function also returns false if the path does not exist.","sig":null,"attributes":[{"value":"/ Returns true if, after checking against all the patterns found in the `.gitignore` file,","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/file.rs","byte_start":3804,"byte_end":3896,"line_start":39,"line_end":39,"column_start":5,"column_end":97}},{"value":"/ the given path is matched any of the globs (applying negated patterns as expected). Note","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/file.rs","byte_start":3901,"byte_end":3993,"line_start":40,"line_end":40,"column_start":5,"column_end":97}},{"value":"/ this function also returns false if the path does not exist.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/file.rs","byte_start":3998,"byte_end":4062,"line_start":41,"line_end":41,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/file.rs","byte_start":4067,"byte_end":4070,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ If the value for `path` is not absolute, it will assumed to be relative to the current","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/file.rs","byte_start":4075,"byte_end":4165,"line_start":43,"line_end":43,"column_start":5,"column_end":95}},{"value":"/ working directory.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/file.rs","byte_start":4170,"byte_end":4192,"line_start":44,"line_end":44,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/file.rs","byte_start":4568,"byte_end":4582,"line_start":52,"line_end":52,"column_start":12,"column_end":26},"name":"included_files","qualname":"<File>::included_files","value":"pub fn included_files(&Self) -> Result<Vec<PathBuf>, error::Error>","parent":null,"children":[],"decl_id":null,"docs":" Returns a list of files that are not excluded by the rules in the loaded\n `.gitignore` file. It recurses through all subdirectories and returns\n everything that is not ignored.\n","sig":null,"attributes":[{"value":"/ Returns a list of files that are not excluded by the rules in the loaded","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/file.rs","byte_start":4362,"byte_end":4438,"line_start":49,"line_end":49,"column_start":5,"column_end":81}},{"value":"/ `.gitignore` file. It recurses through all subdirectories and returns","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/file.rs","byte_start":4443,"byte_end":4516,"line_start":50,"line_end":50,"column_start":5,"column_end":78}},{"value":"/ everything that is not ignored.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/file.rs","byte_start":4521,"byte_end":4556,"line_start":51,"line_end":51,"column_start":5,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":99},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/pattern.rs","byte_start":12539,"byte_end":12546,"line_start":9,"line_end":9,"column_start":12,"column_end":19},"name":"Pattern","qualname":"::pattern::Pattern","value":"Pattern { pattern, anchored, negation }","parent":null,"children":[{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105}],"decl_id":null,"docs":" A pattern as found in a `.gitignore` file.\n","sig":null,"attributes":[{"value":"/ A pattern as found in a `.gitignore` file.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/pattern.rs","byte_start":12464,"byte_end":12510,"line_start":7,"line_end":7,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":101},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/pattern.rs","byte_start":12698,"byte_end":12705,"line_start":12,"line_end":12,"column_start":9,"column_end":16},"name":"pattern","qualname":"::pattern::Pattern::pattern","value":"error::glob::Pattern","parent":{"krate":0,"index":99},"children":[],"decl_id":null,"docs":" The glob pattern after being parsed, negation or trailing directory slashes removed,\n and the root prepended if anchored.\n","sig":null,"attributes":[{"value":"/ The glob pattern after being parsed, negation or trailing directory slashes removed,","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/pattern.rs","byte_start":12557,"byte_end":12645,"line_start":10,"line_end":10,"column_start":5,"column_end":93}},{"value":"/ and the root prepended if anchored.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/pattern.rs","byte_start":12650,"byte_end":12689,"line_start":11,"line_end":11,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":102},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/pattern.rs","byte_start":12901,"byte_end":12909,"line_start":15,"line_end":15,"column_start":9,"column_end":17},"name":"anchored","qualname":"::pattern::Pattern::anchored","value":"bool","parent":{"krate":0,"index":99},"children":[],"decl_id":null,"docs":" Whether the pattern had the root prepended so the matches must be within the root\n directory. That is to say, whether the pattern was anchored to the root.\n","sig":null,"attributes":[{"value":"/ Whether the pattern had the root prepended so the matches must be within the root","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/pattern.rs","byte_start":12726,"byte_end":12811,"line_start":13,"line_end":13,"column_start":5,"column_end":90}},{"value":"/ directory. That is to say, whether the pattern was anchored to the root.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/pattern.rs","byte_start":12816,"byte_end":12892,"line_start":14,"line_end":14,"column_start":5,"column_end":81}}]},{"kind":"Field","id":{"krate":0,"index":103},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/pattern.rs","byte_start":13086,"byte_end":13094,"line_start":18,"line_end":18,"column_start":9,"column_end":17},"name":"negation","qualname":"::pattern::Pattern::negation","value":"bool","parent":{"krate":0,"index":99},"children":[],"decl_id":null,"docs":" Whether the pattern should, if it matches, negate any previously matching patterns. This\n flag has no effect if no previous patterns had matched.\n","sig":null,"attributes":[{"value":"/ Whether the pattern should, if it matches, negate any previously matching patterns. This","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/pattern.rs","byte_start":12921,"byte_end":13013,"line_start":16,"line_end":16,"column_start":5,"column_end":97}},{"value":"/ flag has no effect if no previous patterns had matched.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/pattern.rs","byte_start":13018,"byte_end":13077,"line_start":17,"line_end":17,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/pattern.rs","byte_start":13321,"byte_end":13324,"line_start":27,"line_end":27,"column_start":12,"column_end":15},"name":"new","qualname":"<Pattern>::new","value":"pub fn new(&str, &'c Path) -> Result<Pattern, error::Error>","parent":null,"children":[],"decl_id":null,"docs":" Create a new pattern from the raw glob as found in a `.gitignore` file.","sig":null,"attributes":[{"value":"/ Create a new pattern from the raw glob as found in a `.gitignore` file.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/pattern.rs","byte_start":13172,"byte_end":13247,"line_start":24,"line_end":24,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/pattern.rs","byte_start":13252,"byte_end":13255,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ The value of `root` must be an absolute path.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/pattern.rs","byte_start":13260,"byte_end":13309,"line_start":26,"line_end":26,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/pattern.rs","byte_start":14699,"byte_end":14710,"line_start":59,"line_end":59,"column_start":12,"column_end":23},"name":"is_excluded","qualname":"<Pattern>::is_excluded","value":"pub fn is_excluded(&Self, &Path, bool) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the given path is matched by the current pattern, and hence would be\n excluded if found in a `.gitignore` file. The second argument, `directory`, is a `bool`\n representing whether the given path is a directory - if so, it should be set to `true`,\n otherwise `false` if not (eg. file, special file, symlink).","sig":null,"attributes":[{"value":"/ Returns true if the given path is matched by the current pattern, and hence would be","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/pattern.rs","byte_start":14051,"byte_end":14139,"line_start":49,"line_end":49,"column_start":5,"column_end":93}},{"value":"/ excluded if found in a `.gitignore` file. The second argument, `directory`, is a `bool`","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/pattern.rs","byte_start":14144,"byte_end":14235,"line_start":50,"line_end":50,"column_start":5,"column_end":96}},{"value":"/ representing whether the given path is a directory - if so, it should be set to `true`,","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/pattern.rs","byte_start":14240,"byte_end":14331,"line_start":51,"line_end":51,"column_start":5,"column_end":96}},{"value":"/ otherwise `false` if not (eg. file, special file, symlink).","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/pattern.rs","byte_start":14336,"byte_end":14399,"line_start":52,"line_end":52,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/pattern.rs","byte_start":14404,"byte_end":14407,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Note that if the glob was negated (ie. of the format `! some/glob/*.here`) then this will","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/pattern.rs","byte_start":14412,"byte_end":14505,"line_start":54,"line_end":54,"column_start":5,"column_end":98}},{"value":"/ return the opposite value, eg. `false` if the pattern matched, and `true` if the pattern","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/pattern.rs","byte_start":14510,"byte_end":14602,"line_start":55,"line_end":55,"column_start":5,"column_end":97}},{"value":"/ did not match.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/pattern.rs","byte_start":14607,"byte_end":14625,"line_start":56,"line_end":56,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/pattern.rs","byte_start":14630,"byte_end":14633,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ The value of `path` must be an absolute path.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/pattern.rs","byte_start":14638,"byte_end":14687,"line_start":58,"line_end":58,"column_start":5,"column_end":54}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/error.rs","byte_start":1448,"byte_end":1453,"line_start":19,"line_end":19,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":26}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/error.rs","byte_start":1591,"byte_end":1596,"line_start":25,"line_end":25,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":28}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/error.rs","byte_start":1736,"byte_end":1741,"line_start":31,"line_end":31,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":30},{"krate":0,"index":31}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/error.rs","byte_start":2159,"byte_end":2164,"line_start":47,"line_end":47,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":33}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/error.rs","byte_start":2482,"byte_end":2487,"line_start":60,"line_end":60,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":35}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/file.rs","byte_start":3327,"byte_end":3331,"line_start":27,"line_end":27,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":64},{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/pattern.rs","byte_start":13154,"byte_end":13161,"line_start":23,"line_end":23,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/error.rs","byte_start":1448,"byte_end":1453,"line_start":19,"line_end":19,"column_start":26,"column_end":31},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":23},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/error.rs","byte_start":1591,"byte_end":1596,"line_start":25,"line_end":25,"column_start":35,"column_end":40},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":23},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/error.rs","byte_start":1736,"byte_end":1741,"line_start":31,"line_end":31,"column_start":23,"column_end":28},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":23},"to":{"krate":1,"index":2339}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/error.rs","byte_start":2159,"byte_end":2164,"line_start":47,"line_end":47,"column_start":23,"column_end":28},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":23},"to":{"krate":2,"index":9359}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/error.rs","byte_start":2482,"byte_end":2487,"line_start":60,"line_end":60,"column_start":21,"column_end":26},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":23},"to":{"krate":2,"index":9352}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/file.rs","byte_start":3327,"byte_end":3331,"line_start":27,"line_end":27,"column_start":10,"column_end":14},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":92},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/gitignore-1.0.7/src/pattern.rs","byte_start":13154,"byte_end":13161,"line_start":23,"line_end":23,"column_start":10,"column_end":17},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":99},"to":{"krate":4294967295,"index":4294967295}}]}