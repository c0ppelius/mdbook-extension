{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/opener-0.5.0","program":"/Users/matt/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","opener","--edition=2018","/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/opener-0.5.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=96f2935ee2cc474a","-C","extra-filename=-96f2935ee2cc474a","--out-dir","/Users/matt/GitHub/mdbook-latexy/target/rls/debug/deps","-L","dependency=/Users/matt/GitHub/mdbook-latexy/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/Users/matt/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/matt/GitHub/mdbook-latexy/target/rls/debug/deps/libopener-96f2935ee2cc474a.rmeta"},"prelude":{"crate_id":{"name":"opener","disambiguator":[15740263550218479015,0]},"crate_root":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/opener-0.5.0/src","external_crates":[{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/opener-0.5.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[5327680806253035642,0]}},{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/opener-0.5.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[3474867148648759986,0]}},{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/opener-0.5.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[5062925168166713036,0]}},{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/opener-0.5.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[2981460363035574205,0]}},{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/opener-0.5.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[17736094580601255721,0]}},{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/opener-0.5.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[10052842426541007562,0]}},{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/opener-0.5.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9489815130599098901,0]}},{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/opener-0.5.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[3346726902215706372,0]}},{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/opener-0.5.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[3873550637736747779,0]}},{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/opener-0.5.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4549466995013025454,0]}},{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/opener-0.5.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[5157751798851432137,0]}},{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/opener-0.5.0/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[17289477099079096810,0]}},{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/opener-0.5.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[9019874491848494796,0]}},{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/opener-0.5.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[5361552711123437457,0]}},{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/opener-0.5.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[1973549709176203698,0]}},{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/opener-0.5.0/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[16289716248128265453,0]}},{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/opener-0.5.0/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[1392457260957006495,0]}}],"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/opener-0.5.0/src/lib.rs","byte_start":0,"byte_end":6468,"line_start":1,"line_end":224,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/opener-0.5.0/src/lib.rs","byte_start":0,"byte_end":6468,"line_start":1,"line_end":224,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/opener-0.5.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":28},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":45},{"krate":0,"index":48},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":55},{"krate":0,"index":58},{"krate":0,"index":60},{"krate":0,"index":72},{"krate":0,"index":80},{"krate":0,"index":62},{"krate":0,"index":64},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68}],"decl_id":null,"docs":" This crate provides the [`open`] function, which opens a file or link with the default program\n configured on the system:","sig":null,"attributes":[{"value":"/ This crate provides the [`open`] function, which opens a file or link with the default program","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/opener-0.5.0/src/lib.rs","byte_start":57,"byte_end":155,"line_start":3,"line_end":3,"column_start":1,"column_end":99}},{"value":"/ configured on the system:","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/opener-0.5.0/src/lib.rs","byte_start":156,"byte_end":185,"line_start":4,"line_end":4,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/opener-0.5.0/src/lib.rs","byte_start":186,"byte_end":189,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/opener-0.5.0/src/lib.rs","byte_start":190,"byte_end":203,"line_start":6,"line_end":6,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> Result<(), ::opener::OpenError> {","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/opener-0.5.0/src/lib.rs","byte_start":204,"byte_end":256,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"/ // open a website","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/opener-0.5.0/src/lib.rs","byte_start":257,"byte_end":278,"line_start":8,"line_end":8,"column_start":1,"column_end":22}},{"value":"/ opener::open(\"https://www.rust-lang.org\")?;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/opener-0.5.0/src/lib.rs","byte_start":279,"byte_end":326,"line_start":9,"line_end":9,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/opener-0.5.0/src/lib.rs","byte_start":327,"byte_end":330,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ // open a file","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/opener-0.5.0/src/lib.rs","byte_start":331,"byte_end":349,"line_start":11,"line_end":11,"column_start":1,"column_end":19}},{"value":"/ opener::open(\"../Cargo.toml\")?;","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/opener-0.5.0/src/lib.rs","byte_start":350,"byte_end":385,"line_start":12,"line_end":12,"column_start":1,"column_end":36}},{"value":"/ # Ok(())","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/opener-0.5.0/src/lib.rs","byte_start":386,"byte_end":398,"line_start":13,"line_end":13,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/opener-0.5.0/src/lib.rs","byte_start":399,"byte_end":406,"line_start":14,"line_end":14,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/opener-0.5.0/src/lib.rs","byte_start":407,"byte_end":414,"line_start":15,"line_end":15,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/opener-0.5.0/src/lib.rs","byte_start":415,"byte_end":418,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ An [`open_browser`] function is also provided, for when you intend on opening a file or link in a","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/opener-0.5.0/src/lib.rs","byte_start":419,"byte_end":520,"line_start":17,"line_end":17,"column_start":1,"column_end":102}},{"value":"/ browser, specifically. This function works like the [`open`] function, but explicitly allows","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/opener-0.5.0/src/lib.rs","byte_start":521,"byte_end":617,"line_start":18,"line_end":18,"column_start":1,"column_end":97}},{"value":"/ overriding the browser launched by setting the `$BROWSER` environment variable.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/opener-0.5.0/src/lib.rs","byte_start":618,"byte_end":701,"line_start":19,"line_end":19,"column_start":1,"column_end":84}},{"value":"warn(rust_2018_idioms, deprecated_in_future, macro_use_extern_crate,\n       missing_debug_implementations, unused_qualifications)","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/opener-0.5.0/src/lib.rs","byte_start":703,"byte_end":851,"line_start":21,"line_end":27,"column_start":1,"column_end":3}}]},{"kind":"Function","id":{"krate":0,"index":58},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/opener-0.5.0/src/lib.rs","byte_start":2538,"byte_end":2542,"line_start":70,"line_end":70,"column_start":8,"column_end":12},"name":"open","qualname":"::open","value":"pub fn open<P>(P) -> Result<(), OpenError> where P: AsRef<OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Opens a file or link with the system default program.","sig":null,"attributes":[{"value":"/ Opens a file or link with the system default program.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/opener-0.5.0/src/lib.rs","byte_start":1390,"byte_end":1447,"line_start":49,"line_end":49,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/opener-0.5.0/src/lib.rs","byte_start":1448,"byte_end":1451,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Note that a path like \"rustup.rs\" could potentially refer to either a file or a website. If you","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/opener-0.5.0/src/lib.rs","byte_start":1452,"byte_end":1551,"line_start":51,"line_end":51,"column_start":1,"column_end":100}},{"value":"/ want to open the website, you should add the \"http://\" prefix, for example.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/opener-0.5.0/src/lib.rs","byte_start":1552,"byte_end":1631,"line_start":52,"line_end":52,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/opener-0.5.0/src/lib.rs","byte_start":1632,"byte_end":1635,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ Also note that a result of `Ok(())` just means a way of opening the path was found, and no error","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/opener-0.5.0/src/lib.rs","byte_start":1636,"byte_end":1736,"line_start":54,"line_end":54,"column_start":1,"column_end":101}},{"value":"/ occurred as a direct result of opening the path. Errors beyond that point aren't caught. For","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/opener-0.5.0/src/lib.rs","byte_start":1737,"byte_end":1833,"line_start":55,"line_end":55,"column_start":1,"column_end":97}},{"value":"/ example, `Ok(())` would be returned even if a file was opened with a program that can't read the","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/opener-0.5.0/src/lib.rs","byte_start":1834,"byte_end":1934,"line_start":56,"line_end":56,"column_start":1,"column_end":101}},{"value":"/ file, or a dead link was opened in a browser.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/opener-0.5.0/src/lib.rs","byte_start":1935,"byte_end":1984,"line_start":57,"line_end":57,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/opener-0.5.0/src/lib.rs","byte_start":1985,"byte_end":1988,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ ## Platform Implementation Details","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/opener-0.5.0/src/lib.rs","byte_start":1989,"byte_end":2027,"line_start":59,"line_end":59,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/opener-0.5.0/src/lib.rs","byte_start":2028,"byte_end":2031,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ - On Windows the `ShellExecuteW` Windows API function is used.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/opener-0.5.0/src/lib.rs","byte_start":2032,"byte_end":2098,"line_start":61,"line_end":61,"column_start":1,"column_end":67}},{"value":"/ - On Mac the system `open` command is used.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/opener-0.5.0/src/lib.rs","byte_start":2099,"byte_end":2146,"line_start":62,"line_end":62,"column_start":1,"column_end":48}},{"value":"/ - On Windows Subsystem for Linux (WSL), the system `wslview` from [`wslu`] is used if available,","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/opener-0.5.0/src/lib.rs","byte_start":2147,"byte_end":2247,"line_start":63,"line_end":63,"column_start":1,"column_end":101}},{"value":"/ otherwise the system `xdg-open` is used, if available.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/opener-0.5.0/src/lib.rs","byte_start":2248,"byte_end":2306,"line_start":64,"line_end":64,"column_start":1,"column_end":59}},{"value":"/ - On non-WSL Linux and other platforms,","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/opener-0.5.0/src/lib.rs","byte_start":2307,"byte_end":2350,"line_start":65,"line_end":65,"column_start":1,"column_end":44}},{"value":"/ the system `xdg-open` script is used if available, otherwise an `xdg-open` script embedded in","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/opener-0.5.0/src/lib.rs","byte_start":2351,"byte_end":2448,"line_start":66,"line_end":66,"column_start":1,"column_end":98}},{"value":"/ this library is used.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/opener-0.5.0/src/lib.rs","byte_start":2449,"byte_end":2474,"line_start":67,"line_end":67,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/opener-0.5.0/src/lib.rs","byte_start":2475,"byte_end":2478,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ [`wslu`]: https://github.com/wslutilities/wslu/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/opener-0.5.0/src/lib.rs","byte_start":2479,"byte_end":2530,"line_start":69,"line_end":69,"column_start":1,"column_end":52}}]},{"kind":"Function","id":{"krate":0,"index":60},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/opener-0.5.0/src/lib.rs","byte_start":2918,"byte_end":2930,"line_start":82,"line_end":82,"column_start":8,"column_end":20},"name":"open_browser","qualname":"::open_browser","value":"pub fn open_browser<P>(P) -> Result<(), OpenError> where P: AsRef<OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Opens a file or link with the system default program, using the `BROWSER` environment variable\n when set.","sig":null,"attributes":[{"value":"/ Opens a file or link with the system default program, using the `BROWSER` environment variable","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/opener-0.5.0/src/lib.rs","byte_start":2641,"byte_end":2739,"line_start":77,"line_end":77,"column_start":1,"column_end":99}},{"value":"/ when set.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/opener-0.5.0/src/lib.rs","byte_start":2740,"byte_end":2753,"line_start":78,"line_end":78,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/opener-0.5.0/src/lib.rs","byte_start":2754,"byte_end":2757,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ If the `BROWSER` environment variable is set, the program specified by it is used to open the","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/opener-0.5.0/src/lib.rs","byte_start":2758,"byte_end":2855,"line_start":80,"line_end":80,"column_start":1,"column_end":98}},{"value":"/ path. If not, behavior is identical to [`open()`].","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/opener-0.5.0/src/lib.rs","byte_start":2856,"byte_end":2910,"line_start":81,"line_end":81,"column_start":1,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":73},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/opener-0.5.0/src/lib.rs","byte_start":3875,"byte_end":3877,"line_start":117,"line_end":117,"column_start":5,"column_end":7},"name":"Io","qualname":"::OpenError::Io","value":"OpenError::Io(io::Error)","parent":{"krate":0,"index":72},"children":[],"decl_id":null,"docs":" An IO error occurred.\n","sig":null,"attributes":[{"value":"/ An IO error occurred.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/opener-0.5.0/src/lib.rs","byte_start":3845,"byte_end":3870,"line_start":116,"line_end":116,"column_start":5,"column_end":30}}]},{"kind":"StructVariant","id":{"krate":0,"index":76},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/opener-0.5.0/src/lib.rs","byte_start":3949,"byte_end":3959,"line_start":120,"line_end":120,"column_start":5,"column_end":15},"name":"ExitStatus","qualname":"::OpenError::ExitStatus","value":"OpenError::ExitStatus { cmd, status, stderr }","parent":{"krate":0,"index":72},"children":[],"decl_id":null,"docs":" A command exited with a non-zero exit status.\n","sig":null,"attributes":[{"value":"/ A command exited with a non-zero exit status.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/opener-0.5.0/src/lib.rs","byte_start":3895,"byte_end":3944,"line_start":119,"line_end":119,"column_start":5,"column_end":54}}]},{"kind":"Enum","id":{"krate":0,"index":72},"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/opener-0.5.0/src/lib.rs","byte_start":3829,"byte_end":3838,"line_start":115,"line_end":115,"column_start":10,"column_end":19},"name":"OpenError","qualname":"::OpenError","value":"pub enum OpenError {\n    Io(io::Error),\n    ExitStatus {\n        cmd: &'static str,\n        status: ExitStatus,\n        stderr: String,\n    },\n}","parent":null,"children":[{"krate":0,"index":73},{"krate":0,"index":76}],"decl_id":null,"docs":" An error type representing the failure to open a path. Possibly returned by the [`open`]\n function.","sig":null,"attributes":[{"value":"/ An error type representing the failure to open a path. Possibly returned by the [`open`]","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/opener-0.5.0/src/lib.rs","byte_start":3628,"byte_end":3720,"line_start":110,"line_end":110,"column_start":1,"column_end":93}},{"value":"/ function.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/opener-0.5.0/src/lib.rs","byte_start":3721,"byte_end":3734,"line_start":111,"line_end":111,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/opener-0.5.0/src/lib.rs","byte_start":3735,"byte_end":3738,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ The `ExitStatus` variant will never be returned on Windows.","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/opener-0.5.0/src/lib.rs","byte_start":3739,"byte_end":3802,"line_start":113,"line_end":113,"column_start":1,"column_end":64}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/opener-0.5.0/src/lib.rs","byte_start":4216,"byte_end":4225,"line_start":132,"line_end":132,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/opener-0.5.0/src/lib.rs","byte_start":4919,"byte_end":4928,"line_start":160,"line_end":160,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/opener-0.5.0/src/lib.rs","byte_start":4216,"byte_end":4225,"line_start":132,"line_end":132,"column_start":18,"column_end":27},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":72},"to":{"krate":2,"index":9359}},{"span":{"file_name":"/Users/matt/.cargo/registry/src/github.com-1ecc6299db9ec823/opener-0.5.0/src/lib.rs","byte_start":4919,"byte_end":4928,"line_start":160,"line_end":160,"column_start":16,"column_end":25},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":72},"to":{"krate":1,"index":2339}}]}